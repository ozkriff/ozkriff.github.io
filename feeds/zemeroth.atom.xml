<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ozkriff's devlog - zemeroth</title><link href="http://ozkriff.github.io/" rel="alternate"></link><link href="http://ozkriff.github.io/feeds/zemeroth.atom.xml" rel="self"></link><id>http://ozkriff.github.io/</id><updated>2017-12-01T00:00:00+03:00</updated><entry><title>Jokers, Rancor, Blood and more</title><link href="http://ozkriff.github.io/2017-12-01--devlog.html" rel="alternate"></link><published>2017-12-01T00:00:00+03:00</published><updated>2017-12-01T00:00:00+03:00</updated><author><name>ozkriff</name></author><id>tag:ozkriff.github.io,2017-12-01:/2017-12-01--devlog.html</id><summary type="html">&lt;p&gt;Hi, comrades! Welcome to the second issue of Zemeroth's devlog.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth"&gt;Zemeroth&lt;/a&gt; is a turn-based hexagonal tactical game written in Rust.&lt;/p&gt;
&lt;p&gt;It slowly grows into a middle-sized project:
&lt;a href="https://github.com/ozkriff/zemeroth"&gt;Zemeroth&lt;/a&gt; has &lt;a href="https://github.com/Aaronepower/tokei"&gt;4.3k LoCs&lt;/a&gt; and 82üåü now.
Though I still can't find enough free time to work on it on daily basis ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi, comrades! Welcome to the second issue of Zemeroth's devlog.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth"&gt;Zemeroth&lt;/a&gt; is a turn-based hexagonal tactical game written in Rust.&lt;/p&gt;
&lt;p&gt;It slowly grows into a middle-sized project:
&lt;a href="https://github.com/ozkriff/zemeroth"&gt;Zemeroth&lt;/a&gt; has &lt;a href="https://github.com/Aaronepower/tokei"&gt;4.3k LoCs&lt;/a&gt; and 82üåü now.
Though I still can't find enough free time to work on it on daily basis
and I have to take weeks-long breaks sometimes.&lt;/p&gt;
&lt;p&gt;So, the progress is quite slow üêå but still,
I've managed to do some amount of useful stuff during last three months.
Here's a show video of how the game looks right now:&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe frameborder="0" allowfullscreen src="https://www.youtube.com/embed/XrC4eCqspUo?rel=0&amp;showinfo=0"&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;Ok, let's talk about what exactly have I done for the project during this autumn.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/56"&gt;Pre-built binaries&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The most important change for anyone who wants to try out Zemeroth
and don't want to compile it from the source
is auto-deployed pre-built binaries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You can download them here:&lt;/strong&gt;
&lt;strong&gt;&lt;a href="https://github.com/ozkriff/zemeroth/releases"&gt;https://github.com/ozkriff/zemeroth/releases&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They are compiled and deployed to Github's releases
by CI servers (Travis, Appveyor and CircleCI) on every tag.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/releases/tag/v0.0.3"&gt;The latest release at the time of writing is &lt;code&gt;v0.0.3&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/releases/tag/v0.0.3"&gt;&lt;img alt="" src="https://i.imgur.com/pIXAfaS.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux/Windows and OSX versions are not that interesting - they are
built exactly like &lt;a href="https://github.com/ozkriff/zoc/issues/242"&gt;it was done for ZoC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Deploying Android &lt;code&gt;apk&lt;/code&gt;s is a more interesting story.&lt;/p&gt;
&lt;p&gt;I've stolen basic apk-building script for CircleCI from &lt;a href="https://github.com/tomaka"&gt;@tomaka&lt;/a&gt;
(thanks again!) - &lt;a href="https://github.com/tomaka/glutin/pull/919"&gt;https://github.com/tomaka/glutin/pull/919&lt;/a&gt; -
and it worked straight out of the box.&lt;/p&gt;
&lt;p&gt;Deploying &lt;code&gt;apk&lt;/code&gt;s is harder:
circle-ci doesn't provide a built-in convenient way of deploying to Github,
so you have to wield some curl/github_api magic.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/blob/efc36eb08/.circleci/upload_apk_to_github_releases.sh"&gt;All the magic is packed in &lt;code&gt;.circleci/upload_apk_to_github_releases.sh&lt;/code&gt; script&lt;/a&gt;
(which is based on &lt;a href="https://gist.github.com/stefanbuck/ce788fee19ab6eb0b4447a85fc99f447"&gt;this gist&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Also, some &lt;a href="https://github.com/ozkriff/zemeroth/blob/efc36eb08/.circleci/config.yml#L20-L33"&gt;strange branch magic is required&lt;/a&gt;
if you don't want to run both &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;deploy&lt;/code&gt; targets
on &lt;em&gt;every&lt;/em&gt; commit.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Btw, old badges were not that clear of what do they mean:&lt;/p&gt;
&lt;p&gt;&lt;img alt="build: passing, build: passing, passed - wtf?" src="https://i.imgur.com/tVWYsIt.png"&gt;&lt;/p&gt;
&lt;p&gt;Most programmers know that travis's badge usually means
LINUX|OSX builds and appveyor is for Windows builds.
But what does the third one?&lt;/p&gt;
&lt;p&gt;To fix this
&lt;a href="https://github.com/ozkriff/zemeroth/pull/158/commits/1f0fc2b75"&gt;I've added custom labels to the badges through shields.io&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://img.shields.io/travis/ozkriff/zemeroth/master.svg?label=Linux|OSX"&gt;https://img.shields.io/travis/ozkriff/zemeroth/master.svg?label=Linux|OSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://img.shields.io/appveyor/ci/ozkriff/zemeroth.svg?label=Windows"&gt;https://img.shields.io/appveyor/ci/ozkriff/zemeroth.svg?label=Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://img.shields.io/circleci/project/github/ozkriff/zemeroth/master.svg?label=Android"&gt;https://img.shields.io/circleci/project/github/ozkriff/zemeroth/master.svg?label=Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looks a little bit better now:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/e6ye1g3.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;And there're two yet-to-be-solved issues:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/136"&gt;&lt;code&gt;apk&lt;/code&gt;s are built in the debug mode&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/161"&gt;Deploy precompiled versions of the latest commit to a special release&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Decorations: Grass and Blood Pools&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/ozkriff/zemeroth/issues/73"&gt;&lt;strong&gt;Grass&lt;/strong&gt;&lt;/a&gt; is just a randomly-placed decoration,
but &lt;a href="https://github.com/ozkriff/zemeroth/issues/42"&gt;&lt;strong&gt;Blood Pools&lt;/strong&gt;&lt;/a&gt; are also an additional indicator
of a successful attack:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/sqNe3qb.png"&gt;
&lt;img alt="" src="https://i.imgur.com/agmDS8N.png"&gt;&lt;/p&gt;
&lt;h2&gt;Jokers and Strength&lt;/h2&gt;
&lt;p&gt;Now, some actual gameplay changes!&lt;/p&gt;
&lt;p&gt;To make Zemeroth a little bit more tactical
&lt;a href="https://github.com/ozkriff/zemeroth/issues/59"&gt;&lt;strong&gt;Jokers were added&lt;/strong&gt;&lt;/a&gt;. They can be used either as Attacks or Moves.&lt;/p&gt;
&lt;p&gt;In the previous version, units were dying from a single hit.
That doesn't work well with reaction attacks as they were dying too quickly:
fighters should have some kind of basic hit points.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/63"&gt;So &lt;strong&gt;Strength&lt;/strong&gt; was added.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This name is stolen from &lt;a href="http://store.steampowered.com/app/237990/The_Banner_Saga"&gt;Banner Saga&lt;/a&gt;:
as I'm going to use this property also as a basic attack modifier.
Right now every successful attack deals a damage of one strength
but later a much more fine-grained battle math will be implemented.&lt;/p&gt;
&lt;h2&gt;Dots&lt;/h2&gt;
&lt;p&gt;To show the most important dynamic information about units on the map
&lt;a href="https://github.com/ozkriff/zemeroth/issues/95"&gt;&lt;strong&gt;"Dots"&lt;/strong&gt; were added&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/uOwrmIV.png"&gt;&lt;/p&gt;
&lt;p&gt;The current legend is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"Strength" - green;&lt;/li&gt;
&lt;li&gt;"Attacks" - red;&lt;/li&gt;
&lt;li&gt;"Moves" - blue;&lt;/li&gt;
&lt;li&gt;"Jokers" - purple.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://twitter.com/LPGhatguy/status/902800456082001920"&gt;@LPGhatguy&lt;/a&gt; to a problem with colors:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With the amount of red/green in the game so far,
you should try it with a Deuteranopia filter!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've googled a simulator:
&lt;a href="https://www.etre.com/tools/colourblindsimulator"&gt;https://www.etre.com/tools/colourblindsimulator&lt;/a&gt;.
Here's an example of its output:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/JQ98WRD.png"&gt;&lt;/p&gt;
&lt;p&gt;And, yeah, that doesn't look readable at all.
&lt;a href="https://github.com/ozkriff/zemeroth/issues/98"&gt;It's clear that I should change the colors and shapes&lt;/a&gt;
in the near future.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Btw, &lt;a href="http://gameaccessibilityguidelines.com"&gt;http://gameaccessibilityguidelines.com&lt;/a&gt; is a very interesting resource.
I've never thought about a lot of issues raised and explained there.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/ozkriff/zemeroth/pull/92"&gt;Info panel with selected unit's stats&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Dots can show only a small portion of the dynamic information about units.
Other less important dynamic or static information goes into the side panel.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/qR7urvw.png"&gt;&lt;/p&gt;
&lt;p&gt;Btw, &lt;a href="https://github.com/ozkriff/zemeroth/pull/100"&gt;now you can select enemy units&lt;/a&gt; to see their move range and stats
in the info panel.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: additionally, a deselection of any unit on the second click was added.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/65"&gt;Spearman&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/J2hUPyH.png"&gt;&lt;/p&gt;
&lt;p&gt;Another important gameplay change is
an addition of third fighter type: "Spearman".&lt;/p&gt;
&lt;p&gt;He has an attack radius of two tiles and
can control with reaction attacks a big area of 18 tiles around him.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/vPKLb1G.png"&gt;&lt;/p&gt;
&lt;p&gt;On the picture above the spearman has only one Joker point:
this is not an attack unit, he's almost useless during his own turn.&lt;/p&gt;
&lt;p&gt;But if spearman hasn't used its Joker during his own turn,
he has &lt;em&gt;four&lt;/em&gt; reaction attacks during enemy's turn:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/KoTCuNs.png"&gt;&lt;/p&gt;
&lt;p&gt;And that's a lot considering that reaction attacks can interrupt enemy's movement.&lt;/p&gt;
&lt;p&gt;Also, this unit has only three Strength points to accent his defence role.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/141"&gt;Ranc√∂r&lt;/a&gt; - a Stupid Component System&lt;/h2&gt;
&lt;p&gt;Previously, Zemeroth's units were represented by a single struct
holding all the stuff as its fields.
Not a very adaptable solutions and it was impossible
to create a non-unit type of objects.&lt;/p&gt;
&lt;p&gt;It's the end of 2017 so the solution to this problem is obviously &lt;em&gt;components&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;With a component system, I should be able to implement:
&lt;a href="https://github.com/ozkriff/zemeroth/issues/142"&gt;Boulders&lt;/a&gt;,
&lt;a href="https://github.com/ozkriff/zemeroth/issues/69"&gt;Bombs&lt;/a&gt;,
Fire,
&lt;a href="https://github.com/ozkriff/zemeroth/issues/154"&gt;Poison stuff&lt;/a&gt;,
&lt;a href="https://github.com/ozkriff/zemeroth/issues/108"&gt;Corpses&lt;/a&gt;,
etc.&lt;/p&gt;
&lt;p&gt;I don't think Zemeroth needs a full-featured ECS solution
(like &lt;a href="https://github.com/slide-rs/specs"&gt;specs&lt;/a&gt;) as the game is turn-based.
A bunch of &lt;code&gt;HashMap&amp;lt;ObjId, ComponentType&amp;gt;&lt;/code&gt; will do the work fine.&lt;/p&gt;
&lt;p&gt;So.. I've reinvented another ~~&lt;a href="https://www.reddit.com/r/rust/comments/6zdvza/my_experience_participating_in_highload_cup_re/dmulhzj"&gt;bicycle üö≤&lt;/a&gt;~~ square wheel! \o/&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/141"&gt;Meet &lt;strong&gt;Ranc√∂r&lt;/strong&gt; - a simple macro-based component system&lt;/a&gt;.
I'm not calling this an ECS because it has no systems, it's just a storage.&lt;/p&gt;
&lt;p&gt;Nothing fancy, you just declare some usual structs for components
and create a hidden &lt;code&gt;HashMap&lt;/code&gt;-based monster-struct using a friendly macro:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;rancor_storage&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Parts&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ObjId&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;: &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;strength&lt;/span&gt;: &lt;span class="nc"&gt;component&lt;/span&gt;::&lt;span class="n"&gt;Strength&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;: &lt;span class="nc"&gt;component&lt;/span&gt;::&lt;span class="n"&gt;Pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt;: &lt;span class="nc"&gt;component&lt;/span&gt;::&lt;span class="n"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;belongs_to&lt;/span&gt;: &lt;span class="nc"&gt;component&lt;/span&gt;::&lt;span class="n"&gt;BelongsTo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;: &lt;span class="nc"&gt;component&lt;/span&gt;::&lt;span class="n"&gt;Agent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then use individual fields:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;moves&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Moves&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jokers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Jokers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or call &lt;code&gt;parts.remove(id);&lt;/code&gt; to completely wipe-out the entity.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Rancor seems to work fine, but I see two issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Too many braces in RON file with prototypes&lt;/li&gt;
&lt;li&gt;&lt;a href="(https://github.com/ozkriff/zemeroth/issues/105#issuecomment-335439037)"&gt;Duplication of data between initial values and their base values&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As I do not expect anyone to use it, this carte lives in the Zemeroth's repo.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Btw, see &lt;a href="https://gridbugs.org/programming-languages-make-terrible-game-engines"&gt;https://gridbugs.org/programming-languages-make-terrible-game-engines&lt;/a&gt;
and &lt;a href="https://gridbugs.org/modifying-entity-component-system-for-turn-based-games"&gt;https://gridbugs.org/modifying-entity-component-system-for-turn-based-games&lt;/a&gt;
articles about component systems and turn-based games in Rust.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/ozkriff/zemeroth/pull/67"&gt;TOML -&amp;gt; RON&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rust community kinda loves TOML, but I'm not a fan of this format.
TOML is not &lt;em&gt;that&lt;/em&gt; bad, but I find its tables too strange for anything
but simple configs.&lt;/p&gt;
&lt;p&gt;And I've decided to try to use &lt;strong&gt;&lt;a href="https://github.com/ron-rs/ron"&gt;RON&lt;/a&gt;&lt;/strong&gt; format for Zemeroth.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(&lt;a href="https://github.com/ron-rs/ron"&gt;RON's readme&lt;/a&gt; has a pretty good list of reasons
of why you may not want to use other formats)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://github.com/kvark"&gt;@kvark&lt;/a&gt; for starting this project originally
and thanks to &lt;a href="https://github.com/torkleyy"&gt;@torkleyy&lt;/a&gt; for resurrecting the project
&lt;a href="https://github.com/amethyst/amethyst/pull/269"&gt;for Amethyst's needs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Boulders and Rocks&lt;/h2&gt;
&lt;p&gt;To make tactics a little bit more interesting
and to prototype non-agent objects using Ranc√∂r
I've &lt;a href="https://github.com/ozkriff/zemeroth/issues/142"&gt;added some tile-blocking &lt;strong&gt;Boulders&lt;/strong&gt;&lt;/a&gt;.
This is a first non-agent object type in the game.&lt;/p&gt;
&lt;p&gt;It's a little bit strange that I have different terrain types
support for a long time, but not actually using them in the game at all.
&lt;a href="https://github.com/ozkriff/zemeroth/pull/164"&gt;Meet randomly-placed tiles of &lt;strong&gt;TileType::Rocks&lt;/strong&gt; type&lt;/a&gt;.
You can move through these tiles, but it requires 3 move points and not 1.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/IUF6wEK.png"&gt;&lt;/p&gt;
&lt;p&gt;Rock tiles and boulders work together with blood and grass to make
the battlefield look a little bit less boring.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Yes, I know that it'll be better to use a different texture for Rocks tiles,
not just a darker color)&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/83"&gt;Logging: &lt;code&gt;log&lt;/code&gt; &amp;amp; &lt;code&gt;env_logger&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I'm tired of adding a special-cased &lt;code&gt;println&lt;/code&gt;s to debug
something small and removing them before the commit.&lt;/p&gt;
&lt;p&gt;As I don't have much experience with slog, I decided
to replace &lt;code&gt;println&lt;/code&gt;s with a classic &lt;a href="https://docs.rs/env_logger"&gt;env_logger&lt;/a&gt;.
It seems to work, for now,
the source code is filled with all kinds of &lt;code&gt;info!&lt;/code&gt; and &lt;code&gt;debug!&lt;/code&gt; calls. :)&lt;/p&gt;
&lt;h2&gt;H√§te: &lt;a href="https://github.com/ozkriff/zemeroth/pull/131"&gt;Examples&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some news about &lt;a href="https://ozkriff.github.io/2017-08-17--devlog.html#hate2d"&gt;my silly game engine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's important to decouple H√§te from Zemeroth.
First, H√§te was extracted to a separate crate inside the repo.
The next step is to separate example/test screens.&lt;/p&gt;
&lt;p&gt;These screens do nothing game-specific so they belong to the engine.&lt;/p&gt;
&lt;p&gt;There was a bunch of tasks needed to be solved before extracting the examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/129"&gt;Baked GLSL shaders into H√§te's source&lt;/a&gt;.
    They are supposed to be dead-simple &amp;amp; tightly coupled with
    the engine - what's the point of having them in user's assets dir?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/130"&gt;Baked a default font into H√§te's source&lt;/a&gt;.
    I've used the smallest font from this article:
    &lt;a href="http://oxfordshireweb.com/smallest-file-size-google-web-fonts"&gt;http://oxfordshireweb.com/smallest-file-size-google-web-fonts&lt;/a&gt;.
    &lt;code&gt;Karla-Regular.ttf&lt;/code&gt; is 17kib only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/138"&gt;&lt;code&gt;Settings::default&lt;/code&gt;&lt;/a&gt;. Simplified the examples.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zemeroth/issues/32"&gt;Check assets dir from every &lt;code&gt;fs::load&lt;/code&gt; call&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;H√§te: &lt;a href="https://github.com/ozkriff/zemeroth/issues/96"&gt;Cache Text Textures&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ozkriff/zoc"&gt;ZoC&lt;/a&gt; was almost unusable in debug builds:
&lt;a href="https://github.com/ozkriff/zoc/issues/264"&gt;it may take more than 10 seconds to start a game on some machines&lt;/a&gt;
and now I'm trying to keep Zemeroth's debug builds fast enough.&lt;/p&gt;
&lt;p&gt;One of the common problems is that &lt;a href="https://github.com/redox-os/rusttype"&gt;Rusttype&lt;/a&gt; is very slow in debug builds,
especially on Android.
As a text in H√§te is rendered by creating a separate texture for
every string the simplest solution was to cache these textures.&lt;/p&gt;
&lt;p&gt;Caching is a little bit sloppy solution, but we have no other choice
until &lt;a href="https://github.com/rust-lang/cargo/issues/1359"&gt;https://github.com/rust-lang/cargo/issues/1359&lt;/a&gt; is implemented.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Btw, there's a &lt;a href="https://github.com/rust-lang/cargo/issues/1359#issuecomment-329653216"&gt;cool hack&lt;/a&gt; from &lt;a href="https://github.com/matklad"&gt;@matklad&lt;/a&gt;,
but you have to compile an outdated cargo from his dev-branch.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;"Game Development in Rust"&lt;/h2&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/ZWlviGWm.jpg"&gt;&lt;/p&gt;
&lt;p&gt;There was &lt;a href="https://meetup.com/Rust-–≤-–ü–∏—Ç–µ—Ä–µ/events/242219775"&gt;a local meetup&lt;/a&gt; in Saint-Petersburg this September where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/not-fl3"&gt;@not-fl3&lt;/a&gt; talked about his experience as a &lt;a href="https://twitter.com/BringerShar"&gt;SHAR&lt;/a&gt;'s developer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vitvakatu"&gt;@vitvakatu&lt;/a&gt; talked about &lt;a href="https://github.com/three-rs/three"&gt;three-rs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;and I talked about the history of &lt;a href="https://github.com/ozkriff/zoc"&gt;ZoC&lt;/a&gt; and &lt;a href="https://github.com/ozkriff/zemeroth"&gt;Zemeroth&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Everything is in Russian, but here are the links anyway, just in case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BCsPcsmRhOM"&gt;full video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/19-Vc2VOpmB2r42u5arMVdKXfOPzozNjY5drjhbyIw3E"&gt;my slides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/CZSs2mc.png"&gt;&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href="https://intellij-rust.github.io"&gt;JetBrains&lt;/a&gt; for hosting the event!&lt;/p&gt;
&lt;h2&gt;Short-Range Plans&lt;/h2&gt;
&lt;h3&gt;RestructuredText -&amp;gt; Markdown&lt;/h3&gt;
&lt;p&gt;For a long time, I was trying to avoid the use of MD.&lt;/p&gt;
&lt;p&gt;Mostly &lt;a href="https://eli.thegreenplace.net/2017/restructuredtext-vs-markdown-for-technical-documentation"&gt;because MD has no built-in support for extensions and
is MD is forever tied to HTML&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was mostly hoping for RST to become popular enough.
There was a chance, &lt;a href="https://internals.rust-lang.org/t/rustdoc-restructuredtext-vs-markdown/356"&gt;but doc team decided to stay with MD&lt;/a&gt;
and now Rust community doesn't care about RST at all. :(&lt;/p&gt;
&lt;p&gt;&lt;a href="http://commonmark.org"&gt;CommonMark&lt;/a&gt; solves the standardization problem to some degree.
Though, it's still glued to HTML and is not easily extensible.&lt;/p&gt;
&lt;p&gt;Anyway, I'm not going to use these documents anywhere except in the web browser,
so... &lt;a href="https://github.com/ozkriff/zemeroth/issues/157"&gt;I'm going to migrate this blog to some rust blog generator&lt;/a&gt;
from Pelican. This post is written in MD already.&lt;/p&gt;
&lt;h3&gt;Abilities and Lasting Effects&lt;/h3&gt;
&lt;p&gt;A skirmish game is unimaginable without &lt;a href="https://github.com/ozkriff/zemeroth/issues/110"&gt;special abilities&lt;/a&gt;
and some interesting &lt;a href="https://github.com/ozkriff/zemeroth/issues/102"&gt;instant&lt;/a&gt; and &lt;a href="https://github.com/ozkriff/zemeroth/issues/154"&gt;lasting effects&lt;/a&gt; of the actions.&lt;/p&gt;
&lt;p&gt;So, here are some previews of what I'm working right now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/Egfyd4VX2YU"&gt;https://youtu.be/Egfyd4VX2YU&lt;/a&gt; - jump &amp;amp; &lt;a href="https://github.com/ozkriff/zemeroth/issues/102"&gt;knockback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/TilgaGspTJk"&gt;https://youtu.be/TilgaGspTJk&lt;/a&gt; - &lt;a href="https://github.com/ozkriff/zemeroth/issues/69"&gt;self-explode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/Yg38yeno3sE"&gt;https://youtu.be/Yg38yeno3sE&lt;/a&gt; - &lt;a href="https://github.com/ozkriff/zemeroth/issues/154"&gt;poison&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Whew! That was the longest piece of text in English that I've ever written O.o.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That's all for today! :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;News&lt;/strong&gt;: &lt;a href="https://twitter.com/ozkriff"&gt;@ozkriff on twitter&lt;/a&gt;,
&lt;a href="imgur.com/a/SMVqO"&gt;imgur devlog&lt;/a&gt;&lt;/p&gt;</content><category term="devlog"></category><category term="zemeroth"></category></entry><entry><title>ZoC is dead. Long life Zemeroth.</title><link href="http://ozkriff.github.io/2017-08-17--devlog.html" rel="alternate"></link><published>2017-08-17T00:00:00+03:00</published><updated>2017-08-17T00:00:00+03:00</updated><author><name>ozkriff</name></author><id>tag:ozkriff.github.io,2017-08-17:/2017-08-17--devlog.html</id><summary type="html">&lt;p&gt;Soo, yeah, &lt;a class="reference external" href="https://github.com/ozkriff/zoc"&gt;Zone of Control&lt;/a&gt; project
is officially discontinued.
Sorry, friends.&lt;/p&gt;
&lt;img alt="scene from Pulp Fiction" src="http://i.imgur.com/cONHdvy.png" /&gt;
&lt;p&gt;^ &amp;quot;ZoC's dead, baby. ZoC's dead.&amp;quot;&lt;/p&gt;
&lt;p&gt;Why have I killed it?
The primary reason is classic:
I've overestimated my resources/skills and got totally overwhelmed by the scope:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I can't see the finish line and have no idea what exactly ‚Ä¶&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Soo, yeah, &lt;a class="reference external" href="https://github.com/ozkriff/zoc"&gt;Zone of Control&lt;/a&gt; project
is officially discontinued.
Sorry, friends.&lt;/p&gt;
&lt;img alt="scene from Pulp Fiction" src="http://i.imgur.com/cONHdvy.png" /&gt;
&lt;p&gt;^ &amp;quot;ZoC's dead, baby. ZoC's dead.&amp;quot;&lt;/p&gt;
&lt;p&gt;Why have I killed it?
The primary reason is classic:
I've overestimated my resources/skills and got totally overwhelmed by the scope:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;I can't see the finish line and have no idea what exactly I can feature-cut.
Strategic mode? Sane UI? Networking? Skeletal animations? Particles?
Ships? Aircrafts? Tens of unit types?
Oh-oh, I don't believe that ZoC could be really cool without
any of these (and some others) features.&lt;/p&gt;
&lt;p&gt;This situation totally drained all my motivation to continue the project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Slot system (multiple units per tile with fixed positions) is a strange beast.&lt;/p&gt;
&lt;p&gt;1) No idea how to make some friendly user interface:
two panels (for friends and enemies) solution is ugly,
context menus are not cool either.&lt;/p&gt;
&lt;p&gt;2) Slots create problems with visual scale:
infantry models are just too small, especially on phone‚Äôs screen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://i.imgur.com/F6qf4FNl.png"&gt;Maybe I should make an FPS? No, that's stupid.&lt;/a&gt;
Ahem, just joking.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another reason is that my views on what's important for strategic games
have changed in the last several years.
Now I prefer &lt;a class="reference external" href="http://keithburgun.net/videogames-are-broken-toys"&gt;smaller&lt;/a&gt;
&lt;a class="reference external" href="http://keithburgun.net/the-default-number-of-players-is-one"&gt;single-player&lt;/a&gt;
games with strong accent on
&lt;a class="reference external" href="http://keithburgun.net/minimalism-vs-elegance"&gt;emergent complexity&lt;/a&gt;.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;So, some farewell screenshots:&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://i.imgur.com/TYoAVj6.png"&gt;&lt;img alt="ZoC gameplay screenshot 1" src="http://i.imgur.com/TYoAVj6m.png" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="http://i.imgur.com/V4ZPCrT.png"&gt;&lt;img alt="ZoC gameplay screenshot 2" src="http://i.imgur.com/V4ZPCrTm.png" /&gt;&lt;/a&gt;
&lt;a class="reference external image-reference" href="http://i.imgur.com/CKczL44.png"&gt;&lt;img alt="blob shadows" src="http://i.imgur.com/CKczL44m.png" /&gt;&lt;/a&gt;
&lt;p&gt;...And that it.&lt;/p&gt;
&lt;p&gt;Goodbye, my old friend Zone of Control.&lt;/p&gt;
&lt;div class="section" id="zemeroth"&gt;
&lt;h2&gt;Zemeroth&lt;/h2&gt;
&lt;p&gt;There‚Äôs one great article:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://makegames.tumblr.com/post/1136623767/finishing-a-game"&gt;http://makegames.tumblr.com/post/1136623767/finishing-a-game&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I have re-read it a dozen times in the last few years.
In the context of ZoC‚Äôs fail the most important part of that article is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rule 14: IF YOU DO QUIT, SCALE DOWN, NOT UP&lt;/p&gt;
&lt;p&gt;Okay, sometimes it is time to call it quits.
Maybe there‚Äôs just no way you‚Äôll ever finish,
and what you have is too big a mess to cut anything out.
Maybe the rest of your team has quit already.
My hope in writing this list is to help people avoid this possibility,
but hey, maybe you‚Äôre just coming off of such a project.
And sometimes... shit just happens.&lt;/p&gt;
&lt;p&gt;If there‚Äôs no salvaging it, at least make sure that you scale down your next project.
It‚Äôs easy to set your sights higher and higher,
even as your projects become less and less finished.
‚ÄúMy SKILLS are improving! I‚Äôm learning from my failure,‚Äù is a common excuse.
But I think this is why it‚Äôs important to treat finishing as a skill, too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sounds reasonable to me.
So I need a new much less ambitious project
which still shares some of the ZoC‚Äôs core values.&lt;/p&gt;
&lt;p&gt;I‚Äôve spent May and June - in the heavy existential crisis - ahem, resting
and thinking about what can I make.&lt;/p&gt;
&lt;p&gt;Here‚Äôs what I came up with:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Random-based skirmish-level digital tabletop game;&lt;/li&gt;
&lt;li&gt;Single player only;&lt;/li&gt;
&lt;li&gt;3-6 fighters under player‚Äôs control;&lt;/li&gt;
&lt;li&gt;Short game session (under an hour) and small unscrollable maps;&lt;/li&gt;
&lt;li&gt;Simple vector 2d graphics with just 3-5 sprites per unit;&lt;/li&gt;
&lt;li&gt;Reaction attacks and action‚Äôs interruption;&lt;/li&gt;
&lt;li&gt;Highly dynamic (lots of small unit moves as a side effect of other events);&lt;/li&gt;
&lt;li&gt;Intentionally stupid and predictable AI;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Something in between of
&lt;a class="reference external" href="http://store.steampowered.com/app/237990/The_Banner_Saga"&gt;Banner Saga&lt;/a&gt;,
&lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.magmafortress.hoplite"&gt;Hoplite&lt;/a&gt;,
&lt;a class="reference external" href="http://store.steampowered.com/app/459680/Auro_A_MonsterBumping_Adventure/"&gt;Auro&lt;/a&gt;
and
&lt;a class="reference external" href="http://store.steampowered.com/app/230070/The_Age_of_Decadence/"&gt;Age of Decadence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Initial svg mockup (based on &lt;a class="reference external" href="http://i.imgur.com/NNQkC1e.png"&gt;my old experiments with 2d ZoC&lt;/a&gt;):&lt;/p&gt;
&lt;img alt="inscape mockup" src="http://i.imgur.com/L8gaqaP.png" /&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Ok, that was just the plan. What's actually done already?&lt;/p&gt;
&lt;p&gt;Here's the code: &lt;a class="reference external" href="https://github.com/ozkriff/zemeroth"&gt;https://github.com/ozkriff/zemeroth&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Right now Zemeroth looks ~ like this:&lt;/p&gt;
&lt;img alt="old Zemeroth's screenshot" src="http://i.imgur.com/EEtIxGp.png" /&gt;
&lt;p&gt;Recent &amp;quot;gameplay&amp;quot; video:&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe frameborder="0" allowfullscreen src="https://www.youtube.com/embed/MVt_UOnmdKI?rel=0&amp;showinfo=0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;What‚Äôs implemented:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The cornerstone of the game: reaction attacks and movement interruptions;&lt;/li&gt;
&lt;li&gt;Basic infantry unit type;&lt;/li&gt;
&lt;li&gt;Hitpoints;&lt;/li&gt;
&lt;li&gt;Basic AI: move closer and attack;&lt;/li&gt;
&lt;li&gt;Some basic UI with text/image buttons and grouping.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Android is supported from the beginning of the development (as I‚Äôm reusing ZoC‚Äôs codebase):&lt;/p&gt;
&lt;img alt="zemeroth on android photo" src="http://i.imgur.com/T9EgPR1.png" /&gt;
&lt;p&gt;Zemeroth‚Äôs architecture is mostly taken from ZoC (minus the networking and multiple game states):&lt;/p&gt;
&lt;img alt="data loop" src="http://i.imgur.com/9A6GnDKl.jpg" /&gt;
&lt;p&gt;Scene action system is based on cocos‚Äôs one and something I did
in dead ZoC‚Äôs dev branch:&lt;/p&gt;
&lt;img alt="example of scene actions" src="http://i.imgur.com/ajv6ILN.png" /&gt;
&lt;p&gt;(&lt;a class="reference external" href="https://docs.rs/piston2d-sprite/0.36.0/sprite/enum.Animation.html"&gt;btw, piston has something similar&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hate2d"&gt;
&lt;h2&gt;H√§te2d&lt;/h2&gt;
&lt;p&gt;About reusing ZoC‚Äôs codebase...&lt;/p&gt;
&lt;p&gt;I‚Äôm a fool who don‚Äôt learn anything and
totally ignored the third rule from finishing-a-game article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;DON‚ÄôT ROLL YOUR OWN TECH IF YOU DON‚ÄôT HAVE TO&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;Say hello to yet another Rust 2d engine: &lt;a class="reference external" href="https://docs.rs/hate"&gt;H√§te2d&lt;/a&gt; :-D&lt;/p&gt;
&lt;p&gt;The name is a silly reference to &lt;a class="reference external" href="https://love2d.org"&gt;L√ñVE2D framework&lt;/a&gt; (just in case).&lt;/p&gt;
&lt;p&gt;NOTE: H√§te isn‚Äôt a general-purpose game engine (at least right now) and it‚Äôs not my goal.
Just a simple 2d engine for Zemeroth‚Äôs needs.&lt;/p&gt;
&lt;p&gt;Why haven't I used ggez.rs?&lt;/p&gt;
&lt;p&gt;Quote from reddit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#64;pwgen-n1024:
have you seen &lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/6mg02o/ggez_a_rust_library_to_create_good_games_easily/"&gt;this&lt;/a&gt;?
its a l√∂ve2d clone in rust, it might allow you to save some work.&lt;/p&gt;
&lt;p&gt;&amp;#64;ozkriff:
Granted, I'm well aware of ggez! :-)&lt;/p&gt;
&lt;p&gt;I'm too lazy to read the docs! NIH syndrome!111 :-D&lt;/p&gt;
&lt;p&gt;Ahem... It's a cool engine and I recommend it whenever anybody asks me about 2d game engines,
but I don't think that ggez's core values match my needs in Zemeroth project:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ggez tries to mirror L√∂ve as closely as possible but
I don't believe that what's good for highly dynamic Lua is equally good for Rust.&lt;/li&gt;
&lt;li&gt;It seems to me that ggez targets beginners and fast prototype-like
projects but I'm going to invest a lot of time into this project.&lt;/li&gt;
&lt;li&gt;I want the engine to be much more opinionated about UI, scene, etc.&lt;/li&gt;
&lt;li&gt;Right now ggez uses SDL2 (and it's not easy to replace it with glutin)
but I really want to use cargo-apk.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maybe I was wrong and using geez would be a good idea,
&lt;a class="reference external" href="https://www.reddit.com/r/rust/comments/6nri26//dkbqtiu/"&gt;see Icefoxen‚Äôs answer&lt;/a&gt;.
But so far working on H√§te was fun and we‚Äôll see what happens later.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;That‚Äôs all for today :)&lt;/p&gt;
&lt;p&gt;In case you're wondering, here's full Imgur-devlog
which I'm trying to keep updated: &lt;a class="reference external" href="http://imgur.com/a/SMVqO"&gt;http://imgur.com/a/SMVqO&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And you can subscribe to instant updates on twitter: &lt;a class="reference external" href="https://twitter.com/ozkriff"&gt;https://twitter.com/ozkriff&lt;/a&gt; ;-)&lt;/p&gt;
&lt;/div&gt;
</content><category term="devlog"></category><category term="zoc"></category><category term="zemeroth"></category></entry></feed>