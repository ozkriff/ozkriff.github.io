<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Зона Контроля</title><link>http://ozkriff.github.io/</link><description></description><atom:link href="http://ozkriff.github.io/feeds/zoc.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 30 Nov 2015 00:00:00 +0300</lastBuildDate><item><title>Перезапуск журнала</title><link>http://ozkriff.github.io/2015-11-30--devlog-live-again.html</link><description>&lt;p&gt;Насмотрелся я тут на журналы &lt;a class="reference external" href="http://reangdblog.blogspot.com"&gt;reangd&lt;/a&gt;, &lt;a class="reference external" href="http://www.gridsagegames.com/blog"&gt;cogmind&lt;/a&gt;, &lt;a class="reference external" href="https://eao197.blogspot.ru"&gt;eao197&lt;/a&gt; и всякие
другие, решил что тоже чего-нибудь хочу писать.
С последней моей попытки прошло около полутора лет)&lt;/p&gt;
&lt;p&gt;Итак, на момент написания прошлой заметки я работал над Миром Кораблей в
&lt;a class="reference external" href="https://wargaming.com/ru/about/our-locations/saint-petersburg"&gt;питерском wargaming.net&lt;/a&gt;.
Собственно, я успел уйти оттуда, поработать над казуалками в
&lt;a class="reference external" href="http://zillionwhales.ru"&gt;Zillion Whales&lt;/a&gt;, оттуда тоже уйти и осесть в
&lt;a class="reference external" href="protei.ru"&gt;Протее&lt;/a&gt;. Так что сейчас я ковыряю ip-телефонию и все игры теперь только
в свободное время, зато не надо каждый день &amp;quot;любоваться&amp;quot; на ужасы фритуплея)&lt;/p&gt;
&lt;p&gt;Я больше не студент, совсем - наконец-то закончил заочку в политехе,
ура-ура! :-D
Темой диплома как раз и был этот проект, даже &lt;a class="reference external" href="pdfs/lesnikov_a_a_slides_2015.pdf"&gt;презентация&lt;/a&gt; вот завалялась.
Хотя ничего особо крутого, как мне изначально хотелось, на деле не вышло.
Ключевым моментом диплома являлся ИИ. Я там подробно расписал
какие они бывают и какие виды подходят для каких игр.
А вот реализовать полноценный не успел - сдавался вариант, который только
формально можно было назвать &amp;quot;практичным ИИ&amp;quot;
(извиняюсь, но лучшего перевода для &amp;quot;utility-based AI&amp;quot; не нашел.
&amp;quot;ИИ, основанный на теории полезности&amp;quot; как-то длинновато).
Он примерял к текущему состоянию игры захардкоженные шаблоны
на основе позиций и типов отрядов, оценивал
коэффециент их полезности, и втупую применял их.
На специально подготовленных ситуациях выглядело не так и плохо,
но это отмазочный вариант, конечно. И с очень стремным кодом,
так что в git'е сейчас так и лежит
базовый &amp;quot;ИИ&amp;quot; - подъехать в на расстояние выстрела и стрелять :-| .
Но общий обыт был интересным)&lt;/p&gt;
&lt;p&gt;Сама ржавчина, конечно, за это время сильно выросла, с 0.10 аж до 1.4.
Вместо извращений по установке зависимостей или возни с git submodules,
появился cargo.
По достижении 1.0 появилась обратная совместимость. Хотя конкретно от
этого я и не в полном восторге, руки у авторов языка теперь &amp;quot;полусвязаны&amp;quot;,
но переписываний и правда стало меньше,
только когда библиотеки чего-то ломают. Да и с этим Cargo.lock очень
помогает. Хотя, я уже месяца полтора его не обновлял - ух и сложный
же следующий &lt;tt class="docutils literal"&gt;cargo update&lt;/tt&gt; у меня будет.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;За полтора года я успел переиграть много во что повлияевшего
на мое видение пошаговых стратегий, например:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;малоизвестная &lt;a class="reference external" href="https://store.steampowered.com/app/306640"&gt;Battle Academy 2&lt;/a&gt; из которой я решил фактически
передрать ядро механики для тактического режима :) - взаимодействие
видов войск, быстрое/осторожное передвижение, хитрая видимость,
реакционный огонь, боевой дух/подавление и т.п.;&lt;/li&gt;
&lt;li&gt;чуть более известная &lt;a class="reference external" href="https://store.steampowered.com/app/218090"&gt;Unity of Command&lt;/a&gt; повлияла на мое видение
стратегического режима - хитрая система линий снабжения, механика
окружений и т.п.;&lt;/li&gt;
&lt;li&gt;мобильная &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=android.uniwar"&gt;Uniwar&lt;/a&gt; - классная система параллельных сетевых игр,
а сама по себе игровая механика напоминает, что шестигранникам
минимализм никогда не помешает;&lt;/li&gt;
&lt;li&gt;серия Wargame, а именно &lt;a class="reference external" href="https://store.steampowered.com/app/222750"&gt;W:AB&lt;/a&gt; и &lt;a class="reference external" href="https://store.steampowered.com/app/251060"&gt;W:RD&lt;/a&gt; - одна из немногих стратегий в
реальном времени, в которую я с удовольствием поиграл за долгое время.
Интересна своим балансом между реализмом/&amp;quot;веселостью&amp;quot; и взаимодействием
между разными видами войск.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Много думал про пошаговые игры без клеток, все-таки у клеток много
недостатков/особенностей. Даже немного экспериментировал - сделал
простенькое путенахождение по вручную размеченной навигационной сетке:&lt;/p&gt;
&lt;img alt="Пример простого путенахождения на вручную размеченной сетке" src="images/2015-07-30--manual-navmesh-simple-pathfinding.png" /&gt;
&lt;p&gt;Путь проложен по центрам треугольников, для оптимизации потом хотел
прикрутить &lt;a class="reference external" href="http://digestingduck.blogspot.ru/2010/03/simple-stupid-funnel-algorithm.html"&gt;funnel algorithm&lt;/a&gt;, но до этого этапа не дошло.
Если что, шестигранники тут уже ничего не значат, просто
на основе работающего прилжожения экспериментировал.
Затем, написал простенький &amp;quot;наращиватель&amp;quot; препятствий, который
в зависимости от величины угла добавлял разное количество
вспомогательных отрезков:&lt;/p&gt;
&lt;img alt="Пример нарощенного препятствия" src="images/2015-08-02--obstacle-grow.png" /&gt;
&lt;p&gt;Предполагалось, что все юниты будут поделены на несколько групп
по размерам и для каждой группы будет поддерживаться своя сетка.
Непосредственно преобразованием массива таких &amp;quot;жирных&amp;quot; препятствий в сетку
должен был заниматься триангулятор. Мне большего всего приглянулся плюсовый
&lt;a class="reference external" href="https://code.google.com/p/poly2tri"&gt;poly2tri&lt;/a&gt;:&lt;/p&gt;
&lt;img alt="Всякие стандартные примеры из poly2tri" src="images/2015-08-11--triangulation-cpp-demo.png" /&gt;
&lt;p&gt;Даже пытался портировать его на ржавчину, но там очень стремная работа с
памятью, очень хреново укладывается в модель ржавчины.
Пробовал переделать плюсовую версию на работу с массивами и индексами,
но потом решил что очень уж много на эксперимент уходит времени, энтузиазм
про бесклеточные игры прошел, так что я совсем забросил попытку.&lt;/p&gt;
&lt;p&gt;Ну да ладно, темы вдохновляющих игр, разных видов клеток и непрерывного
пространства достойны отдельных заметок, а эта запись и так большой
получается.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Теперь, наконец-то, что касается самого проекта.&lt;/p&gt;
&lt;p&gt;Прежде всего, он переименован из Марoдера в Зону Контроля (Zone of Control).
Сокращенно - ЗК/ZoC. Гитхабовское хранилище переехало в
&lt;a class="reference external" href="https://github.com/ozkriff/zoc"&gt;https://github.com/ozkriff/zoc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Внешний вид с момента сдачи диплома изменился слабо и выглядит все это
безобразие сейчас как-то так:&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe
    frameborder="0"
    allowfullscreen
    src="https://www.youtube.com/embed/srJAfngSwxk?color=white&amp;rel=0&amp;showinfo=0"
&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Собственно, да, я портировал это на android, хотя под линуксом и виндой тоже
должно работать.
Спасибо Skligus'y за его &lt;a class="reference external" href="https://github.com/skligys/rusty-cardboard"&gt;rusty-cardboard&lt;/a&gt;, очень помогло поначалу,
и Tomaka за его &lt;a class="reference external" href="https://github.com/tomaka/glutin"&gt;glutin&lt;/a&gt; и &lt;a class="reference external" href="https://github.com/tomaka/android-rs-glue"&gt;android-rs-glue&lt;/a&gt;.
К сожалению, для сборки под андроид требуется ночная сборка rustc, потому
что в android-rs-glue используются какие-то нестабильные штуки.
Хотя надо перепроверить, может уже и стабильного компилятора хватит
- ржавчина так быстро развивается :).&lt;/p&gt;
&lt;p&gt;Кстати, да, переписал с glfw-rs на &lt;a class="reference external" href="https://github.com/tomaka/glutin"&gt;glutin&lt;/a&gt; - чем больше кода на ржавчине,
тем прощe, особенно при сборке на разных платформах.
Еще хотел со своих &lt;a class="reference external" href="https://github.com/ozkriff/zoc/tree/47e8f0/src/zgl/src"&gt;костылей вокруг OpenGL&lt;/a&gt; перейти на &lt;a class="reference external" href="https://github.com/tomaka/glium"&gt;glium&lt;/a&gt;,
но пока не осилил.&lt;/p&gt;
&lt;p&gt;Переделал с выделения через цветовой буфер на чистую математику
- пересечение луча из курсора с плоскостью карты, бла бла блап.
Уж очень много от времени отрисоки кадра оно сжирало, да и с шейдерами
так меньше хлопот.&lt;/p&gt;
&lt;p&gt;Но это все про техническую часть. Что касается самой игры, то:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;два захардкоженых режима на одной карте с одним набором войск
- против тупого ИИ или хотсит на двух игроков;&lt;/li&gt;
&lt;li&gt;от одного до пяти членов отряда в клетке -
отказался от идеи иметь несколько отрядов в слотах одной клетки,
потому что так и не придумал, как это все нормально отображать
и как этим управлять. Хотя, при введении зданий и летающих отрядов,
наверное, придется тут усложнить ситуацию;&lt;/li&gt;
&lt;li&gt;до двух активных очков атаки для стрельбы по прямому приказу игрока;&lt;/li&gt;
&lt;li&gt;одно пассивное очко атаки для реакционного огня в чужой ход (как в x-com)
+ неиспользованные в свой ход активные очки атаки становятся пассивными;&lt;/li&gt;
&lt;li&gt;вероятность поражения с (пока что) захардкожеными вероятностями попадания
в зависимости от типа атакующего, защищающегося и местности;&lt;/li&gt;
&lt;li&gt;кривоватый туман войны, который впоследствии, видимо, будут переведен
на менее дискретный алгоритм;&lt;/li&gt;
&lt;li&gt;заготовка системы боевого духа и подавления - каждый ход
восстанавливается 10 очков морали, за каждую атаку снимается
по 10, если мораль падает ниже половины - отряд не может стрелять;&lt;/li&gt;
&lt;li&gt;разная стоимость движения по местности для разных отрядов;&lt;/li&gt;
&lt;li&gt;два режима передвижения - быстрый и осторожный, который стоит в два
раза дороже, зато не накладывает штрафы на точность при стрельбе
и при попадании под огонь отряд не лишается оставшихся очков движения;&lt;/li&gt;
&lt;li&gt;тестовый грузовик для транспортировки пехоты;&lt;/li&gt;
&lt;li&gt;механика видимости из BA2 с двумя радиусами - &amp;quot;нормальная&amp;quot; и &amp;quot;отличная&amp;quot;
видимость. Последняя позволяет увидеть скрытые юниты (например, пехоту в лесу);&lt;/li&gt;
&lt;li&gt;атаки из засад, если атакующий изначально невидим, с бонусом к атаке и
шансом не раскрыть свою позицию;&lt;/li&gt;
&lt;li&gt;приказ &amp;quot;не стрелять&amp;quot; для отключения реакционного огня при организации
хитрых засад или для разведчиков;&lt;/li&gt;
&lt;li&gt;пока что только четыре вида отрядов:&lt;ul&gt;
&lt;li&gt;пехота - четыре человека, одна клетка отличной видимости,
умеют тихориться в лесу;&lt;/li&gt;
&lt;li&gt;разведчики - как пехота, только всего 2 человека, зато видят
и бегают немного быстрее;&lt;/li&gt;
&lt;li&gt;танк - громко стреляет и толсто бронирован, зато у него вообще
нет отличной видимости (попробуй что через щели в броне рассмотреть)
- без пехотного прикрытия рядом с лесом ему ездить не стоит;&lt;/li&gt;
&lt;li&gt;грузовик - не умеет стрелять, очень хрупкий и подслеповатый, зато
быстрее всех остальных отрядов и может перевозить пехоту;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ну, вот как-то так. Разработка, как видно, сильно &lt;a class="reference external" href="http://mysweetwhomp.fr/private/119228173847/tumblr_noimn4cVks1u4yjir"&gt;затянулась&lt;/a&gt; - я-то хотел
такое уже через пару месяцев иметь, ха!
То ли мне просто лень, то ли времени и правда мало получается выделять,
черт его знает.
Уже мнооого раз полностью терял весь энтузиазм и забрасывал игру на
пару месяев, даже пытался чего-то другое делать.
Но потом возвращался, что бы все-таки надо довести до ума эту чертову ЗК :) .
Да и вышеупомянутые игры сильно помогали с вдохновением)&lt;/p&gt;
&lt;p&gt;Вот, собственно, вся первая запись. Вряд ли я буду теперь пытаться делать
недельные отчеты, скорее буду писать более мелкие заметки по настроению
- регулярность вытягивает из любого дела весь интерес.
Ну и писать тут буду, наверное, не только по делу - смотрите теги :) .&lt;/p&gt;
&lt;!-- vim: set tabstop=4 shiftwidth=4 softtabstop=4 expandtab: --&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">ozkriff</dc:creator><pubDate>Mon, 30 Nov 2015 00:00:00 +0300</pubDate><guid>tag:ozkriff.github.io,2015-11-30:2015-11-30--devlog-live-again.html</guid><category>devlog</category><category>zoc</category></item></channel></rss>