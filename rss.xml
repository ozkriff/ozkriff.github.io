<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ozkriff&#x27;s devlog</title>
        <link>https%3A//ozkriff.github.io</link>
        <description></description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https%3A//ozkriff.github.io/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Mon, 13 May 2019 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Zemeroth v0.5: ggez, WASM, itch.io, visuals, AI, campaign, tests</title>
                <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2019-05-13--devlog-zemeroth-v0-5/</link>
                <guid>https%3A//ozkriff.github.io/2019-05-13--devlog-zemeroth-v0-5/</guid>
                <description>&lt;!-- markdownlint-disable MD013 --&gt;
&lt;!-- cspell:ignore Berserker Muton kiegel Yururu ldjam devs itchio PNGs --&gt;
&lt;p&gt;Hi, folks! I&#x27;m happy to announce &lt;strong&gt;Zemeroth v0.5&lt;&#x2F;strong&gt;.
Main features of this release are:
migration to ggez, web version, itch.io page, campaign mode,
AI improvements, visual updates, and tests.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-04-29--title-demo.gif&quot; alt=&quot;demo fight&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; is a turn-based hexagonal tactical game written in Rust.
You can &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;releases&#x2F;tag&#x2F;v0.5.0&quot;&gt;download precompiled v0.5 binaries&lt;&#x2F;a&gt;
for Windows, Linux, and macOS.
Also, now you can &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.itch.io&#x2F;zemeroth&quot;&gt;play an online version&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;
(&lt;em&gt;read more about it in the &amp;quot;WebAssembly version&amp;quot; section below&lt;&#x2F;em&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-04-27--github-commits.png&quot; alt=&quot;GitHub commits graph&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The last release happened about a year ago.
Since then the development mostly happened in irregular bursts,
sometimes it even was completely stalled for weeks.
But a year is a big period of time anyway, so there&#x27;re still lots of changes.&lt;&#x2F;p&gt;
&lt;p&gt;Lots of text ahead, feel free to skip sections
that you&#x27;re not interested in particularly.
Here&#x27;s a table of contents:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#migration-to-the-ggez-game-engine&quot;&gt;Migration to the &lt;code&gt;ggez&lt;&#x2F;code&gt; Game Engine&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#webassembly-version&quot;&gt;WebAssembly Version&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#itchio&quot;&gt;itch.io&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#visual-improvements&quot;&gt;Visual Improvements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#campaign-mode&quot;&gt;Campaign Mode&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#hit-chances&quot;&gt;Hit Chances&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#armor&quot;&gt;Armor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#ai-updates&quot;&gt;AI Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#bombs-and-commutative-effects&quot;&gt;Bombs and Commutative Effects&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#other-game-rules-changes&quot;&gt;Other Game Rules Changes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#gameplay-video&quot;&gt;Gameplay Video&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#svg-atlas&quot;&gt;SVG Atlas&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#assets-hash&quot;&gt;Assets Hash&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#tests&quot;&gt;Tests&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#other-technical-changes&quot;&gt;Other Technical Changes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#indikator&quot;&gt;Indikator&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#migrated-this-devlog-to-zola&quot;&gt;Migrated This Devlog to Zola&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;#roadmap&quot;&gt;Roadmap&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;migration-to-the-ggez-game-engine&quot;&gt;Migration to the &lt;code&gt;ggez&lt;&#x2F;code&gt; Game Engine&lt;&#x2F;h2&gt;
&lt;p&gt;An experiment with maintaining my own engine
(even a simple and minimalistic 2D one)
turned out to be too exhausting in practice:
you have to fight a constant stream of reports about small corner case issues
and deal with platform-specific tweaks and hacks
(stuff &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues&#x2F;587&quot;&gt;like this&lt;&#x2F;a&gt;, for example).
It can consume surprisingly large amounts of time.
But what&#x27;s more important for a hobby project,
it also sucks too much fun out of the development process.&lt;&#x2F;p&gt;
&lt;p&gt;And what made it worse in my case is that &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;hate&quot;&gt;Häte2d&lt;&#x2F;a&gt; intentionally wasn&#x27;t
a general-purpose game engine (to reduce the scope of work),
so it was sad to know that all this work won&#x27;t be reused by anyone.
But converting Häte into a real general-purpose engine wasn&#x27;t an option either,
because it wouldn&#x27;t have left any time for Zemeroth&#x27;s development.&lt;&#x2F;p&gt;
&lt;p&gt;So I&#x27;ve surrendered and decided to give away some control over
low-level parts of Zemeroth:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;247&quot;&gt;Häte2d was discontinued&lt;&#x2F;a&gt; and replaced by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;, the most mature and
actively developed Rust 2d game engine at that time.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;ggez-logo-maroon-full.svg&quot; alt=&quot;ggez&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;häte&lt;&#x2F;code&gt; had some built-in basic
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;hate&#x2F;0.1.0&#x2F;hate&#x2F;scene&#x2F;&quot;&gt;scene management&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;hate&#x2F;0.1.0&#x2F;hate&#x2F;gui&#x2F;&quot;&gt;GUI&lt;&#x2F;a&gt; systems,
but ggez is minimalistic by design and has none of this.
So, two helper crates were extracted from Häte2d and rebuilt on top of ggez:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;tree&#x2F;721ad06a6&#x2F;ggwp-zscene&quot;&gt;ggwp-zscene&lt;&#x2F;a&gt;
is a simple scene&#x2F;declarative animation manager that provides:
&lt;ul&gt;
&lt;li&gt;Sprites with shared data;&lt;&#x2F;li&gt;
&lt;li&gt;Scene and Actions to manipulate sprites;&lt;&#x2F;li&gt;
&lt;li&gt;Simple layers;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;tree&#x2F;721ad06a6&#x2F;ggwp-zgui&quot;&gt;ggwp-zgui&lt;&#x2F;a&gt;
is a tiny and opinionated UI library:
&lt;ul&gt;
&lt;li&gt;Provides only simple labels, buttons and layouts;&lt;&#x2F;li&gt;
&lt;li&gt;Handles only basic click event;&lt;&#x2F;li&gt;
&lt;li&gt;No custom styles, only the basic one.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Since Icefoxen &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues&#x2F;373&quot;&gt;asked not to use &lt;code&gt;ggez-&lt;&#x2F;code&gt; prefix&lt;&#x2F;a&gt;,
I used &lt;code&gt;ggwp-&lt;&#x2F;code&gt; (&amp;quot;good game, well played!&amp;quot;) to denote that the crate
belongs to ggez&#x27;s ecosystem, but is not official.&lt;&#x2F;p&gt;
&lt;p&gt;These helper crates are still tied to Zemeroth,
not sure how helpful these libraries can be for a project
that is not Zemeroth-like.
But maybe someone will manage to extract some benefit from them.&lt;&#x2F;p&gt;
&lt;p&gt;These crates are still immature and aren&#x27;t published on crates.io yet,
while the &lt;code&gt;rancor&lt;&#x2F;code&gt; component library was renamed to &lt;code&gt;zcomponents&lt;&#x2F;code&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;zcomponents&quot;&gt;is published&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Initially, I migrated to ggez v0.4 that was SDL2-based.
But as soon as the first release candidate of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;-based ggez v0.5
became available I attempted to migrate to it.
I&#x27;ve filed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues?q=is%3Aissue+author%3Aozkriff+created%3A%3E2019-01-01&quot;&gt;a bunch of mostly text-related issues in the process&lt;&#x2F;a&gt;
and tried to fix the most critical ones for Zemeroth:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;pull&#x2F;559&quot;&gt;&amp;quot;Remove the generic argument from Drawable::draw&amp;quot;&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;pull&#x2F;567&quot;&gt;&amp;quot;Drawable::dimensions()&amp;quot;&lt;&#x2F;a&gt; (big one!)
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;pull&#x2F;593&quot;&gt;&amp;quot;Fix Text::dimensions height&amp;quot;&lt;&#x2F;a&gt;.
These PRs took some time, but then I relatively easy
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;426&quot;&gt;ported Zemeroth to ggez v0.5.0-rc.0&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;ggez v0.5 isn&#x27;t released yet, so at the moment
Zemeroth uses ggez &lt;code&gt;0.5.0-rc.1&lt;&#x2F;code&gt;. It&#x27;s stable enough for me.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-05-03--na.png&quot; alt=&quot;nalgebra logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Before the migration,
I was using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustgd&#x2F;cgmath&quot;&gt;cgmath&lt;&#x2F;a&gt;, because it&#x27;s a simple and straightforward library.
But ggez&#x27;s &amp;quot;native&amp;quot; math library is nalgebra and
even though ggez v0.5 uses &lt;code&gt;mint&lt;&#x2F;code&gt; types for all its public API,
I still migrated to nalgebra, because
of &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;cgmath-looking-for-new-maintainers&#x2F;20406&quot;&gt;this&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;One downside of the migration to ggez is that debug builds are much slower now
because more code is pure Rust.
Something like 3-5 FPS on my notebook.
But it&#x27;s ok, I don&#x27;t need debug builds often,
I prefer debugging through logs anyway.
And when I really need a debug build to track down something extremely strange,
I can use cargo&#x27;s yet unstable feature &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;cargo&#x2F;reference&#x2F;unstable.html#profile-overrides&quot;&gt;&amp;quot;profile-overrides&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#bf616a;&quot;&gt;cargo-features &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= [&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;profile-overrides&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]

[profile.dev.overrides.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;opt-level &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Another serious downside of the engine switch,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;issues&#x2F;70&quot;&gt;though temporary (?)&lt;&#x2F;a&gt;,
is that there&#x27;s no native Android version of the game for now.
But who really needs a native port when you have...&lt;&#x2F;p&gt;
&lt;h2 id=&quot;webassembly-version&quot;&gt;WebAssembly Version&lt;&#x2F;h2&gt;
&lt;p&gt;After ggez v0.5-rc.0 was published, Icefoxen has posted
&lt;a href=&quot;https:&#x2F;&#x2F;wiki.alopex.li&#x2F;TheStateOfGGEZ2019&quot;&gt;&amp;quot;The State Of GGEZ 2019&amp;quot;&lt;&#x2F;a&gt;,
where among other things he wrote that
a web port is unlikely to happen soon because
a lot of issues in dependencies need to be fixed first.
It could be relatively easy to write a specialized web backend for ggez,
but ggez&#x27;s philosophy is against having multiple backends.&lt;&#x2F;p&gt;
&lt;p&gt;And that&#x27;s where &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;notfl3&quot;&gt;Fedor @not-fl3&lt;&#x2F;a&gt; suddenly comes in
with his &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&quot;&gt;good-web-game&lt;&#x2F;a&gt; WASM&#x2F;WebGL game engine.
He had been experimenting with 2d web prototypes
(&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;notfl3&#x2F;status&#x2F;1079499336243965952&quot;&gt;like this one&lt;&#x2F;a&gt;)
for some time and used a custom 2d web engine for this.
The API of this engine was heavily inspired by ggez
so he managed to write a partly ggez-compatible wrapper in a weekend.&lt;&#x2F;p&gt;
&lt;p&gt;Colors are slightly off and text rendering is a little bit different,
but otherwise, it works nicely and smoothly,
providing the same experience:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-01-29--web-port-vs-native.jpg&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-01-29--web-port-vs-native.jpg&quot; alt=&quot;web version vs native&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Zemeroth uses good-web-game for its web version as a quick-n-dirty
immediate solution until a proper WASM support arrives to GGEZ
(there&#x27;re no plans of making good-web-game some kind of official GGEZ backend
or anything like this).
The currently implemented subset of ggez&#x27;s API is quite limited
and while it may be used for other games,
it will probably require a lot of work to do.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;You can&#x27;t use crate renaming in &lt;code&gt;Cargo.toml&lt;&#x2F;code&gt; to reuse a name on different platforms,&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#65737e;&quot;&gt;# Cargo.toml with these dependencies wouldn&amp;#39;t build:

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[target.&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cfg(not(target_arch = &amp;quot;wasm32&amp;quot;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;.dependencies]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ggez &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;0.5.0-rc.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;

[target.&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cfg(target_arch = &amp;quot;wasm32&amp;quot;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;.dependencies]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ggez &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;good-web-game&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; }
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So the crate substitution hack is done in &lt;code&gt;main.rs&lt;&#x2F;code&gt;
using &lt;code&gt;extern crate&lt;&#x2F;code&gt; items in &lt;code&gt;main.rs&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cfg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;not&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(target_arch = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wasm32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;))]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extern crate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; ggez;

#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cfg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(target_arch = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wasm32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extern crate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; good_web_game as ggez;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;99.9% of code stays the same,
but I had to use a separate main, because good-web-game
has a different initialization API:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cfg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(target_arch = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;wasm32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;() -&amp;gt; GameResult {
    ggez::start(
        conf::Conf {
            cache: conf::Cache::Index,
            loading: conf::Loading::Embedded,
            ..Default::default()
        },
        |&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;| {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; state = MainState::new(&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; context).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;();
            event::run(context, state)
        },
    )
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, a short helper script &lt;code&gt;utils&#x2F;wasm&#x2F;build.sh&lt;&#x2F;code&gt; was added:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#65737e;&quot;&gt;#!&#x2F;bin&#x2F;sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cp -r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; assets static
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; utils&#x2F;wasm&#x2F;index.html static
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ls&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; static &amp;gt; static&#x2F;index.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cargo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; web build
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koute&#x2F;cargo-web&quot;&gt;cargo-web&lt;&#x2F;a&gt; only packs a &lt;code&gt;static&lt;&#x2F;code&gt; directory (it&#x27;s hardcoded),
so the script copies the game&#x27;s assets there;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;code&gt;index.html&lt;&#x2F;code&gt; template page is also copied there;&lt;&#x2F;li&gt;
&lt;li&gt;all assets should be listed in &lt;code&gt;index.txt&lt;&#x2F;code&gt; for good-web-game to be able
to load them, so this file is created;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can find a minimal example of good-web-game
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&#x2F;tree&#x2F;9b362da6d&#x2F;examples&#x2F;simple&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;itch-io&quot;&gt;itch.io&lt;&#x2F;h2&gt;
&lt;p&gt;The web version needs to be hosted somewhere.
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;&quot;&gt;itch.io&lt;&#x2F;a&gt; is a nice place for this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.itch.io&#x2F;zemeroth&quot;&gt;ozkriff.itch.io&#x2F;zemeroth&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;it has a nice and simple UI (for both developers and consumers),
it&#x27;s extremely &lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;docs&#x2F;creators&#x2F;html5&quot;&gt;easy to upload a web game there&lt;&#x2F;a&gt;
and it&#x27;s a relatively known store for indie games that can provide
some exposure by itself.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.itch.io&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-05-02--itch-ozkriff.png&quot; alt=&quot;screenshot of the itch.io page&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;(&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.itch.io&#x2F;zoc&quot;&gt;Zone of Control also got an itch.io page&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;)&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Note an &amp;quot;Enter fullscreen&amp;quot; button in the bottom right corner
of the game area:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-04-26-wasm-fullscreen-button.png&quot; alt=&quot;&amp;quot;enter fullscreen&amp;quot; button&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;As I&#x27;ve said in the ggez section above,
the web version of the game seems to work fine on most mobile devices:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-05-04--android-wasm.jpg&quot; alt=&quot;web version on android device&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;With a playable version only a click away
I received a lot of fresh feedback:
a lot of people that previously were only following the development
now actually tried to play the game.&lt;&#x2F;p&gt;
&lt;p&gt;The most important things people want to see improved are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improve the GUI: Replace text buttons with icons, show some tooltips, etc;&lt;&#x2F;li&gt;
&lt;li&gt;Add a tutorial or at least a short guide;&lt;&#x2F;li&gt;
&lt;li&gt;Randomness is too frustrating: missed attacks should result in some
little positive effect, like pushing enemies back or reducing their stamina;&lt;&#x2F;li&gt;
&lt;li&gt;The game lacks ranged attack units, like archers or knife throwers.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;@Yururu even wrote
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;post&#x2F;660275&quot;&gt;a giant comment&lt;&#x2F;a&gt; on the itch page!
It&#x27;s inspiring when
a stranger from the internet breaks through the crude primitive interface,
figures out game mechanics on a quite deep level,
and writes a detailed review of their experience and thoughts.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;I&#x27;ve created &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;arm9dr&#x2F;a_list_of_itchio_games_written_in_rust&quot;&gt;an itch.io list of Rust games&lt;&#x2F;a&gt;.
When I find a Rust game on itch.io I add it there.&lt;&#x2F;p&gt;
&lt;p&gt;Also, I&#x27;ve sent a request to itch.io folks to add Rust as an instrument,
so now a more official list is available:
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;games&#x2F;made-with-rust&quot;&gt;itch.io&#x2F;games&#x2F;made-with-rust&lt;&#x2F;a&gt;
(you can edit a game&#x27;s instruments here:
&amp;quot;edit game&amp;quot; -&amp;gt; &amp;quot;metadata&amp;quot; -&amp;gt; &amp;quot;engines &amp;amp; tools&amp;quot;).
Looks like my original list will be deprecated with time but
it&#x27;s still useful for now because only authors of the games can add
an instrument to the metadata.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;visual-improvements&quot;&gt;Visual Improvements&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;975827153056075776&quot;&gt;The initial draft&lt;&#x2F;a&gt;
of the new sprites looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;agents-inkscape-mockup.jpeg&quot; alt=&quot;New style mockup&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tiles are flattened now.
It&#x27;s less a schematic top-down view as it was before.
&amp;quot;Camera&amp;quot; is moved to the side so the tiles and agents are shown
using the same projection.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;re many gradients in the mockup image above.
Later I decided to get rid of all the gradients and curvy lines
and stick with &amp;quot;pseudo lowpoly&amp;quot; style.&lt;&#x2F;p&gt;
&lt;p&gt;Floating Eye and Insecto-snake agent types from the mockup
haven&#x27;t made it to the master yet.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;All objects now have a shadow.
It makes the image a little bit more tangible.
Walk and especially throw animations feel better now.&lt;&#x2F;p&gt;
&lt;p&gt;Initially, shadow was an ellipse with gradient.
Later it was replaced by two semi-transparent hexagons
for style consistency.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;401&quot;&gt;Added blood splatters and weapon flashes&lt;&#x2F;a&gt;
to make attacks more dramatic:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-12-22--blood-splatters-and-weapon-flashes-demo-2.gif&quot; alt=&quot;blood drops and weapon flashes demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The number of drops depends on the attack&#x27;s damage.
Blood slowly disappears into transparency in three turns,
otherwise, the battlefield would become a complete and unreadable mess.&lt;&#x2F;p&gt;
&lt;p&gt;Every agent now has &lt;code&gt;WeaponType&lt;&#x2F;code&gt;: &amp;quot;smash&amp;quot;, &amp;quot;slash&amp;quot;, &amp;quot;pierce&amp;quot;, and &amp;quot;claw&amp;quot;.
For now, they are just visual information.
They affect only what sprite is used during the attack animation.&lt;&#x2F;p&gt;
&lt;p&gt;Same as agent sprites, weapon flash sprites are not yet mirrored horizontally.
That is most noticeable with curvy smash sprite.&lt;&#x2F;p&gt;
&lt;p&gt;Also, spearman&#x27;s &amp;quot;pierce&amp;quot; weapon sprite is horizontal and it looks weird
during vertical attacks.
Either multiple sprites are needed or
it should be rotated.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;390&quot;&gt;Added a Dust effect&lt;&#x2F;a&gt; (for jumps and throws):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-05-12--dust-clouds.gif&quot; alt=&quot;dust demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is created by a simple function
that just emits a bunch of half-transparent sprites
and attaches position and color change actions to them.
Sprites&#x27; size, velocity, and transparency are a little bit randomized.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;campaign-mode&quot;&gt;Campaign Mode&lt;&#x2F;h2&gt;
&lt;p&gt;A basic campaign mode was added.
It&#x27;s just a linear sequence of battles with predefined scenarios.
After each battle, your survived fighters are carried over to the next battle.
If you lose a battle - the campaign is over for you.
If you win a battle, you&#x27;re shown a transition screen with a list
of your dead fighters, your current squad, and possible recruits:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-11-15--first-iteration-of-a-campaign-mode.png&quot; alt=&quot;Campaign screen example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The campaign is defined by a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;ron&quot;&gt;RON&lt;&#x2F;a&gt; config file with this structure:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;initial_agents: [&amp;quot;swordsman&amp;quot;, &amp;quot;alchemist&amp;quot;],
nodes: [
    (
        scenario: (
            map_radius: (4),
            rocky_tiles_count: 8,
            objects: [
                (owner: Some((1)), typename: &amp;quot;imp&amp;quot;, line: Front, count: 3),
                (owner: Some((1)), typename: &amp;quot;imp_bomber&amp;quot;, line: Middle, count: 2),
            ],
        ),
        award: (
            recruits: [&amp;quot;hammerman&amp;quot;, &amp;quot;alchemist&amp;quot;],
        ),
    ),
    (
        scenario: (
            rocky_tiles_count: 10,
            objects: [
                (owner: None, typename: &amp;quot;boulder&amp;quot;, line: Any, count: 3),
                (owner: None, typename: &amp;quot;spike_trap&amp;quot;, line: Any, count: 3),
                (owner: Some((1)), typename: &amp;quot;imp&amp;quot;, line: Front, count: 4),
                (owner: Some((1)), typename: &amp;quot;imp_toxic&amp;quot;, line: Middle, count: 2),
                (owner: Some((1)), typename: &amp;quot;imp_bomber&amp;quot;, line: Back, count: 1),
                (owner: Some((1)), typename: &amp;quot;imp_summoner&amp;quot;, line: Back, count: 2),
            ],
        ),
        award: (
            recruits: [&amp;quot;swordsman&amp;quot;, &amp;quot;spearman&amp;quot;, &amp;quot;hammerman&amp;quot;],
        ),
    ),
]
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here&#x27;s some real campaign scenario:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets&#x2F;blob&#x2F;acd9fe9ef&#x2F;campaign_01.ron&quot;&gt;campaign_01.ron&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s a known bug that you can exit from a battle that is not going well
at any moment to start again.
This will be forbidden - permadeath is the only way :) .&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hit-chances&quot;&gt;Hit Chances&lt;&#x2F;h2&gt;
&lt;p&gt;In the previous version of Zemeroth the hit chance was always 50%.
Now, &lt;code&gt;attack_accuracy&lt;&#x2F;code&gt; and &lt;code&gt;dodge&lt;&#x2F;code&gt; stats were added to the &lt;code&gt;Agent&lt;&#x2F;code&gt; component
to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;370&quot;&gt;implement a basic hit chances math&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;When you select an agent that can attack
(has an attack point and enemies in range)
a hit chance is shown over all available targets:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-05-12--hit-chances-1.png&quot; alt=&quot;Hit chances screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;During the attack animation, a hit chance is shown near
the attacker with a smaller font.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-05-12--attack-hit-chances.gif&quot; alt=&quot;Hit chance during the attack animation&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This was added in order for the player to see how dangerous enemy attacks are.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, wounded agents now become less accurate.
Each lost strength point results in -10% hit chance penalty (up to -30%).&lt;&#x2F;p&gt;
&lt;p&gt;Missing strength points (wounds) are shown by almost transparent green dots:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-10-04--transparent-dots.png&quot; alt=&quot;demo of transparent strength points&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This gameplay change has two game balance consequences:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Now it&#x27;s more important to wound enemies,
finishing them off is a lower priority most of the time.
Sometimes wounded enemies even can be helpful to the player,
because they are not a real threat to player&#x27;s fighters,
but can block the path for other enemies;&lt;&#x2F;li&gt;
&lt;li&gt;Alchemist&#x27;s &amp;quot;heal&amp;quot; ability became important
because your agents are less useful when wounded too.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, attacks with strength &amp;gt; 1 have additional hit chances - with reduced damage
(each attack strength point gives 10% hit chance improvement).
This emulates the situation when an attacker barely touches their target
but still manages to make some damage to it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;armor&quot;&gt;Armor&lt;&#x2F;h2&gt;
&lt;p&gt;A basic armor system was implemented.
Armor points are shown above the agent in one line with strength points
using the yellow dots.
Each armor point deflects one damage point on each attack.
Some weapons can break armor (the &lt;code&gt;attack_break&lt;&#x2F;code&gt; parameter).
Fire and poison ignore armor.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a little demo:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-09-16--old-armor-demo.gif&quot; alt=&quot;old armor demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;an imp can&#x27;t break armor so he can&#x27;t deal any damage to the heavy swordsman;&lt;&#x2F;li&gt;
&lt;li&gt;toxic imp can&#x27;t deal any direct damage but he poisons the swordsman
ignoring the armor;&lt;&#x2F;li&gt;
&lt;li&gt;insecto-snake destroys the armor with a powerful attack.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In the current version of the game only imp summoners have armor,
so be careful with them.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ai-updates&quot;&gt;AI Updates&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Now, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;306&quot;&gt;enemies always act in order of remoteness from a player&#x27;s fighters&lt;&#x2F;a&gt;.
This way melee imps don&#x27;t trip over each other too much.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;AI learned to avoid walking into spikes, fire and poison clouds.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;AI now moves closer to its targets even if there&#x27;s no direct path to them
(&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;09ODLL_Nu8w&quot;&gt;full demo video&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;09ODLL_Nu8w&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-06-04--ai-pathfinding-demo.gif&quot; alt=&quot;new pathfinding demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Non-melee imps (bombers and summoners) are now
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;298&quot;&gt;trying to keep distance from the player&#x27;s fighters in range&lt;&#x2F;a&gt;.
They need to avoid melee fights but still be able to throw bombs
at a player&#x27;s fighters or summon new imps near the frontline.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-07-02--ai-distance.gif&quot; alt=&quot;ai distance demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Summoner has a slightly greater min&#x2F;max range than bomber.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;During the debugging of the above-mentioned features,
I also wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;blob&#x2F;721ad06a6&#x2F;src&#x2F;core&#x2F;map.rs#L152-L169&quot;&gt;a simple helper function &lt;code&gt;dump_map&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
that takes a closure and dumps required map data as a &lt;code&gt;char&lt;&#x2F;code&gt;
in the above GIF, pic 1 shows objects (&lt;code&gt;A&lt;&#x2F;code&gt; - an agent, &lt;code&gt;O&lt;&#x2F;code&gt; - a non-agent object)
and pic 2 shows available positions (&lt;code&gt;X&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bombs-and-commutative-effects&quot;&gt;Bombs and Commutative Effects&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-06-04--bombs-issue.png&quot; alt=&quot;Illustration with multiple bombs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ In the previous version of Zemeroth,
each of these bombs would have exploded at the beginning of the next turn
in order of their creation.
But this order is hard to remember and it&#x27;s not clear from the picture at all.&lt;&#x2F;p&gt;
&lt;p&gt;The order is very important as the explosions push back objects - if the first
explosion is on the left, an agent will be damaged by the right bomb too.&lt;&#x2F;p&gt;
&lt;p&gt;Pushback is not the only possible effect suffering from this.
Other possible examples of &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Commutative_property&quot;&gt;non-commutative effects&lt;&#x2F;a&gt;:
teleportation, armor-breaking acid, immunity to damage, etc.
Anything where changing the order of application can change the final state.&lt;&#x2F;p&gt;
&lt;p&gt;I see two possible ways to solve this:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;590380&#x2F;Into_the_Breach&quot;&gt;&amp;quot;Into the Breach&amp;quot;&lt;&#x2F;a&gt;-like approach with explicit numbers;&lt;&#x2F;li&gt;
&lt;li&gt;Forbid non-commutative delayed effects.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;ItB&#x27;s approach means just adding this order information
explicit in the game&#x27;s interface.
It looks like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-06-22-into-the-breach.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-06-22-into-the-breach-mini.png&quot; alt=&quot;Into the breach screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Technically it&#x27;s possible, but I don&#x27;t think that it fits for Zemeroth
because it&#x27;s an extremely noisy interface feature,
but it&#x27;s not really a core mechanic.&lt;&#x2F;p&gt;
&lt;p&gt;So, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;296&quot;&gt;I&#x27;ve taken the latter way&lt;&#x2F;a&gt;:
the &amp;quot;Bomb&amp;quot; ability was split into two abilities: instant &amp;quot;BombPush&amp;quot;
and delayed &amp;quot;BombDamage&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;The plan is to have three groups of objects with effects:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Objects with immediate effects - can have non-commutative effects;&lt;&#x2F;li&gt;
&lt;li&gt;General objects with timed effects - only commutative effects allowed;&lt;&#x2F;li&gt;
&lt;li&gt;Special rare timed objects - can do whatever they want,
but only allowed as unique boss abilities, work in their own special phase.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;other-game-rules-changes&quot;&gt;Other Game Rules Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Spike traps were added. They&#x27;re almost like fire tiles, but permanent.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-05-12--spikes.png&quot; alt=&quot;spike trap&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;351&quot;&gt;Updated&lt;&#x2F;a&gt; &amp;quot;Poison&amp;quot; passive ability:
it can’t, by itself, kill an agent anymore.
“Poisoned” status is removed when a target’s strength is reduced to 1.
This should make battles a little bit less frustrating and more dramatic.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Updated the &amp;quot;Summon&amp;quot; ability:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;413&quot;&gt;Each agent is now treated individually&lt;&#x2F;a&gt;.
The new code treats each summoned agent individually
thus preventing summoning weird packs of same imp types.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;349&quot;&gt;Each use of the &amp;quot;Summon&amp;quot; ability now creates one more imp&lt;&#x2F;a&gt;.
It forces the player to play more aggressively.&lt;&#x2F;p&gt;
&lt;p&gt;Changed the summoning algorithm to
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1040321852495863808&quot;&gt;prefer imp types that are under-presented on the map&lt;&#x2F;a&gt;,
not just random ones.
Seems to work fine now - even with increased summon rate imp types
are balanced in count: &lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-09-14--fixed-summoning.png&quot;&gt;&lt;em&gt;pic&lt;&#x2F;em&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;360&quot;&gt;Randomly-placed agents are not created point-blank to their enemies anymore&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;369&quot;&gt;randomly-placed objects are now created on different &lt;code&gt;Line&lt;&#x2F;code&gt;s&lt;&#x2F;a&gt;.
This prevents Imp Summoners from being created only a tile away from enemies
and thus not having any chances to survive.
Or Imp Bombers being instantly tied with a melee fight.&lt;&#x2F;p&gt;
&lt;p&gt;A line is defined in the scenario files:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(owner: Some((1)), typename: &amp;quot;imp&amp;quot;, line: Front, count: 4),
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There&#x27;re four possible values:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#b48ead;&quot;&gt;pub enum &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Line { Any, Front, Middle, Back }
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;gameplay-video&quot;&gt;Gameplay Video&lt;&#x2F;h2&gt;
&lt;p&gt;So, putting these gameplay changes together:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;zUVwAFSrh3c&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-05-12--playtest-youtube-preview.png&quot; alt=&quot;youtube video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is a piece of a campaign mode playtest: battles 3, 4, and 5.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;svg-atlas&quot;&gt;SVG Atlas&lt;&#x2F;h2&gt;
&lt;p&gt;Back to more technical updates.&lt;&#x2F;p&gt;
&lt;p&gt;As git is bad at storing non-text files and
it&#x27;s practically impossible to use &lt;a href=&quot;https:&#x2F;&#x2F;git-lfs.github.com&quot;&gt;Git LFS&lt;&#x2F;a&gt; with a free GitHub plan
(because of &lt;a href=&quot;https:&#x2F;&#x2F;help.github.com&#x2F;en&#x2F;articles&#x2F;about-storage-and-bandwidth-usage&quot;&gt;the bandwidth limitations&lt;&#x2F;a&gt;),
it looks like a good idea to keep text source files, assets source files,
and built assets in separate repositories
to make &amp;quot;optimization history editing&amp;quot; (removing old commits) easier.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;The main repo&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets&quot;&gt;the assets repo&lt;&#x2F;a&gt;
already existed,
but I wasn&#x27;t storing assets source files in any VCS.&lt;&#x2F;p&gt;
&lt;p&gt;So, during v0.5 development, I&#x27;ve created another repo for assets sources:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets_src&quot;&gt;ozkriff&#x2F;zemeroth_assets_src&lt;&#x2F;a&gt;.
The two key files of this repo are: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets_src&#x2F;blob&#x2F;1f1813eff&#x2F;atlas.svg&quot;&gt;atlas.svg&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets_src&#x2F;blob&#x2F;1f1813eff&#x2F;export.py&quot;&gt;export.py&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The atlas contains all sprites in one file.
Each sprite is stored as a named group.
As the game isn&#x27;t that much art heavy, using one file for all visual assets
looks fitting, because of it:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;simplifies sharing parts of sprites and mockups creation;&lt;&#x2F;li&gt;
&lt;li&gt;avoids complications of linking&#x2F;embedding multiple SVG files together
(you need to manually edit XML do to this properly as far as I know).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The export script is quite simple, it just calls Inkscape using its CLI
interface and tells what named group needs to be exported to PNGs.
It boils down to:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;id &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;imp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;imp_toxic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;grass&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]:
    subprocess.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;([
        &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;inkscape&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;,
        input_file_name,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--export-id=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&amp;#39;,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;--export-png=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{out_dir_name}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.png&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;#39;,
    ], &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;check&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There&#x27;s also a hack to avoid specifying exact sprite PNG sizes
as raw numbers in the export script:
each named group contains an invisible square (a rectangle for terrain tiles).
It can be temporary made slightly visible for debugging purposes:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-07-16--svg-atlas-test.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-07-16--svg-atlas-test.png&quot; alt=&quot;sprites in the debug mode&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;assets-hash&quot;&gt;Assets Hash&lt;&#x2F;h2&gt;
&lt;p&gt;Another technical assets-related update is that a md5 hash check was added.
This should help to detect when someone who is building from source
forgets to update the assets.&lt;&#x2F;p&gt;
&lt;p&gt;A small &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets&#x2F;blob&#x2F;acd9fe9ef&#x2F;checksum.py&quot;&gt;checksum.py&lt;&#x2F;a&gt; python script is used to calculate the hash
of all non-hidden files in the repo.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets&#x2F;blob&#x2F;acd9fe9ef&#x2F;travis.yml&quot;&gt;CI uses it to check&lt;&#x2F;a&gt;
that the committed hashsum really corresponds to the committed assets.&lt;&#x2F;p&gt;
&lt;p&gt;The expected hash is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;blob&#x2F;721ad06a6src&#x2F;main.rs#L92&quot;&gt;hardcoded directly into main.rs&lt;&#x2F;a&gt;.
If the game is run with a wrong version of assets,
now you get a clear error message about that:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;Bad assets checksum abcdeabcdeabcdeabcdeabcdeabcdeab (expected 18e7de361e74471aeaec3f209ef63c3e)
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;tests&quot;&gt;Tests&lt;&#x2F;h2&gt;
&lt;p&gt;One of the benefits of making a turn-based game is that you can relatively easy
separate the logic from the visuals and cover the former with tests.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;439&quot;&gt;A few test scenarios were added&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;They are completely deterministic.
Randomness is mitigated with special agent types with unrealistic stats
(for example, &lt;code&gt;accuracy = 999&lt;&#x2F;code&gt; or &lt;code&gt;strength = 1&lt;&#x2F;code&gt;),
that allows them to always pass required tests
(for example, always hits or always dies on the first hit),
and an additional &lt;code&gt;no_random&lt;&#x2F;code&gt; flag in the game state, that causes a panic
if agent&#x27;s stats during the &amp;quot;dice roll&amp;quot; may result in non-determined results
(basically, it checks that the coefficients are large or low enough
to shut off any dice value fluctuations).&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Exact objects&amp;quot; were added to the scenarios.
Test scenarios mustn&#x27;t contain any randomly-placed objects,
otherwise the &lt;code&gt;no_random&lt;&#x2F;code&gt; debug flag will cause a panic.&lt;&#x2F;p&gt;
&lt;p&gt;Basic test looks like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;test&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;basic_move&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; prototypes = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;prototypes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&amp;amp;[
        (&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mover&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;component_agent_move_basic&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;()].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;()),
        (&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;dull&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;component_agent_dull&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;()].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;to_vec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;()),
    ]);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; scenario = scenario::default()
        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;P0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mover&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, PosHex { q: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;})
        .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;P1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;dull&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;, PosHex { q: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;});
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; state = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;debug_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(prototypes, scenario);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; path = Path::new(vec![
        PosHex { q: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;},
        PosHex { q: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, r: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;},
    ]);
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;exec_and_check&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(
        &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; state,
        command::MoveTo {
            id: ObjId(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;),
            path: path.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(),
        },
        &amp;amp;[Event {
            active_event: event::MoveTo {
                id: ObjId(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;),
                path,
                cost: Moves(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;),
            }
            .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;into&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; small formatting issue, see a note below
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;            actor_ids: vec![ObjId(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;)],
            instant_effects: Vec::new(),
            timed_effects: Vec::new(),
            scheduled_abilities: Vec::new(),
        }],
    );
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;(&lt;em&gt;I didn&#x27;t use the builder pattern for event construction,
even though most of the time two or three its fields are empty vectors,
because I&#x27;ve faced some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rustfmt&#x2F;issues&#x2F;3157#issuecomment-472718887&quot;&gt;method chains formatting issues&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;Test scenario consists of a list of commands and a list of expected events.
Occasionally, it can check some parts of the state.&lt;&#x2F;p&gt;
&lt;p&gt;A prototypes list and a scenario are created from scratch
(though, with some helper functions) for each test.
It takes more lines of code than reusing a small set of multi-cases scenarios,
but the idea is that this way the amount of objects and components
in each test is minimized.
This way it&#x27;s easier to diagnose the bug
and makes tests less likely to break on unrelated game logic change.&lt;&#x2F;p&gt;
&lt;p&gt;A &amp;quot;dull&amp;quot; enemy agent is required only for the scenario not to end instantly.
Because the win condition is when no enemy agents are alive.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;colin-kiegel&#x2F;rust-pretty-assertions&quot;&gt;colin-kiegel&#x2F;rust-pretty-assertions&lt;&#x2F;a&gt;
is a super-useful crate when you need to debug
failing assert comparisons of big hierarchical objects
(some of which may be many screens long in my case).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2019-03-20--color-assert.png&quot; alt=&quot;a colored assert error&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One peculiarity is that I had to replace all &lt;code&gt;HashMap&amp;lt;ObjId, Vec&amp;lt;Foo&amp;gt;&amp;gt;&lt;&#x2F;code&gt;
in events with &lt;code&gt;Vec&amp;lt;(ObjId, Vec&amp;lt;Foo&amp;gt;)&amp;gt;&lt;&#x2F;code&gt; to preserve the order.
Otherwise pretty-assertion has been exploding.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-technical-changes&quot;&gt;Other Technical Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;394&quot;&gt;Moved all crates to Rust 2018&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;226&quot;&gt;Added a note about &#x27;help-wanted&#x27; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Used &lt;code&gt;derive_more::From&lt;&#x2F;code&gt; for enums and errors;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;229&quot;&gt;Migrated to &lt;code&gt;std::time::Duration&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
and added &lt;code&gt;time_s&lt;&#x2F;code&gt; shortcut&#x2F;helper function;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;365&quot;&gt;Removed&lt;&#x2F;a&gt; some data duplication
from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth_assets&#x2F;blob&#x2F;69e6fb34c&#x2F;objects.ron&quot;&gt;the &lt;code&gt;.ron&lt;&#x2F;code&gt; config with objects descriptions&lt;&#x2F;a&gt;
using serde&#96;s default annotations and helper init functions;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;220&quot;&gt;Added a &lt;code&gt;windows_subsystem&lt;&#x2F;code&gt; attribute&lt;&#x2F;a&gt;
to hide cmd window on Windows;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;233&quot;&gt;Fixed panic when a boulder is pushed into fire&#x2F;spikes&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;431&quot;&gt;Mergeed all &#x27;line_height&#x27; consts and functions&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;365&quot;&gt;Removed data duplication from &lt;code&gt;objects.ron&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;indikator&quot;&gt;Indikator&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1058359693503070208&quot;&gt;Gave a presentation about Zemeroth&lt;&#x2F;a&gt; at 8th Indie-StandUp
at &lt;a href=&quot;http:&#x2F;&#x2F;indierocket.ru&quot;&gt;Indikator&lt;&#x2F;a&gt;.
It went pretty good, local indie devs seemed to like the project,
especially considering that it&#x27;s opensource and uses an interesting tech.
At least one of the devs has visited
&lt;a href=&quot;https:&#x2F;&#x2F;www.meetup.com&#x2F;spbrust&quot;&gt;our local rustlang meetup&lt;&#x2F;a&gt; afterward. 🦀&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2019-05-13--devlog-zemeroth-v0-5&#x2F;2018-11-03--indikator.jpg&quot; alt=&quot;me presenting Zemeroth at Indikator&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;It&#x27;s unrelated, but &lt;a href=&quot;https:&#x2F;&#x2F;www.redblobgames.com&#x2F;grids&#x2F;hexagons&#x2F;implementation.html&quot;&gt;Zemeroth was mentioned on Amit&#x27;s page about hex math&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;migrated-this-devlog-to-zola&quot;&gt;Migrated This Devlog to Zola&lt;&#x2F;h2&gt;
&lt;p&gt;During the preparation for this Zemeroth release, I&#x27;ve &lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;index.html#restructuredtext-markdown&quot;&gt;finally&lt;&#x2F;a&gt;
switched the static site generator behind this devlog
from Python-based &lt;a href=&quot;https:&#x2F;&#x2F;getpelican.com&quot;&gt;Pelican&lt;&#x2F;a&gt; to Rustlang-based &lt;a href=&quot;http:&#x2F;&#x2F;getzola.org&quot;&gt;Zola&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1119212330246656002&quot;&gt;Here&#x27;s a twitter thread&lt;&#x2F;a&gt;
with some migration notes.&lt;&#x2F;p&gt;
&lt;p&gt;TLDR is that
I&#x27;ve mostly automatically converted all RestructuredText post sources into Markdown,
replaced &lt;a href=&quot;http:&#x2F;&#x2F;disqus.com&quot;&gt;Disqus comments&lt;&#x2F;a&gt; with direct links to reddit&#x2F;twitter&#x2F;etc,
set up redirects from old URLs.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;roadmap&quot;&gt;Roadmap&lt;&#x2F;h2&gt;
&lt;p&gt;What&#x27;s next? Some things I &lt;em&gt;hope&lt;&#x2F;em&gt; to implement for v0.6 release are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;276&quot;&gt;Replace the text buttons with icons&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;214&quot;&gt;Reduce text overlapping&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;221&quot;&gt;Add sound effects and music&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;399&quot;&gt;Add fighters upgrade trees&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can find a slightly more detailed roadmap
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth#roadmap&quot;&gt;in the project&#x27;s README&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;re interested in this project you can follow
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff on Twitter&lt;&#x2F;a&gt; for more news.&lt;&#x2F;p&gt;
&lt;p&gt;Also, if you&#x27;re interested in Rust game development in general,
you may want to check &lt;a href=&quot;http:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev&lt;&#x2F;a&gt;
twitter account that I&#x27;ve started recently.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;bo5w0q&#x2F;zemeroth_v05_ggez_wasm_itchio_visuals_ai_campaign&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;1127977478746669056&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Zemeroth v0.4: Abilities, Lasting Effects and New Unit Types</title>
                <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2018-03-03--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2018-03-03--devlog/</guid>
                <description>&lt;p&gt;Hi, comrades! I&#x27;m happy to announce Zemeroth v0.4.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; is a turn-based hexagonal tactical game written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;You can &lt;strong&gt;download precompiled binaries&lt;&#x2F;strong&gt; for Windows, Linux, macOS and android here:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;releases&#x2F;tag&#x2F;v0.4.0&quot;&gt;releases&#x2F;tag&#x2F;v0.4.0&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This release adds &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&#x2F;tokei&quot;&gt;~2k lines of code&lt;&#x2F;a&gt; - a lot of new features!
And it&#x27;s hard to describe all the stuff only with words and static images
so this time I&#x27;ll try to use more GIFs
(btw, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phw&#x2F;peek&quot;&gt;Peek&lt;&#x2F;a&gt; is a cool app for fast gif recording).
I hope that they won&#x27;t cause too much problems for the readers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;NOTE:&lt;&#x2F;em&gt; Most of the GIFs were recorded on a map of 7 tiles wide,
but the actual map is 11.
See youtube video in the middle of the article for some real gameplay.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;simple-walking-animation&quot;&gt;Simple walking animation&lt;&#x2F;h2&gt;
&lt;p&gt;The first and simplest change is simple walking animations.
Compare:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-move-pre.gif&quot; alt=&quot;no animation&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-move-now.gif&quot; alt=&quot;new arc animation&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s just a small visual improvement but it makes the game more lively.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gameplay-updates&quot;&gt;Gameplay Updates&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;wounds-reduce-attacks-by-one&quot;&gt;Wounds reduce attacks by one&lt;&#x2F;h3&gt;
&lt;p&gt;New rule: every successful attack now reduces target&#x27;s attack by 1.
It&#x27;s small but important change because it increases the value of initiative
and is relied upon by many abilities.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;strong-attacks&quot;&gt;Strong Attacks&lt;&#x2F;h3&gt;
&lt;p&gt;In the previous version all attacks were dealing 1 damage.
Now, &lt;strong&gt;Swordsman&lt;&#x2F;strong&gt; and &lt;strong&gt;Hammerman&lt;&#x2F;strong&gt; (see below) deal 2 damage points per hit.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;abilities&quot;&gt;Abilities&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--abilities-buttons-swordsman.png&quot; alt=&quot;buttons: abilities&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Abilities is the main feature of this release.
They come in two flavours: &lt;strong&gt;active&lt;&#x2F;strong&gt; and &lt;strong&gt;passive&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each active ability activation requires either &lt;strong&gt;Attack&lt;&#x2F;strong&gt; (red)
or &lt;strong&gt;Joker&lt;&#x2F;strong&gt; (purple) point and can trigger enemy&#x27;s reaction attack.&lt;&#x2F;p&gt;
&lt;p&gt;Most abilities have cooldowns of 2 or 3 turns long.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Passive abilities don&#x27;t require any action points and are activated automatically:
during attacks or at the begining of the turn, for example.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Particular abilities are explained in unit sections below.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;new-unit-toxic-imp&quot;&gt;New Unit: Toxic Imp&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-imp-poison.gif&quot; alt=&quot;toxic imp demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s start with something simple.
This enemy is similar to basic Imp, but does no direct damage
and has &lt;strong&gt;Poison Attack&lt;&#x2F;strong&gt; passive ability.&lt;&#x2F;p&gt;
&lt;p&gt;Poisoned unit receives one would at the begining of each turn.
Note that poison also takes away one attack from the victim,
weaking it even more.
Poison reduces attacks of poisoned unit by one.&lt;&#x2F;p&gt;
&lt;p&gt;Toxic Imp also has no reaction attacks as he&#x27;s dangerous enough without them.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;new-unit-imp-bomber&quot;&gt;New Unit: Imp-Bomber&lt;&#x2F;h3&gt;
&lt;p&gt;Poison is cool, but it doesn&#x27;t really changes the game much.
One obvious problem of v0.3 was &lt;a href=&quot;http:&#x2F;&#x2F;keithburgun.net&#x2F;turtling&quot;&gt;turtling&lt;&#x2F;a&gt; -
no movement, boring.
Reaction attacks encourage defensive playstyle.&lt;&#x2F;p&gt;
&lt;p&gt;So a new unit was added: &lt;strong&gt;Imp-Bomber&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--imp-bomb-attack.gif&quot; alt=&quot;imp-bomber in action&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ He has an active ability &lt;strong&gt;Bomb&lt;&#x2F;strong&gt; and a very simple AI
that tries to use it, if it&#x27;s available, and then acts as a normal Imp.
Bombs with delayed detonation is a classic way to help with this.&lt;&#x2F;p&gt;
&lt;p&gt;Bomb explodes on the next turn and damages everyone around,
knocking them back for one tile.&lt;&#x2F;p&gt;
&lt;p&gt;NOTE: As Imps are stupid they can be easily damaged by their bombs. Use it.&lt;&#x2F;p&gt;
&lt;p&gt;This enemy doesn&#x27;t allow you to stay in a good position without movement.
But you still can sometimes move back and forth, so...&lt;&#x2F;p&gt;
&lt;h3 id=&quot;new-unit-imp-summoner&quot;&gt;New Unit: Imp-Summoner&lt;&#x2F;h3&gt;
&lt;p&gt;...Soo, meet &lt;strong&gt;Imp-Summoner&lt;&#x2F;strong&gt;!
This unit summons so many imps so the only way to stay alive
is to rush and attack him while summoned imps are still weak.
Summoners are your main targets.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--ability-summon.gif&quot; alt=&quot;&#x27;summon&#x27; ability&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Summon&lt;&#x2F;strong&gt; ability creates three imps of a random type.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;NOTE: Actually, the plan is to make each &lt;strong&gt;summon&lt;&#x2F;strong&gt; activation even more powerful:
call 3-4-5-6 imps, to increase the pressure over time.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Summoner is slow - сan either move one tile or attack&#x2F;cast during his turn -
but he has a lot of strength (health) points
and has &lt;strong&gt;Heavy Impact&lt;&#x2F;strong&gt; and &lt;strong&gt;Regeneration&lt;&#x2F;strong&gt; passive abilities:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--summoner-regeneration-hit.gif&quot; alt=&quot;Regeneration + Heavy Impact&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Regeneration&lt;&#x2F;strong&gt; restores one strength point in the begining of every turn.
&lt;strong&gt;Heavy Impact&lt;&#x2F;strong&gt; throws opponents one tile away on every hit (&lt;strong&gt;FlyOff&lt;&#x2F;strong&gt; effect).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;new-unit-alchemist&quot;&gt;New Unit: Alchemist&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s move to player&#x27;s new units: meet the first one - &lt;strong&gt;Alchemist&lt;&#x2F;strong&gt;.
He&#x27;s a support unit and has &lt;strong&gt;no direct attacks&lt;&#x2F;strong&gt;,
but has a bunch of useful abilities.&lt;&#x2F;p&gt;
&lt;p&gt;Basic &lt;strong&gt;Bomb&lt;&#x2F;strong&gt; ability works the same way as it does for Imp-Bomber.
&lt;strong&gt;Fire bomb&lt;&#x2F;strong&gt; and &lt;strong&gt;poison bomb&lt;&#x2F;strong&gt; are a little bit more interesting:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-fire-bomb.gif&quot; alt=&quot;fire bomb demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Fire&lt;&#x2F;strong&gt; object just deals one damage point each turn
to anyone standing in the same tile
or to anyone walking through it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-poison-bomb.gif&quot; alt=&quot;poison bomb demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Poison cloud&lt;&#x2F;strong&gt; object acts similar to fire,
but it casts &lt;strong&gt;Poisoned&lt;&#x2F;strong&gt; effects on agents.
This effects deals one point of damage each turn and lasts for two turns.&lt;&#x2F;p&gt;
&lt;p&gt;Both fire and poison cloud objects disappear after two rounds.
Note that damage from fire and poison also removes attacks from target -
this can protect your alchemist in tough situations.&lt;&#x2F;p&gt;
&lt;p&gt;Alchemist has one more useful ability:
&lt;strong&gt;Heal&lt;&#x2F;strong&gt; can restore two strength points and remove any lasting effects:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-heal.gif&quot; alt=&quot;&amp;quot;Heal&amp;quot; ability demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;new-unit-hammerman&quot;&gt;New Unit: Hammerman&lt;&#x2F;h3&gt;
&lt;p&gt;Slow but powerful unit. His attack deals 2 damage points
and he has &lt;strong&gt;HeavyImpact&lt;&#x2F;strong&gt; passive ability (same as Summoner, see above).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--hammerman-club-hit.gif&quot; alt=&quot;&amp;quot;Club&amp;quot; + move + attack combo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Club&lt;&#x2F;strong&gt; ability causes &lt;strong&gt;Stun&lt;&#x2F;strong&gt; lasting effect and &lt;strong&gt;FlyOff&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Stun&lt;&#x2F;strong&gt; lasting effect removes all attacks&#x2F;moves&#x2F;jokers
from the target for one round.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-club-knockback.gif&quot; alt=&quot;&amp;quot;Knockback&amp;quot; a boulder + &amp;quot;Club&amp;quot; a bomb demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ These abilities can be used to move bombs and boulders too.
You can push enemy into fire, poison or bomb.
Or you can push some other your figher out of danger if needed.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;updated-swordsman&quot;&gt;Updated Swordsman&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Swordsman&lt;&#x2F;strong&gt; also got a few updates.
His main attack now also deals two points of damage.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--rage.gif&quot; alt=&quot;&amp;quot;Rage&amp;quot; ability demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Rage&lt;&#x2F;strong&gt; ability gives a lot of attacks but has a long cooldown,
so you need to choose carefully when to use it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--swordsman-jump.gif&quot; alt=&quot;Jump ability&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Jump&lt;&#x2F;strong&gt; ability - think about Diablo&#x27;s Barbarian
(future versions of the ability may get stunning effect ;) ).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-dash-away.gif&quot; alt=&quot;&amp;quot;Dash&amp;quot; escape demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;strong&gt;Dash&lt;&#x2F;strong&gt; ability allows you to
move one tile without triggering reaction attacks.
Allows you to start the attack or to escape from the enemies.&lt;&#x2F;p&gt;
&lt;p&gt;It may be hard to escape from a bad position witout &lt;strong&gt;Dash&lt;&#x2F;strong&gt; or &lt;strong&gt;Jump&lt;&#x2F;strong&gt; ability:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-no-dash-escape-attempt.gif&quot; alt=&quot;Can&#x27;t escape with simple move demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Dash&lt;&#x2F;strong&gt; can be combined with &lt;strong&gt;Rage&lt;&#x2F;strong&gt; and &lt;strong&gt;Jump&lt;&#x2F;strong&gt; abilities to perform
a series of attacks and return back to safety:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--swordsman-combo.gif&quot; alt=&quot;Rage, Dash &amp;amp; Jump combo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;updated-spearman&quot;&gt;Updated Spearman&lt;&#x2F;h3&gt;
&lt;p&gt;Also got a &lt;strong&gt;Jump&lt;&#x2F;strong&gt; ability, but of a different flavour:
three tiles distance and three turns cooldown.
So it&#x27;s mostly useful for escaping:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--spearman-jump-away.gif&quot; alt=&quot;jump away&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gameplay-video&quot;&gt;Gameplay Video&lt;&#x2F;h2&gt;
&lt;p&gt;So, putting this all together:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=DpDyVFpoDSQ&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;gameplay-vide-preview.png&quot; alt=&quot;gameplay&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It starts reminding something like a real game, isn&#x27;t it? :)
Though a lot of work is still need to be done.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;implementation-note-ron-v0-2&quot;&gt;Implementation note: RON v0.2&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;ron&#x2F;releases&#x2F;tag&#x2F;v0.2&quot;&gt;RON v0.2&lt;&#x2F;a&gt;
added &lt;code&gt;unwrap_newtypes&lt;&#x2F;code&gt; extension that seriously simplified my config files
by getting rid of a lot of braces:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03--ron-diff.gif&quot; alt=&quot;RON diff&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Thanks, @Torkleyy!&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2018-03-03--devlog&#x2F;2018-03-03-phone.gif&quot; alt=&quot;Zemeroth on android device&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s all for today, I have to go play &lt;a href=&quot;http:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;590380&#x2F;Into_the_Breach&quot;&gt;Into the Breach&lt;&#x2F;a&gt;! :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;81s7va&#x2F;zemeroth_v04_abilities_lasting_effects_and_new&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;970017320637747200&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Zemeroth v0.0.3: Jokers, Rancor, Blood and more</title>
                <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2017-12-01--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2017-12-01--devlog/</guid>
                <description>&lt;p&gt;Hi, comrades! Welcome to the second issue of Zemeroth&#x27;s devlog.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; is a turn-based hexagonal tactical game written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;It slowly grows into a middle-sized project:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; has &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&#x2F;tokei&quot;&gt;4.3k LoCs&lt;&#x2F;a&gt; and 82🌟 now.
Though I still can&#x27;t find enough free time to work on it on daily basis
and I have to take weeks-long breaks sometimes.&lt;&#x2F;p&gt;
&lt;p&gt;So, the progress is quite slow 🐌 but still,
I&#x27;ve managed to do some amount of useful stuff during last three months.
Here&#x27;s a short video of how the game looks right now:&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe frameborder=&quot;0&quot; allowfullscreen src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;XrC4eCqspUo?rel=0&amp;showinfo=0&quot;&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Ok, let&#x27;s talk about what exactly have I done for the project during this autumn.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pre-built-binaries&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;56&quot;&gt;Pre-built binaries&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;The most important change for anyone who wants to try out Zemeroth
and don&#x27;t want to compile it from the source
is auto-deployed pre-built binaries.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;You can download them here:&lt;&#x2F;strong&gt;
&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;releases&quot;&gt;zemeroth&#x2F;releases&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;They are compiled and deployed to Github&#x27;s releases
by CI servers (Travis, Appveyor and CircleCI) on every tag.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;releases&#x2F;tag&#x2F;v0.0.3&quot;&gt;The latest release at the time of writing is &lt;code&gt;v0.0.3&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;releases&#x2F;tag&#x2F;v0.0.3&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;v-0-0-3-release-page.png&quot; alt=&quot;v.0.0.3 release page&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Linux&#x2F;Windows and OSX versions are not that interesting - they are
built exactly like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;242&quot;&gt;it was done for ZoC&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Deploying Android &lt;code&gt;apk&lt;&#x2F;code&gt;s is a more interesting story.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve stolen basic apk-building script for CircleCI from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&quot;&gt;@tomaka&lt;&#x2F;a&gt;
(thanks again!) - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;glutin&#x2F;pull&#x2F;919&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;glutin&#x2F;pull&#x2F;919&lt;&#x2F;a&gt; -
and it worked straight out of the box.&lt;&#x2F;p&gt;
&lt;p&gt;Deploying &lt;code&gt;apk&lt;&#x2F;code&gt;s is harder:
circle-ci doesn&#x27;t provide a built-in convenient way of deploying to Github,
so you have to wield some curl&#x2F;github_api magic.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;blob&#x2F;efc36eb08&#x2F;.circleci&#x2F;upload_apk_to_github_releases.sh&quot;&gt;All the magic is packed in .circleci&#x2F;upload_apk_to_github_releases.sh script&lt;&#x2F;a&gt;
(which is based on &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;stefanbuck&#x2F;ce788fee19ab6eb0b4447a85fc99f447&quot;&gt;this gist&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Also, some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;blob&#x2F;efc36eb08&#x2F;.circleci&#x2F;config.yml#L20-L33&quot;&gt;strange branch magic is required&lt;&#x2F;a&gt;
if you don&#x27;t want to run both &lt;code&gt;build&lt;&#x2F;code&gt; and &lt;code&gt;deploy&lt;&#x2F;code&gt; targets
on &lt;em&gt;every&lt;&#x2F;em&gt; commit.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Btw, old badges were not that clear of what do they mean:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;old-badges.png&quot; alt=&quot;build: passing, build: passing, passed - wtf?&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Most programmers know that travis&#x27;s badge usually means
Linux&#x2F;OSX builds and appveyor is for Windows builds.
But what does the third one?&lt;&#x2F;p&gt;
&lt;p&gt;To fix this
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;158&#x2F;commits&#x2F;1f0fc2b75&quot;&gt;I&#x27;ve added custom labels to the badges through shields.io&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;https:&#x2F;&#x2F;img.shields.io&#x2F;travis&#x2F;ozkriff&#x2F;zemeroth&#x2F;master.svg?label=Linux|OSX
https:&#x2F;&#x2F;img.shields.io&#x2F;appveyor&#x2F;ci&#x2F;ozkriff&#x2F;zemeroth.svg?label=Windows
https:&#x2F;&#x2F;img.shields.io&#x2F;circleci&#x2F;project&#x2F;github&#x2F;ozkriff&#x2F;zemeroth&#x2F;master.svg?label=Android
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Looks a little bit better now:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;new-badges.png&quot; alt=&quot;uniform new badges&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;em&gt;And there&#x27;re two yet-to-be-solved issues:&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;136&quot;&gt;&lt;code&gt;apk&lt;&#x2F;code&gt;s are built in the debug mode&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;161&quot;&gt;Deploy precompiled versions of the latest commit to a special release&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;decorations-grass-and-blood-pools&quot;&gt;Decorations: Grass and Blood Pools&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;73&quot;&gt;&lt;strong&gt;Grass&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; is just a randomly-placed decoration,
but &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;42&quot;&gt;&lt;strong&gt;Blood Pools&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; are also an additional indicator
of a successful attack:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;grass.png&quot; alt=&quot;two tiles of grass&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;bool-of-blood.png&quot; alt=&quot;pool of blood&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jokers-and-strength&quot;&gt;Jokers and Strength&lt;&#x2F;h2&gt;
&lt;p&gt;Now, some actual gameplay changes!&lt;&#x2F;p&gt;
&lt;p&gt;To make Zemeroth a little bit more tactical
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;59&quot;&gt;&lt;strong&gt;Jokers were added&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;. They can be used either as Attacks or Moves.&lt;&#x2F;p&gt;
&lt;p&gt;In the previous version, units were dying from a single hit.
That doesn&#x27;t work well with reaction attacks as they were dying too quickly:
fighters should have some kind of basic hit points.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;63&quot;&gt;So &lt;strong&gt;Strength&lt;&#x2F;strong&gt; was added.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This name is stolen from &lt;a href=&quot;http:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;237990&#x2F;The_Banner_Saga&quot;&gt;Banner Saga&lt;&#x2F;a&gt;:
as I&#x27;m going to use this property also as a basic attack modifier.
Right now every successful attack deals a damage of one strength
but later a much more fine-grained battle math will be implemented.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dots&quot;&gt;Dots&lt;&#x2F;h2&gt;
&lt;p&gt;To show the most important dynamic information about units on the map
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;95&quot;&gt;&lt;strong&gt;&amp;quot;Dots&amp;quot;&lt;&#x2F;strong&gt; were added&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;info-dots.png&quot; alt=&quot;thee agents with different stats showed by color dots&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The current legend is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;Strength&amp;quot; - green;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Attacks&amp;quot; - red;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Moves&amp;quot; - blue;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;Jokers&amp;quot; - purple.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LPGhatguy&quot;&gt;@LPGhatguy&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;LPGhatguy&#x2F;status&#x2F;902800456082001920&quot;&gt;pointed me out on twitter&lt;&#x2F;a&gt; to a problem with colors:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;With the amount of red&#x2F;green in the game so far,
you should try it with a Deuteranopia filter!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;I&#x27;ve googled a simulator:
&lt;a href=&quot;https:&#x2F;&#x2F;www.etre.com&#x2F;tools&#x2F;colourblindsimulator&quot;&gt;etre.com&#x2F;tools&#x2F;colourblindsimulator&lt;&#x2F;a&gt;.
Here&#x27;s an example of its output:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;color-issue.png&quot; alt=&quot;Example of output. Dots are hard to read now&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And, yeah, that doesn&#x27;t look readable at all.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;98&quot;&gt;It&#x27;s clear that I should change the colors and shapes&lt;&#x2F;a&gt;
in the near future.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Btw, &lt;a href=&quot;http:&#x2F;&#x2F;gameaccessibilityguidelines.com&quot;&gt;http:&#x2F;&#x2F;gameaccessibilityguidelines.com&lt;&#x2F;a&gt; is a very interesting resource.
I&#x27;ve never thought about a lot of issues raised and explained there.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;info-panel-with-selected-unit-s-stats&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;92&quot;&gt;Info panel with selected unit&#x27;s stats&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Dots can show only a small portion of the dynamic information about units.
Other less important dynamic or static information goes into the side panel.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;info-panel.png&quot; alt=&quot;info panel showing imp&#x27;s stats using text&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Btw, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;100&quot;&gt;now you can select enemy units&lt;&#x2F;a&gt; to see their move range and stats
in the info panel.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;NOTE: additionally, a deselection of any unit on the second click was added.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;spearman&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;65&quot;&gt;Spearman&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;spearman.png&quot; alt=&quot;closeup of a spearman&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Another important gameplay change is
an addition of third fighter type: &amp;quot;Spearman&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;He has an attack radius of two tiles and
can control with reaction attacks a big area of 18 tiles around him.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;spearman-controls-territory.png&quot; alt=&quot;spearman can attack distant enemies&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On the picture above the spearman has only one Joker point:
this is not an attack unit, he&#x27;s almost useless during his own turn.&lt;&#x2F;p&gt;
&lt;p&gt;But if spearman hasn&#x27;t used its Joker during his own turn,
he has &lt;em&gt;four&lt;&#x2F;em&gt; reaction attacks during enemy&#x27;s turn:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;spearman-many-reaction-attacks.png&quot; alt=&quot;example of a spearman with 4 reactive attacks&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And that&#x27;s a lot considering that reaction attacks can interrupt enemy&#x27;s movement.&lt;&#x2F;p&gt;
&lt;p&gt;Also, this unit has only three Strength points to accent his defence role.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rancor-a-stupid-component-system&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;141&quot;&gt;Rancör&lt;&#x2F;a&gt; - a Stupid Component System&lt;&#x2F;h2&gt;
&lt;p&gt;Previously, Zemeroth&#x27;s units were represented by a single struct
holding all the stuff as its fields.
Not a very adaptable solutions and it was impossible
to create a non-unit type of objects.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s the end of 2017 so the solution to this problem is obviously &lt;em&gt;components&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;With a component system, I should be able to implement:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;142&quot;&gt;Boulders&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;69&quot;&gt;Bombs&lt;&#x2F;a&gt;,
Fire,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;154&quot;&gt;Poison stuff&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;108&quot;&gt;Corpses&lt;&#x2F;a&gt;,
etc.&lt;&#x2F;p&gt;
&lt;p&gt;I don&#x27;t think Zemeroth needs a full-featured ECS solution
(like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;slide-rs&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt;) as the game is turn-based.
A bunch of &lt;code&gt;HashMap&amp;lt;ObjId, ComponentType&amp;gt;&lt;&#x2F;code&gt; will do the work fine.&lt;&#x2F;p&gt;
&lt;p&gt;So.. I&#x27;ve reinvented another ~~&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;6zdvza&#x2F;my_experience_participating_in_highload_cup_re&#x2F;dmulhzj&quot;&gt;bicycle 🚲&lt;&#x2F;a&gt;~~ square wheel! \o&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;141&quot;&gt;Meet &lt;strong&gt;Rancör&lt;&#x2F;strong&gt; - a simple macro-based component system&lt;&#x2F;a&gt;.
I&#x27;m not calling this an ECS because it has no systems, it&#x27;s just a storage.&lt;&#x2F;p&gt;
&lt;p&gt;Nothing fancy, you just declare some usual structs for components
and create a hidden &lt;code&gt;HashMap&lt;&#x2F;code&gt;-based monster-struct using a friendly macro:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;rancor_storage!(Parts&amp;lt;ObjId&amp;gt;: {
    strength: component::Strength,
    pos: component::Pos,
    meta: component::Meta,
    belongs_to: component::BelongsTo,
    agent: component::Agent,
});
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And then use individual fields:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;parts.agent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;insert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(id, agent);
...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; agent = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;.state.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;parts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;().agent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(id);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; agent.moves == Moves(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) &amp;amp;&amp;amp; agent.jokers == Jokers(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) { ... }
...
parts.agent.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;remove&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(id);
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Or call &lt;code&gt;parts.remove(id);&lt;&#x2F;code&gt; to completely wipe-out the entity.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Rancor seems to work fine, but I see two issues:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Too many braces in RON file with prototypes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;(https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;105#issuecomment-335439037)&quot;&gt;Duplication of data between initial values and their base values&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As I do not expect anyone to use it, this carte lives in the Zemeroth&#x27;s repo.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Btw, see &lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.org&#x2F;programming-languages-make-terrible-game-engines&quot;&gt;https:&#x2F;&#x2F;gridbugs.org&#x2F;programming-languages-make-terrible-game-engines&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;gridbugs.org&#x2F;modifying-entity-component-system-for-turn-based-games&quot;&gt;https:&#x2F;&#x2F;gridbugs.org&#x2F;modifying-entity-component-system-for-turn-based-games&lt;&#x2F;a&gt;
articles about component systems and turn-based games in Rust.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;toml-ron&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;67&quot;&gt;TOML -&amp;gt; RON&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Rust community kinda loves TOML, but I&#x27;m not a fan of this format.
TOML is not &lt;em&gt;that&lt;&#x2F;em&gt; bad, but I find its tables too strange for anything
but simple configs.&lt;&#x2F;p&gt;
&lt;p&gt;And I&#x27;ve decided to try to use &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;ron&quot;&gt;RON&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; format for Zemeroth.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ron-rs&#x2F;ron&quot;&gt;RON&#x27;s readme&lt;&#x2F;a&gt; has a pretty good list of reasons
of why you may not want to use other formats)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;@kvark&lt;&#x2F;a&gt; for starting this project originally
and thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;torkleyy&quot;&gt;@torkleyy&lt;&#x2F;a&gt; for resurrecting the project
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;pull&#x2F;269&quot;&gt;for Amethyst&#x27;s needs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;boulders-and-rocks&quot;&gt;Boulders and Rocks&lt;&#x2F;h2&gt;
&lt;p&gt;To make tactics a little bit more interesting
and to prototype non-agent objects using Rancör
I&#x27;ve &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;142&quot;&gt;added some tile-blocking &lt;strong&gt;Boulders&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;.
This is a first non-agent object type in the game.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a little bit strange that I have different terrain types
support for a long time, but not actually using them in the game at all.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;164&quot;&gt;Meet randomly-placed tiles of &lt;strong&gt;TileType::Rocks&lt;&#x2F;strong&gt; type&lt;&#x2F;a&gt;.
You can move through these tiles, but it requires 3 move points and not 1.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;rocks.png&quot; alt=&quot;a map with some boulders and rock tiles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Rock tiles and boulders work together with blood and grass to make
the battlefield look a little bit less boring.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;(Yes, I know that it&#x27;ll be better to use a different texture for Rocks tiles,
not just a darker color)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;logging-log-env-logger&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;83&quot;&gt;Logging: &lt;code&gt;log&lt;&#x2F;code&gt; &amp;amp; &lt;code&gt;env_logger&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;m tired of adding a special-cased &lt;code&gt;println&lt;&#x2F;code&gt;s to debug
something small and removing them before the commit.&lt;&#x2F;p&gt;
&lt;p&gt;As I don&#x27;t have much experience with slog, I decided
to replace &lt;code&gt;println&lt;&#x2F;code&gt;s with a classic &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;env_logger&quot;&gt;env_logger&lt;&#x2F;a&gt;.
It seems to work, for now,
the source code is filled with all kinds of &lt;code&gt;info!&lt;&#x2F;code&gt; and &lt;code&gt;debug!&lt;&#x2F;code&gt; calls. :)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hate-examples&quot;&gt;Häte: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;pull&#x2F;131&quot;&gt;Examples&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Some news about &lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog.html#hate2d&quot;&gt;my silly game engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s important to decouple Häte from Zemeroth.
First, Häte was extracted to a separate crate inside the repo.
The next step is to separate example&#x2F;test screens.&lt;&#x2F;p&gt;
&lt;p&gt;These screens do nothing game-specific so they belong to the engine.&lt;&#x2F;p&gt;
&lt;p&gt;There was a bunch of tasks needed to be solved before extracting the examples:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;129&quot;&gt;Baked GLSL shaders into Häte&#x27;s source&lt;&#x2F;a&gt;.
They are supposed to be dead-simple &amp;amp; tightly coupled with
the engine - what&#x27;s the point of having them in user&#x27;s assets dir?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;130&quot;&gt;Baked a default font into Häte&#x27;s source&lt;&#x2F;a&gt;.
I&#x27;ve used the smallest font from this article:
&lt;a href=&quot;http:&#x2F;&#x2F;oxfordshireweb.com&#x2F;smallest-file-size-google-web-fonts&quot;&gt;http:&#x2F;&#x2F;oxfordshireweb.com&#x2F;smallest-file-size-google-web-fonts&lt;&#x2F;a&gt;.
&lt;code&gt;Karla-Regular.ttf&lt;&#x2F;code&gt; is 17kib only.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;138&quot;&gt;&lt;code&gt;Settings::default&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. Simplified the examples.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;32&quot;&gt;Check assets dir from every &lt;code&gt;fs::load&lt;&#x2F;code&gt; call&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;hate-cache-text-textures&quot;&gt;Häte: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;96&quot;&gt;Cache Text Textures&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&quot;&gt;ZoC&lt;&#x2F;a&gt; was almost unusable in debug builds:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;264&quot;&gt;it may take more than 10 seconds to start a game on some machines&lt;&#x2F;a&gt;
and now I&#x27;m trying to keep Zemeroth&#x27;s debug builds fast enough.&lt;&#x2F;p&gt;
&lt;p&gt;One of the common problems is that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redox-os&#x2F;rusttype&quot;&gt;Rusttype&lt;&#x2F;a&gt; is very slow in debug builds,
especially on Android.
As a text in Häte is rendered by creating a separate texture for
every string the simplest solution was to cache these textures.&lt;&#x2F;p&gt;
&lt;p&gt;Caching is a little bit sloppy solution, but we have no other choice
until &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&#x2F;issues&#x2F;1359&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&#x2F;issues&#x2F;1359&lt;&#x2F;a&gt; is implemented.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;NOTE&lt;&#x2F;strong&gt;: Btw, there&#x27;s a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&#x2F;issues&#x2F;1359#issuecomment-329653216&quot;&gt;cool hack&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&quot;&gt;@matklad&lt;&#x2F;a&gt;,
but you have to compile an outdated cargo from his dev-branch.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-development-in-rust&quot;&gt;&amp;quot;Game Development in Rust&amp;quot;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;spb-meetup.jpg&quot; alt=&quot;me presenting a talk about zoc and zemeroth on spb meetup&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There was &lt;a href=&quot;https:&#x2F;&#x2F;meetup.com&#x2F;Rust-%D0%B2-%D0%9F%D0%B8%D1%82%D0%B5%D1%80%D0%B5&#x2F;events&#x2F;242219775&quot;&gt;a local meetup&lt;&#x2F;a&gt; in Saint-Petersburg this September where&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&quot;&gt;@not-fl3&lt;&#x2F;a&gt; talked about his experience as a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;BringerShar&quot;&gt;SHAR&lt;&#x2F;a&gt;&#x27;s developer&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitvakatu&quot;&gt;@vitvakatu&lt;&#x2F;a&gt; talked about &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;three-rs&#x2F;three&quot;&gt;three-rs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;and I talked about the history of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&quot;&gt;ZoC&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Everything is in Russian, but here are the links anyway, just in case:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=BCsPcsmRhOM&quot;&gt;full video&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;presentation&#x2F;d&#x2F;19-Vc2VOpmB2r42u5arMVdKXfOPzozNjY5drjhbyIw3E&quot;&gt;my slides&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-12-01--devlog&#x2F;slides-overview.png&quot; alt=&quot;overview of the slides&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;intellij-rust.github.io&quot;&gt;JetBrains&lt;&#x2F;a&gt; for hosting the event!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;short-range-plans&quot;&gt;Short-Range Plans&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;restructuredtext-markdown&quot;&gt;RestructuredText -&amp;gt; Markdown&lt;&#x2F;h3&gt;
&lt;p&gt;For a long time, I was trying to avoid the use of MD.&lt;&#x2F;p&gt;
&lt;p&gt;Mostly &lt;a href=&quot;https:&#x2F;&#x2F;eli.thegreenplace.net&#x2F;2017&#x2F;restructuredtext-vs-markdown-for-technical-documentation&quot;&gt;because MD has no built-in support for extensions and
is MD is forever tied to HTML&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I was mostly hoping for RST to become popular enough.
There was a chance, &lt;a href=&quot;https:&#x2F;&#x2F;internals.rust-lang.org&#x2F;t&#x2F;rustdoc-restructuredtext-vs-markdown&#x2F;356&quot;&gt;but doc team decided to stay with MD&lt;&#x2F;a&gt;
and now Rust community doesn&#x27;t care about RST at all. :(&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;commonmark.org&quot;&gt;CommonMark&lt;&#x2F;a&gt; solves the standardization problem to some degree.
Though, it&#x27;s still glued to HTML and is not easily extensible.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, I&#x27;m not going to use these documents anywhere except in the web browser,
so... &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;157&quot;&gt;I&#x27;m going to migrate this blog to some rust blog generator&lt;&#x2F;a&gt;
from Pelican. This post is written in MD already.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;abilities-and-lasting-effects&quot;&gt;Abilities and Lasting Effects&lt;&#x2F;h3&gt;
&lt;p&gt;A skirmish game is unimaginable without &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;110&quot;&gt;special abilities&lt;&#x2F;a&gt;
and some interesting &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;102&quot;&gt;instant&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;154&quot;&gt;lasting effects&lt;&#x2F;a&gt; of the actions.&lt;&#x2F;p&gt;
&lt;p&gt;So, here are some previews of what I&#x27;m working right now:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Egfyd4VX2YU&quot;&gt;https:&#x2F;&#x2F;youtu.be&#x2F;Egfyd4VX2YU&lt;&#x2F;a&gt; - jump &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;102&quot;&gt;knockback&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;TilgaGspTJk&quot;&gt;https:&#x2F;&#x2F;youtu.be&#x2F;TilgaGspTJk&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;69&quot;&gt;self-explode&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Yg38yeno3sE&quot;&gt;https:&#x2F;&#x2F;youtu.be&#x2F;Yg38yeno3sE&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;issues&#x2F;154&quot;&gt;poison&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;em&gt;Whew! That was the longest piece of text in English that I&#x27;ve ever written O.o.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s all for today! :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;7gy3wx&#x2F;zemeroths_devlog_2_jokers_rancor_blood_and_more&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;936708540168884224&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>ZoC is dead. Long life Zemeroth.</title>
                <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2017-08-17--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2017-08-17--devlog/</guid>
                <description>&lt;p&gt;Soo, yeah, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&quot;&gt;Zone of Control&lt;&#x2F;a&gt; project is
officially discontinued. Sorry, friends.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zed.png&quot; alt=&quot;scene from Pulp Fiction&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &amp;quot;ZoC&#x27;s dead, baby. ZoC&#x27;s dead.&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;Why have I killed it? The primary reason is classic: I&#x27;ve overestimated
my resources&#x2F;skills and got totally overwhelmed by the scope:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I can&#x27;t see the finish line and have no idea what exactly I can
feature-cut. Strategic mode? Sane UI? Networking? Skeletal
animations? Particles? Ships? Aircrafts? Tens of unit types? Oh-oh,
I don&#x27;t believe that ZoC could be really cool without any of these
(and some others) features.&lt;&#x2F;p&gt;
&lt;p&gt;This situation totally drained all my motivation to continue the project.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Slot system (multiple units per tile with fixed positions) is a
strange beast.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No idea how to make some friendly user interface: two panels (for
friends and enemies) solution is ugly, context menus are not cool
either.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Slots create problems with visual scale: infantry models are just too
small, especially on phone’s screen.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;first-person.png&quot;&gt;Maybe I should make an FPS? No, that&#x27;s stupid.&lt;&#x2F;a&gt; Ahem,
just joking.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Another reason is that my views on what&#x27;s important for strategic games
have changed in the last several years. Now I prefer
&lt;a href=&quot;http:&#x2F;&#x2F;keithburgun.net&#x2F;videogames-are-broken-toys&quot;&gt;smaller&lt;&#x2F;a&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;keithburgun.net&#x2F;the-default-number-of-players-is-one&quot;&gt;single-player&lt;&#x2F;a&gt;
games with strong accent on &lt;a href=&quot;http:&#x2F;&#x2F;keithburgun.net&#x2F;minimalism-vs-elegance&quot;&gt;emergent
complexity&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;So, some farewell screenshots:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zoc-screenshot-1.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zoc-screenshot-1-preview.png&quot; alt=&quot;ZoC gameplay screenshot 1&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zoc-screenshot-2.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zoc-screenshot-2-preview.png&quot; alt=&quot;ZoC gameplay screenshot 2&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zoc-screenshot-3.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zoc-screenshot-3-preview.png&quot; alt=&quot;blob shadows&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;...And that it.&lt;&#x2F;p&gt;
&lt;p&gt;Goodbye, my old friend Zone of Control.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;h1&gt;
&lt;p&gt;There’s one great article:
&lt;a href=&quot;http:&#x2F;&#x2F;makegames.tumblr.com&#x2F;post&#x2F;1136623767&#x2F;finishing-a-game&quot;&gt;&amp;quot;Finishing a Game&amp;quot;&lt;&#x2F;a&gt;.
I have re-read it a dozen times in the last few years. In the context of
ZoC’s fail the most important part of that article is:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rule 14: IF YOU DO QUIT, SCALE DOWN, NOT UP&lt;&#x2F;p&gt;
&lt;p&gt;Okay, sometimes it is time to call it quits. Maybe there’s just no way
you’ll ever finish, and what you have is too big a mess to cut
anything out. Maybe the rest of your team has quit already. My hope in
writing this list is to help people avoid this possibility, but hey,
maybe you’re just coming off of such a project. And sometimes... shit
just happens.&lt;&#x2F;p&gt;
&lt;p&gt;If there’s no salvaging it, at least make sure that you scale down
your next project. It’s easy to set your sights higher and higher,
even as your projects become less and less finished. “My SKILLS are
improving! I’m learning from my failure,” is a common excuse. But I
think this is why it’s important to treat finishing as a skill, too.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Sounds reasonable to me. So I need a new much less ambitious project
which still shares some of the ZoC’s core values.&lt;&#x2F;p&gt;
&lt;p&gt;I’ve spent May and June - in the heavy existential crisis - ahem,
resting and thinking about what can I make.&lt;&#x2F;p&gt;
&lt;p&gt;Here’s what I came up with:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Random-based skirmish-level digital tabletop game;&lt;&#x2F;li&gt;
&lt;li&gt;Single player only;&lt;&#x2F;li&gt;
&lt;li&gt;3-6 fighters under player’s control;&lt;&#x2F;li&gt;
&lt;li&gt;Short game session (under an hour) and small unscrollable maps;&lt;&#x2F;li&gt;
&lt;li&gt;Simple vector 2d graphics with just 3-5 sprites per unit;&lt;&#x2F;li&gt;
&lt;li&gt;Reaction attacks and action’s interruption;&lt;&#x2F;li&gt;
&lt;li&gt;Highly dynamic (lots of small unit moves as a side effect of other
events);&lt;&#x2F;li&gt;
&lt;li&gt;Intentionally stupid and predictable AI;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Something in between of &lt;a href=&quot;http:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;237990&#x2F;The_Banner_Saga&quot;&gt;Banner
Saga&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.magmafortress.hoplite&quot;&gt;Hoplite&lt;&#x2F;a&gt;,
&lt;a href=&quot;http:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;459680&#x2F;Auro_A_MonsterBumping_Adventure&#x2F;&quot;&gt;Auro&lt;&#x2F;a&gt;
and &lt;a href=&quot;http:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;230070&#x2F;The_Age_of_Decadence&#x2F;&quot;&gt;Age of
Decadence&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Initial svg mockup (based on
&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zoc-2d-experiments.png&quot;&gt;my old experiments with 2d ZoC&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zemeroth-inkscape-mockup.png&quot; alt=&quot;inscape mockup&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Ok, that was just the plan. What&#x27;s actually done already?&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s the code: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Right now Zemeroth looks ~ like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zemeroth-old-screenshot.png&quot; alt=&quot;old Zemeroth&#x27;s screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Recent &amp;quot;gameplay&amp;quot; video:&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe frameborder=&quot;0&quot; allowfullscreen src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;MVt_UOnmdKI?rel=0&amp;showinfo=0&quot;&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;What’s implemented:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The cornerstone of the game: reaction attacks and movement interruptions;&lt;&#x2F;li&gt;
&lt;li&gt;Basic infantry unit type;&lt;&#x2F;li&gt;
&lt;li&gt;Hitpoints;&lt;&#x2F;li&gt;
&lt;li&gt;Basic AI: move closer and attack;&lt;&#x2F;li&gt;
&lt;li&gt;Some basic UI with text&#x2F;image buttons and grouping.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Android is supported from the beginning of the development (as I’m
reusing ZoC’s codebase):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;zemeroth-android.png&quot; alt=&quot;zemeroth on android photo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Zemeroth’s architecture is mostly taken from ZoC (minus the networking
and multiple game states):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;data-loop.jpg&quot; alt=&quot;data loop&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Scene action system is based on cocos’s one and something I did in dead
ZoC’s dev branch:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-08-17--devlog&#x2F;scene-actions.png&quot; alt=&quot;example of scene actions&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;(&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;piston2d-sprite&#x2F;0.36.0&#x2F;sprite&#x2F;enum.Animation.html&quot;&gt;btw, piston has something similar&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;h1 id=&quot;hate2d&quot;&gt;Häte2d&lt;&#x2F;h1&gt;
&lt;p&gt;About reusing ZoC’s codebase...&lt;&#x2F;p&gt;
&lt;p&gt;I’m a fool who don’t learn anything and totally ignored the third rule
from finishing-a-game article:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;3. DON’T ROLL YOUR OWN TECH IF YOU DON’T HAVE TO&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Say hello to yet another Rust 2d engine: &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;hate&quot;&gt;Häte2d&lt;&#x2F;a&gt; :-D&lt;&#x2F;p&gt;
&lt;p&gt;The name is a silly reference to &lt;a href=&quot;https:&#x2F;&#x2F;love2d.org&quot;&gt;LÖVE2D framework&lt;&#x2F;a&gt; (just in case).&lt;&#x2F;p&gt;
&lt;p&gt;NOTE: Häte isn’t a general-purpose game engine (at least right now) and
it’s not my goal. Just a simple 2d engine for Zemeroth’s needs.&lt;&#x2F;p&gt;
&lt;p&gt;Why haven&#x27;t I used ggez.rs?&lt;&#x2F;p&gt;
&lt;p&gt;Quote from reddit:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;@pwgen-n1024: have you seen
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;6mg02o&#x2F;ggez_a_rust_library_to_create_good_games_easily&#x2F;&quot;&gt;this&lt;&#x2F;a&gt;?
its a löve2d clone in rust, it might allow you to save some work.&lt;&#x2F;p&gt;
&lt;p&gt;@ozkriff: Granted, I&#x27;m well aware of ggez! :-)&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m too lazy to read the docs! NIH syndrome!111 :-D&lt;&#x2F;p&gt;
&lt;p&gt;Ahem... It&#x27;s a cool engine and I recommend it whenever anybody asks me
about 2d game engines, but I don&#x27;t think that ggez&#x27;s core values match
my needs in Zemeroth project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ggez tries to mirror Löve as closely as possible but I don&#x27;t
believe that what&#x27;s good for highly dynamic Lua is equally good
for Rust.&lt;&#x2F;li&gt;
&lt;li&gt;It seems to me that ggez targets beginners and fast prototype-like
projects but I&#x27;m going to invest a lot of time into this project.&lt;&#x2F;li&gt;
&lt;li&gt;I want the engine to be much more opinionated about UI, scene,
etc.&lt;&#x2F;li&gt;
&lt;li&gt;Right now ggez uses SDL2 (and it&#x27;s not easy to replace it with
glutin) but I really want to use cargo-apk.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Maybe I was wrong and using geez would be a good idea,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;6nri26&#x2F;&#x2F;dkbqtiu&#x2F;&quot;&gt;see Icefoxen’s answer&lt;&#x2F;a&gt;.
But so far working on Häte was fun and we’ll see what happens later.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That’s all for today :)&lt;&#x2F;p&gt;
&lt;p&gt;In case you&#x27;re wondering, here&#x27;s full Imgur-devlog which I&#x27;m trying to
keep updated: &lt;a href=&quot;http:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;SMVqO&quot;&gt;http:&#x2F;&#x2F;imgur.com&#x2F;a&#x2F;SMVqO&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;6uar27&#x2F;zoc_is_dead_long_life_zemeroth&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&#x2F;status&#x2F;898207059862319104&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in ZoC - 2017.01.24</title>
                <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2017-01-24--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2017-01-24--devlog/</guid>
                <description>&lt;p&gt;(Repost from &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;this-month-in-zone-of-control&#x2F;6993&quot;&gt;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;this-month-in-zone-of-control&#x2F;6993&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;Hi, everyone! :)&lt;&#x2F;p&gt;
&lt;p&gt;It has been four months since the first post, sorry. I&#x27;m struggling to
find enough time for the project plus I was busy with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;glutin&#x2F;issues&#x2F;813&quot;&gt;porting glutin to
winit&lt;&#x2F;a&gt; for about a month
around October.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;helicopters&quot;&gt;Helicopters&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;111&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;111&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;helicopters.png&quot; alt=&quot;helicopters&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Helicopters can fly above any terrain or ground units, but can&#x27;t
capture sectors&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Most units can&#x27;t attack helicopters - WeaponType got
&lt;code&gt;max_air_distance: Option&amp;lt;i32&amp;gt;;&lt;&#x2F;code&gt; field&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Helicopters can be seen by enemies even in non-visible tiles&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Helicopters have a different field of view rules - their FoV have no
&#x27;obstacle shadows&#x27;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;air-vs-ground-fov.png&quot; alt=&quot;comparison of land and air field of views&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;IDLE animation:&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe
    frameborder=&quot;0&quot;
    allowfullscreen
    src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;wj8ldf7sBRc?color=white&amp;rel=0&amp;showinfo=0&quot;
&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;It&#x27;s not easy for ground units to catch up with a helicopter :) :&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe
    frameborder=&quot;0&quot;
    allowfullscreen
    src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;u5yNCP_1G4M?color=white&amp;rel=0&amp;showinfo=0&quot;
&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Haven&#x27;t got around to implement
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;226&quot;&gt;AA-guns&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;226&quot;&gt;Manpads&lt;&#x2F;a&gt; yet so the main
AA-defence for now is just jeep&#x27;s machinegun.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;reinforcements&quot;&gt;Reinforcements&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;208&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;208&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Players have no starting forces now - everything is bought in
reinforcement sectors for reinforcement points.&lt;&#x2F;p&gt;
&lt;p&gt;The upper-left corner displays the amount of reinforcement points that
current player has and their per-turn increment:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;reinforcements.png&quot; alt=&quot;Reinforcements&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Reinforcement sectors are marked by two circles in player&#x27;s color:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;circle-marks.png&quot; alt=&quot;Circle marks&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s an additional &amp;quot;reinforcements&amp;quot; item in the context menu: when
clicked it opens a list of available units:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;main-context-menu.png&quot; alt=&quot;Main context menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This opens a list of available units:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;context-sum-menu.png&quot; alt=&quot;Context sub-menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There must be enough reinforcement points and enough room for the unit.
Units have no move or attack points at their first turn.&lt;&#x2F;p&gt;
&lt;p&gt;And, by the way, AI has been taught to buy units too.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;map-selection&quot;&gt;Map selection&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;213&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;213&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After the implementation of reinforcements it became possible to add map
selection.&lt;&#x2F;p&gt;
&lt;p&gt;You can change map by clicking on the current map&#x27;s name in the main
menu screen:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;main-menu.png&quot; alt=&quot;Main menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It was mostly needed for testing&#x2F;debugging purposes so most of the maps
look like this for now:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;debug-map.png&quot; alt=&quot;Debugging map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tests however are in early prototype phase and are not in the repo yet.
Right now they use special maps but I intend to implement some ASCII-DSL
like the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;let map = &amp;quot;
    ... ... ... ...
      ... ... ... ...
    ... ... t.. r..
      t.. t.. r.. ..B
    r.A r.. r.. ..C
      ... t.. ... ...
&amp;quot;;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;where &#x27;t&#x27; is a &#x27;trees&#x27;, &#x27;r&#x27; is a road and &#x27;ABC&#x27; are positions.&lt;&#x2F;p&gt;
&lt;p&gt;Tests work by sending hardcoded commands and waiting for specified
events in response. I can&#x27;t test anything that depends on RNG (attacks
mostly) but the movements, FoW, etc are more or less testable. It can&#x27;t
help with errors in visualizer but it makes it easier for me to refactor
the Core.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;auto-deploy-to-github-releases&quot;&gt;Auto-deploy to github releases&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;pull&#x2F;246&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;pull&#x2F;246&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Gordon-F&quot;&gt;@Gordon-F&lt;&#x2F;a&gt; has implemented auto-deploy of
releases for travis and appveyor.&lt;&#x2F;p&gt;
&lt;p&gt;Now you can download windows, linux and osx builds for tagged releases
here from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;releases&quot;&gt;github releases
page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Android is totally different story with all its SDKs&#x2F;NDKs and is still
built and uploaded manually.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;wreckages&quot;&gt;Wreckages&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;247&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;247&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now destroyed vehicles leave wreckages.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;wreckages.png&quot; alt=&quot;Wreckages&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;They only obstruct movement for now. Later they&#x27;ll be used by infantry
as protective covering.&lt;&#x2F;p&gt;
&lt;p&gt;When particle system will be implemented wreckages will emit smoke and
fire.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;towing&quot;&gt;Towing&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;161&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;161&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;re two new items in context menu: &amp;quot;attach&amp;quot; and &amp;quot;detach&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;You can&#x27;t chain attachments or attach WholeTile-sized units.&lt;&#x2F;p&gt;
&lt;p&gt;Towing system is mostly important for quick reposition of field guns but
it can also help with clearing roads from wrecked vehicles. The latter
reason will become more important when partial damage for vehicles gets
implemented.&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe
    frameborder=&quot;0&quot;
    allowfullscreen
    src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;WEBmAvGUMGU?color=white&amp;rel=0&amp;showinfo=0&quot;
&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;h1 id=&quot;smoothly-fading-to-alpha-fog-of-war&quot;&gt;Smoothly fading to alpha Fog of War&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;210&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;210&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe
    frameborder=&quot;0&quot;
    allowfullscreen
    src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;eNwlOO_tTqs?color=white&amp;rel=0&amp;showinfo=0&quot;
&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Opening FoW is a very common action so it deserves to be a little more
pretty :)&lt;&#x2F;p&gt;
&lt;p&gt;It was easy though I had to rework the FoW rendering code to make it use
a lot of independently colored scene nodes instead of a single big mesh.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;fixed-an-old-error-with-units-moving-into-invisible-enemies&quot;&gt;Fixed an old error with units moving into invisible enemies&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;106&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;106&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This change caused some refactorings in the codebase:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Added a new event type: Reveal, similar to ShowUnit but generated by
Core itself and not by the filtering system&lt;&#x2F;li&gt;
&lt;li&gt;Merge all &lt;code&gt;*State&lt;&#x2F;code&gt; structs and &lt;code&gt;GameState&lt;&#x2F;code&gt; trait into one universal
State struct - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;255&quot;&gt;#255&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Added a proper FoW layer for air units&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;other-changes&quot;&gt;Other changes&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;159&quot;&gt;The short-term roadmap was translated into English and updated&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;205&quot;&gt;AI was taught to capture sectors&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;AI is still in poor state and crashes once in a while. I need to
implement replays to reproduce and fix these errors. It&#x27;s either AI
sometimes issues orders to units that are already dead or there are
bugs in the event filtering system.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;197&quot;&gt;Android memory alignment errors are finally gone&lt;&#x2F;a&gt;, thanks to
@not-fl3, @tomaka, @brendanzab and @mhintz.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;248&quot;&gt;Though android port is still not very stable&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;214&quot;&gt;Fixed bridge slots count&lt;&#x2F;a&gt;. Now bridges are
real strategic points which can be controlled or blocked easily.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;220&quot;&gt;Do not reduce unit morale if the attack was harmless&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Added &amp;quot;zoom in&#x2F;out&amp;quot; buttons:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;zoom-buttons.png&quot; alt=&quot;zoom in-out buttons&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;because it&#x27;s simpler than handling multi-touch gestures on android :)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;gameplay-screenshots&quot;&gt;Gameplay screenshots&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;gameplay-screenshot-1.png&quot; alt=&quot;gameplay screenshot 1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2017-01-24--devlog&#x2F;gameplay-screenshot-2.png&quot; alt=&quot;gameplay screenshot 2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff on Twitter&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in ZoC - 2016.08.22</title>
                <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-08-22--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-08-22--devlog/</guid>
                <description>&lt;p&gt;(Repost from &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;this-month-in-zone-of-control&#x2F;6993&quot;&gt;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;this-month-in-zone-of-control&#x2F;6993&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;Hi, comrades! Welcome to the first issue of ZoC&#x27;s monthly report!&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&quot;&gt;ZoC&lt;&#x2F;a&gt; is a turn-based hexagonal strategy
game written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Core game features are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;advanced fog of war&lt;&#x2F;li&gt;
&lt;li&gt;slot system (multiple units per tile)&lt;&#x2F;li&gt;
&lt;li&gt;reaction fire (xcom-like)&lt;&#x2F;li&gt;
&lt;li&gt;morale and suppression&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;gfx-and-rusttype&quot;&gt;GFX and rusttype&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;tree&#x2F;c8b11f4&#x2F;src&#x2F;zgl&#x2F;src&quot;&gt;Zgl&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;stb-tt-rs&quot;&gt;stb_truetype&lt;&#x2F;a&gt;
were finally replaced with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;GFX&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dylanede&#x2F;rusttype&quot;&gt;rusttype&lt;&#x2F;a&gt;, YAY :-D !!1 -
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;183&quot;&gt;#183&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;android&quot;&gt;Android&lt;&#x2F;h1&gt;
&lt;p&gt;ZoC is now build with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;android-rs-glue&quot;&gt;cargo-apk&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There are still some problems with android version though:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;197&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;197&lt;&#x2F;a&gt; :(&lt;&#x2F;p&gt;
&lt;h1 id=&quot;roads&quot;&gt;Roads&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;152&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;152&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;simple-road.png&quot; alt=&quot;Simple road&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;sectors-victory-points-and-game-results-screen&quot;&gt;Sectors, victory points and game results screen&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;124&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;124&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe
    frameborder=&quot;0&quot;
    src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;hI6YmZeuZ3s&quot;
&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;sectors.png&quot; alt=&quot;Sectors&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;basic-smoke-screens&quot;&gt;Basic smoke screens&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;160&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;160&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;smoke.png&quot; alt=&quot;Smoke&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;somke-on-water.png&quot; alt=&quot;Smoke screen in action&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe frameborder=&quot;0&quot; allowfullscreen src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;WJHkuWwAb7A?color=white&amp;rel=0&amp;showinfo=0&quot;&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;h1 id=&quot;water-tiles&quot;&gt;Water tiles&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;204&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;204&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;water-tiles.png&quot; alt=&quot;Water&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;gui-updates&quot;&gt;GUI updates&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Replaced unit ids with unit type names&lt;&#x2F;li&gt;
&lt;li&gt;Added hit chances&lt;&#x2F;li&gt;
&lt;li&gt;Added basic unit info to the upper-left corner of the screen&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;unit-types.png&quot; alt=&quot;unit types&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;hit-chances.png&quot; alt=&quot;hit chances&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;basic-unit-info.png&quot; alt=&quot;basic unit info&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;fixed-switching-between-normal-and-wireframe-mode-for-buildings&quot;&gt;Fixed switching between normal and wireframe mode for buildings&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;182&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;182&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;combined-wireframe-and-normal-buildings.png&quot; alt=&quot;combined wireframe and normal buildings&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;other-notable-changes&quot;&gt;Other notable changes&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;191&quot;&gt;Fixed armored units reaction to light reactive fire&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;211&quot;&gt;Improved error message about missing assets&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;commit&#x2F;ac2c7c6&quot;&gt;Made MapText fading to alpha smoothly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;commit&#x2F;1ee698&quot;&gt;Fixed annoying vehicle-in-building pathfinder bug&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;commit&#x2F;fde38&quot;&gt;Added personal independent camera for each human player&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;196&quot;&gt;Fixed AI hangup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;bonus-1-zoc-on-android&quot;&gt;Bonus 1: ZoC on android&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;zoc-on-andoid.jpg&quot; alt=&quot;photo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;bonus-2-memoir44-mockup-of-smoke-demo-map&quot;&gt;Bonus 2: memoir44-mockup of smoke demo map&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-08-22--devlog&#x2F;memoir44.jpg&quot; alt=&quot;photo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Weekly links:
&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;whats-everyone-working-on-this-week-31-2016&#x2F;6747&#x2F;2&quot;&gt;1&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;4wob4b&#x2F;whats_everyone_working_on_this_week_322016&#x2F;d68pxx4&quot;&gt;2&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;4xrycf&#x2F;whats_everyone_working_on_this_week_332016&#x2F;d6i0d1a&quot;&gt;3&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;4yzx43&#x2F;whats_everyone_working_on_this_week_342016&#x2F;d6rp869&quot;&gt;4&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ozkriff&quot;&gt;@ozkriff on Twitter&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Градообразующие объекты</title>
                <pubDate>Tue, 23 Feb 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-02-23--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-02-23--devlog/</guid>
                <description>&lt;p&gt;Показал нескольким знакомым макет, послушал комментарии. Один из
повторяющихся - города не выглядят городами, слишком абстрактные, больше
похожи на хаотично раскиданные детские кубики.&lt;&#x2F;p&gt;
&lt;p&gt;Я об этом не задумывался, моему замыленному взгляду город и так хорошо
виден. Даже наоборот, пытался здания раскидать и повернуть как попало,
что бы меньше чувствовалась жесткая гексагональная сетка со слотами.&lt;&#x2F;p&gt;
&lt;p&gt;По задумке, города (и деревеньки) должны занимать не больше
восьми-десяти клеток в радиусе и действительно быть довольно
абстрактными - иначе странно будет выглядеть соотношение размеров зданий
и техники&#x2F;человечков. И кое-какая хаотичность в любом случае должна
быть, скучные города с улицами ровно под 90 градусов я делать совсем не
хочется.&lt;&#x2F;p&gt;
&lt;p&gt;Но в то же время города должны выглядеть как цельный многоклеточный
объект. Выход вижу в каком-то алгоритме прокладки не влияющих на логику
городских улиц и автоматическом визуальном повороте зданий не абы как, а
параллельно с улицами.&lt;&#x2F;p&gt;
&lt;p&gt;Что бы не запутаться, ввожу разделение: &amp;quot;дорога&amp;quot; - значима для игровой
логики и идет строго от центра одной клетки к центру другой, а &amp;quot;улица&amp;quot; -
это бутафорское нечто в городских клетках.&lt;&#x2F;p&gt;
&lt;p&gt;Около большого здания, наверное, стоит выравнивать мелкие здания
относительно него, а не окружающих улиц. Типа, архитектурный ансамбль :)
.&lt;&#x2F;p&gt;
&lt;p&gt;Если посмотреть на тот же атлас дорог страны, то там от столицы тянутся
федеральные трассы, пронизывающие города насквозь:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-23--devlog&#x2F;viborg-map.png&quot; alt=&quot;карта Выборга с отмеченными главными дорогами&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Вот желтое тут - &amp;quot;дороги&amp;quot;, а белое&#x2F;серое - &amp;quot;улицы&amp;quot; и дома. Наверное,
надо разрешить особую дорогу по городу прокладывать. На этих клетках
нельзя дома строить будет, но через нее будут проходить обычные улицы и
такая дорога не будет разрывать целостность города.&lt;&#x2F;p&gt;
&lt;p&gt;Хммм, еще надо будет научить отряды внутри города двигаться по улицам
(визуально, не логически).&lt;&#x2F;p&gt;
&lt;p&gt;Надо будет не забыть добавить еще железные дороги - один в один как
обычные дороги, только позволят поезду заезжать на клетку. И тропинки в
лесу: лес с деревьями, между центрами клеток нарисована небольшая дорога
с особой текстурой - по такому лесу техника сможет ехать, но медленно и
с плохим обзором.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Но это так, мысли все. &amp;quot;Реально&amp;quot; в макете не успел все попробовать.&lt;&#x2F;p&gt;
&lt;p&gt;Добавил улицы и декоративные заборчики с садами у пары зданий.&lt;&#x2F;p&gt;
&lt;p&gt;Здания к улицам повернул &amp;quot;фасадами&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Заводу трубу прилепил, так чуть понятнее что это завод :) .&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-23--devlog&#x2F;draft-streets-1.png&quot; alt=&quot;Макет улиц&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-23--devlog&#x2F;draft-streets-2.png&quot; alt=&quot;Макет улиц с другого ракурса&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;В таком виде улицы слишком бросаются в глаза для &amp;quot;чисто декоративного&amp;quot;
элемента. Возможно, потому что макет довольно беден на детали? В игре
можно будет их &amp;quot;запылить&amp;quot; землей по краям, думаю.&lt;&#x2F;p&gt;
&lt;p&gt;Еще вопрос, как такое автоматически генерировать можно? Тут-то сетка
вручную сделана и довольно хитрожопая:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-23--devlog&#x2F;wireframe.png&quot; alt=&quot;Сетка макета городских улиц&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Сделал болванку трехклеточного корабля, у этого придется немного
поколдавать с путенажодением, что бы он плавно поворачивал и только по
широким рекам мог проплывать.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-23--devlog&#x2F;updated-draft.png&quot; alt=&quot;Рендер макета с вышеописанными изменениями&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Чуууточку удалось поковырять код между рисовашками и размышлениями.&lt;&#x2F;p&gt;
&lt;p&gt;В рамках подготовки к введению системы слотов удалил костыль с
константами номеров узлов сцены
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;154&quot;&gt;#154&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Долго пытался понять, как мой код ломает погрузку пехоты в грузовик.
Потом понял, что оно и раньше не работало. Отлично! :)&lt;&#x2F;p&gt;
&lt;p&gt;Потыкал асимметричность тумана войны
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;149&quot;&gt;#149&lt;&#x2F;a&gt;), не там все совсем
не просто и времени много займет, отложил пока что. Как и отложил задачи
о украшении типов-оберток
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;120&quot;&gt;#120&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;147&quot;&gt;#147&lt;&#x2F;a&gt;), потому что прямой
пользы для прототипа от них не так много.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;31123&quot;&gt;rust-lang&#x2F;rust#31123&lt;&#x2F;a&gt; -
ураа, проверка сборок под андроидом, лед тронулся! Значит, скоро
ситуация со сборкой под андроид должна в лучшую сторону измениться.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Заглянул тут в &lt;a href=&quot;http:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;365560&quot;&gt;обзоры&lt;&#x2F;a&gt; Battle
of the Bulge в стиме. Я просто в ужасе от того, сколько отрицательных
обзоров в &amp;quot;самых полезных&amp;quot;. Какого черта, человеки?! Игра же отличная,
просто она отличается от большинства компьютерных стратегий. Идите в
ремейки Панзер Дженералс играть, быдлота от мира варгеймов, не портите
оценку маленькому шедевру :( .&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Итак, я опять фактически потратил пару дней на макет и размышления. Пора
уже заняться реализацией слотов в коде.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Обсуждение &lt;a href=&quot;https:&#x2F;&#x2F;disqus.com&#x2F;home&#x2F;discussion&#x2F;ozkriffgithubio&#x2F;15e36903ac664d709185e519372aeea4&quot;&gt;на Disqus&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Чертов макет!</title>
                <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-02-14--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-02-14--devlog/</guid>
                <description>&lt;p&gt;Ладно, X-Com меня начал потихоньку отпускать и большую часть хотелок по
макету получилось набросать.&lt;&#x2F;p&gt;
&lt;p&gt;Автоматчик:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-14--devlog&#x2F;submachine-gunner.png&quot; alt=&quot;автоматчик&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Довольно легко визуально отличить от обычных стрелков должно быть, но на
всякий еще сгорбленными их поставил.&lt;&#x2F;p&gt;
&lt;p&gt;Закинул в джип еще одного пассажира и подкрутил позы старых:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-14--devlog&#x2F;draft-jeep-1.png&quot; alt=&quot;пассажиры в джипе&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;На средний танк прилепил еще одного танкодесантника сбоку:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-14--devlog&#x2F;tankodesant.png&quot; alt=&quot;вальяжно-боковой танкодесантник&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;С виду, трех еще можно на танк посадить - как раз отряд и будет.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Так, что тут еще на общем снимке виднеется? Огнеметчик, снайпер,
пулеметный рассчет, простенькая средняя закрытая САУ на основе среднего
танка. Обновил полевую пушку и ее прицепление к грузовику.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-14--devlog&#x2F;big-draft.png&quot; alt=&quot;более свежий общий снимок&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;На планшете смотрится прилично, солдат всех различить можно.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Все, считаю &amp;quot;неделю блендера&amp;quot; законченной - толку от дальнейшей
проработки макета уже не много, а рисовать я уже устал. Может еще
какие-то вещи буду подпиливать в нем, но уже не так целенаправленно.&lt;&#x2F;p&gt;
&lt;p&gt;Настало время писать код! Прриступаю к реализации трехслотовой системы! :-D&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Пришельцы воруют мое время</title>
                <pubDate>Wed, 10 Feb 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-02-10--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-02-10--devlog/</guid>
                <description>&lt;p&gt;Мой план &amp;quot;усилием воли закончить макет за выходные&amp;quot; с грохотом
провалился.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;xcom-sectoid.jpg&quot; alt=&quot;Сектоид контроллирует землянина&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;(Да, картинка из xcom1, но мне лень искать с новым сектоидом)&lt;&#x2F;p&gt;
&lt;p&gt;Внезапно для меня объявился X-COM 2. И внезапно же запустился на моей
железяке, хотя все на оптимизации ругаются. Fps, правда, не на высоте
совсем.&lt;&#x2F;p&gt;
&lt;p&gt;Что могу сказать об игре после пары дней знакомства?&lt;&#x2F;p&gt;
&lt;p&gt;Пока в основном положительные эмоции, даже переделанный облик врагов
особо не раздражает.&lt;&#x2F;p&gt;
&lt;p&gt;Круто, что практически убрали миссии без таймера - хотя люди в половине
обзоров и ругаются на таймер, но мне играть стало на порядок интереснее.
Тем более, что с новой темой &amp;quot;мы террористы - прибежали, все раздолбали
и свалили, пока силы правопорядка не очухались&amp;quot; отлично сочетается.&lt;&#x2F;p&gt;
&lt;p&gt;Одна из главных вещей, за которые ругали xcom:eu -что враги ходят по
карте группами, которые надо аккуратно уничтожать по одной, и двигаться
надо странным образом, что бы случайно не активировать следующую группу.
Это же и правда глупо и скучновато было. А теперь у игрока уже не выйдет
отсидеться на месте больше двух ходов если ты на месте больше
трех-четырех ходов торчишь, то, скорее всего, вообще к цели не успеешь.&lt;&#x2F;p&gt;
&lt;p&gt;Я пока вижу один недостаток этого подхода - не та атмосфера, что была в
первой части. Тогда солдаты аккуратно прочесывали карту, как, по мнению
людей, в реальности охота на прищельцев и происходила бы, а не рвались
со всех ног через всю карту. Ну и ладно, меня новая атмосфера вполне
устраивает)&lt;&#x2F;p&gt;
&lt;p&gt;Немного раздражали несколько нелепые мечи у солдат, но к этому быстро
привыкаешь.&lt;&#x2F;p&gt;
&lt;p&gt;Еще радует, что гранаты опять можно кидать только по клеткам. Как же
много было в прошлой части раздражающих моментов, когда нужно было
терпеливо двигать мышку пикель-туда-пиксель-сюда, что бы зацепить всех
возможных врагов. Там еще и возможность гранат отскакивать накладывалась
на это безобразие. Бррр!&lt;&#x2F;p&gt;
&lt;p&gt;В обзорах игру за большое количество ошибок ругают, но у меня всего
парочка была. Один из новобранцев был без тела - голова летала сама по
себе, пришлось ему костюм поменять туда-сюда в настройках. И один раз
планшет, на котором отображается интерфейс взлома, солдат вставил внутрь
стены, за которой он прятался, и камера показывала стену. Больше ничего
не припоминаю.&lt;&#x2F;p&gt;
&lt;p&gt;Вроде мелочь, но мне почему-то очень понравилось - анимации ранений на
послемиссионном экране. Как-то компенсирует то, что во время самого
тактического боя последствий от ранений почти нет. Плюс, оправдание &amp;quot;они
не замечают ранений, потому что адреналин&amp;quot; сразу как-то правдоподобней
выглядит - вот же они после боя с ног валятся.&lt;&#x2F;p&gt;
&lt;p&gt;Видел отзывы &amp;quot;рандом говно, у меня подряд четыре снайпера промазали при
вероятности 80%&amp;quot;. Вот возьми и запиши результаты всех случайностей в
игре - уверен, что получится чего-то очень близкое к честному, так что
не надо ныть.&lt;&#x2F;p&gt;
&lt;p&gt;Еще в отзывах часто мелькает: &amp;quot;солдаты промахиваются в упор, это тупо&amp;quot;.
Ну хз, с моим-то обширным опытом промахиваться в упор в Red Orchestra и
всяких шутанах, у меня точно нет желания ругать бедных солдат за
подобное :) .&lt;&#x2F;p&gt;
&lt;p&gt;Из косяков могу еще отметить пикейщиков. Это враги, которые не умеют
стрелять, зато быстро бегают и хорошо бьют оглушающими дубинками. Такой
появиляется в поле зрения и на следующих ход уже будет атаковать кого-то
из твоих солдат. И если твой солдат не будет вырублен первым ударом (а в
первую треть игры такое часто случается), то он его сильно ослабит
попаданием, что упростит взятие этого солдата под контроль сектоидами.
После первой трети игры появляются варианты: снайпера натравить,
поставить на его пути своего рукопашника с &amp;quot;автоатакой&amp;quot; по всему
пробегающему рядом, взять пикейщика под контроль своими
пси-оперативниками, заминировать подходы. После середины игры он
обогащает игровой опыт однозначно. Но вначале игры появление этого врага
означает, что возможные адекватные варианты поведения игрока сильно
суживаются и это вредит игре. Вначале игры выход один - валить этих
гадов всем отрядом из всего оружия, как только увидел. Ну или я играть
не умею, тоже может быть)))&lt;&#x2F;p&gt;
&lt;p&gt;Еще жалко, что за мехов пока играть нельзя, как в xcom:ew. Жду
дополнений.&lt;&#x2F;p&gt;
&lt;p&gt;Про xcom:eu было много отзывов про оказуаливание, даже сам поначалу не
хотел играть, судил по видео с ютуба. Это уже потом, когда меня
уговорили попробовать все-таки я понял, что летсплйщики и играли на
простом уровне сложности, и там были только ранние этапы игры и
действовали они прямолинейно. От того убого и выглядело. Сейчас считаю,
что авторы очень даже круто балансируют между хардкорной и казуальной
игрой.&lt;&#x2F;p&gt;
&lt;p&gt;И да, как всегда считаю, что проходить надо в режиме &amp;quot;железный человек&amp;quot;,
без всяких сохранений&#x2F;загрузок))&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;xcom2-failed-misson-1.jpg&quot; alt=&quot;xcom2: неудачная миссия&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;xcom2-failed-misson-2.jpg&quot; alt=&quot;xcom2: еще более неудачная миссия&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Так, ладно, кое-что я все-таки смог заставить себя наклепать.&lt;&#x2F;p&gt;
&lt;p&gt;Немного подпиленный легкий танк, самоходка на его основе и болванка
джипа:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;draft-jeep-tank-spg.png&quot; alt=&quot;Джип, танк и самоходка&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Новая сетка для солдата, даже кое-какой скелет в него вставил:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;draft-human-skeleton.png&quot; alt=&quot;Болванка человечка&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Долго пытался ему размер подобрать, что бы он в технику влезал, но и
виден был. Пока вот на этом остановился.&lt;&#x2F;p&gt;
&lt;p&gt;Выдал ему винтовку:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;rifleman.png&quot; alt=&quot;Человечек с винтовкой&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Не удержался и немного деталей джипу добавил (теперь он смотрится
слишком детальным, когда рядом с грузовиком стоит) и пассажиров в нем
рассадил пейзажно:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;jeep-with-passengers.png&quot; alt=&quot;Джип с пассажирами&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Любой пулеметчик смотрится круче, если может ножку закинуть на что
угодно :) .&lt;&#x2F;p&gt;
&lt;p&gt;Средний танк с танкодесантником:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-10--devlog&#x2F;tankodesant.png&quot; alt=&quot;Средний танк с танкодесантником&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Бронетранспортеров на всех не хватит, кому-то придется так к полю боя
добираться. Заодно танк целей будет.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Последнее время в реддите стали мелькать библиотеки шрифтовые, приятно.
Раньше думал &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PistonDevelopers&#x2F;truetype&quot;&gt;truetype&lt;&#x2F;a&gt;
потыкать для замены своих костылей вокруг сишного
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nothings&#x2F;stb&#x2F;blob&#x2F;master&#x2F;stb_truetype.h&quot;&gt;stb_truetype&lt;&#x2F;a&gt;,
теперь вот еще появился
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;44btaz&#x2F;introducing_rusttype_a_pure_rust_alternative_to&quot;&gt;RustType&lt;&#x2F;a&gt;.
Выглядит вполне прилично
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dylanede&#x2F;rusttype&#x2F;blob&#x2F;6aa3bfa&#x2F;examples&#x2F;simple.rs&quot;&gt;пример&lt;&#x2F;a&gt;).
Хорошо, когда есть из чего выбирать.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Что же, в связи с xcom-катастрофой переношу цель &amp;quot;закончить с макетом&amp;quot;
на конец уже этой недели. Попробую проявиться характер и хоть немного
оторвать себя от истребления пришельцев.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Первая половина Недели Блендера</title>
                <pubDate>Fri, 05 Feb 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-02-05--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-02-05--devlog/</guid>
                <description>&lt;p&gt;После пары просьб, решил таки
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;ozkriff.github.io-src&#x2F;commit&#x2F;aec640&quot;&gt;добавить&lt;&#x2F;a&gt;
записям желтушные заголовки. Так их и правда немного проще отличать.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Набросал &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;159&quot;&gt;мегазадачу&lt;&#x2F;a&gt; по
расширенному прототипу тактического режима. Надеюсь, это немного поможет
не разбрасываться на всякие левые дела и просто делать пункт за пунктом.&lt;&#x2F;p&gt;
&lt;p&gt;Хотелось бы все это сделать к апрелю, за два месяца. Хе-хе, :-D ну
посмотрим, как оно выйдет. Никогда и нигде в сроки не укладывался
толком, особенно с таким размытым ТЗ.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Двери-окна вот зданиям добавил, немного приятнее стало выглядеть,
накалякал легкий простенький танк.&lt;&#x2F;p&gt;
&lt;p&gt;Деревья кое какие сделал, вместо ворованных. Они не то что бы прям
ворованные, но под cc-by-sa, а мне хочется прям свободные-свободные
модели в составе игры иметь
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;24&quot;&gt;#24&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-05--devlog&#x2F;new-scene.png&quot; alt=&quot;снимок экрана с новой сценой&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Пробую накидать джип, с ним уже явно становятся видны нестыковки в
текущих размерах людей и техники. Что-то надо менять.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-05--devlog&#x2F;relative-sizes.png&quot; alt=&quot;сравнительные размеры человеков и техники&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Изначально я хотел, что бы в один слот влезало нечто масштаба Т-35 или
маус (последние два снизу, ~10 метров).&lt;&#x2F;p&gt;
&lt;p&gt;Все-таки предполагалось, что целую клетку будут занимать только огромные
здания, заводы там всякие, а техника, если на всю клетку, то тоже должна
бы быть сопоставимой с заводом в размерах, мегатанки всякие.&lt;&#x2F;p&gt;
&lt;p&gt;Но, как из картинки видно, если придерживаться более-менее реального
размера человечков, то они становятся совсем крошечными, если камеру
прямо в землю не утыкать.&lt;&#x2F;p&gt;
&lt;p&gt;А я такое уже видел в Кодексе Войны и играть в такое очень и очень
сложно:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-05--devlog&#x2F;fantasy-wars-sizes.jpg&quot; alt=&quot;мелкие человечки из Кодекса Войны&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Но просто так взять и увеличить людей я не могу, потому что в игре
должны быть джипы, полевые пушки и т.п., где тоже используются модели
человечков и, например, джип с увеличенными людьми смотрится как-то так:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-05--devlog&#x2F;big-man-small-car.jpg&quot; alt=&quot;мужик в детской машинке&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Хмм, вот я, после некоторого размышления, думаю что делать по этому
поводу:&lt;&#x2F;p&gt;
&lt;p&gt;Придется убирать требование &amp;quot;в слот влезает техника размера т-35&#x2F;мауса
(10м)&amp;quot;, так что в слот максимум помещается техника до 6.5м в длину (без
учета всяких торчащих пушек, черт с ними). Увеличиваю людей, допустим, в
полтора раза от реальных и увеличиваю технику в обратной пропорции к ее
размеру. Т.е. мотоцикл&#x2F;полевое орудие&#x2F;джип я увеличиваю ровно как и
людей, мелкие танки я увеличиваю уже на меньший процент, средние
увеличиваю совсем на чуть чуть, большие танки остаются как есть. А
всякие маусы уже в слоты не влезают и занимают сразу целую клетку и черт
уж с тем, что они размером с завод будут - еще немножко условностей БОГУ
УСЛОВНОСТЕЙ!!^W^W, кхм, в угоду визуальному удобству :).&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Я там в прошлой записи упоминал, что здания с людьми внутри должны будут
отображаться разрезанными&#x2F;сеткой. Пока себе представляю как-то так:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-02-05--devlog&#x2F;wireframe-buildings.png&quot; alt=&quot;снимок экрана с сеточными зданиями&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Вопрос, конечно, как это в OpenGL все отображать =. .obj, который пока
у меня используется, не умеет хранить просто ребра, ему нужны грани.
Менять формат пока не сильно хочется, надо сосредоточиться на прототипе.
Есть вариант, в самом блендере, в виде временного хака, какими-нибудь
модификаторами сделать вместо набора ребер набор тонких граней.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Понял, что в блендере как-то жутко глючит выделение объектов. Погуглил,
попробовал всякое, в итоге помогло переключение режима выделения с
обычного на &amp;quot;Occlusion Query Based Selection&amp;quot;. Странно это все,
неприятные мелочи)&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Вышла &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;gamedev&#x2F;comments&#x2F;433hqc&quot;&gt;четвертая
статья&lt;&#x2F;a&gt; от чувака с
космической 6DOF игрой, про распределение времени. Эх, там, судя по
всему, о случае когда у тебя нет основной работы и ты просто целыми
днями делаешь игру - как не свихнуться от такого и чего-то в итоге
все-таки сделать. Не сильно мне совету оттуда подходят) Да и вообще,
слабо себе представляю, если честно, как можно решиться уйти с
постоянной работы в трушные индюшатники и только этим и жить, брр.&lt;&#x2F;p&gt;
&lt;p&gt;Залип тут на гифки в &lt;a href=&quot;https:&#x2F;&#x2F;habrahabr.ru&#x2F;post&#x2F;276255&quot;&gt;хаброзаписи о визуализации потоков в
Go&lt;&#x2F;a&gt;, обожаю такие картинки))&lt;&#x2F;p&gt;
&lt;p&gt;В &#x2F;r&#x2F;rust промелькнул приятный &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;435572&#x2F;blog_the_operator_and_try_vs_do&#x2F;&quot;&gt;пост про &amp;quot;try&#x2F;catch&#x2F;? vs
монады&amp;quot;&lt;&#x2F;a&gt;
со срачем в комментариях. Клево, что не все согласились с RFC
try&#x2F;catch&#x2F;? обсуждения еще идут. Все-таки очень уж частное это решение,
в отличие от нормальных монад. Да, с монадами нельзя так просто
использовать return, break, continue и т.п. - ну и ладно, пускай
функциональщина будет предпочтительней императившины, я совсем не
против. В языке и так сильный уклон в эту сторону уже есть.&lt;&#x2F;p&gt;
&lt;p&gt;Внезапно
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;blog&#x2F;2100-github-pages-now-faster-and-simpler-with-jekyll-3-0&quot;&gt;узнал&lt;&#x2F;a&gt;,
что блогогенератор Jekyll можно вообще локально не разворачивать, а
github pages сами могут из .md исходников .html выплевывать. Как-то
совсем мимо моих ушей прошло) Ну да ладно, не буду сломя голову
переводить днявку на джекил, уже успел к пеликану более-менее
привыкнуть. Да и reStructuredText тут изначально поддерживается, мне он
больше по душе.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Итак, по плану, на этой неделе надо закончить с набросками моделей. Надо
бы за выходные несколько видов техники еще допилить, определиться с
относительными размерами и, самое сложное, человечка со скелетом и
позами с оружием запилить. Ух, ну постараюсь :) .&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Обсуждение &lt;a href=&quot;https:&#x2F;&#x2F;disqus.com&#x2F;home&#x2F;discussion&#x2F;ozkriffgithubio&#x2F;caa3eb6e4d3745878e944d65988df5db&quot;&gt;на Disqus&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Выходные, размеры, Тарантино и ненависть к людишкам</title>
                <pubDate>Sun, 31 Jan 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-01-31--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-01-31--devlog/</guid>
                <description>&lt;p&gt;Итак, выходные прошли. Толком ничего не сделал, но надо хоть чего-то
сюда написать, раз уж опять взялся журнал вести. Так что вот, на :) :&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Переложил журнал из гиста в воскрешенный ozkriff.github.io и столкнулся
со сложностями с disqus.&lt;&#x2F;p&gt;
&lt;p&gt;Сначала оно вообще не хотело загружаться,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;ozkriff.github.io-src&#x2F;commit&#x2F;a410487&quot;&gt;поправил&lt;&#x2F;a&gt; :) .&lt;&#x2F;p&gt;
&lt;p&gt;Потом оно завело для http и https отдельные потоки комментариев, гм =\ .&lt;&#x2F;p&gt;
&lt;p&gt;Почитал всякое (типа &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;barryclark&#x2F;jekyll-now&#x2F;issues&#x2F;165&quot;&gt;вот
этого&lt;&#x2F;a&gt; или
&lt;a href=&quot;https:&#x2F;&#x2F;coderabbi.github.io&#x2F;posts&#x2F;force-https-with-github-pages&quot;&gt;этого&lt;&#x2F;a&gt;).
По итогам
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;ozkriff.github.io-src&#x2F;commit&#x2F;183bee&quot;&gt;вклячил&lt;&#x2F;a&gt;
js-хак с перенаправлением с http на https (хотя при особом желании все
равно можно зайти на http).&lt;&#x2F;p&gt;
&lt;p&gt;Несколько комментариев к прошлой записи перекинул на https версию.
Немного потупил с вытаскиванием CSV из disqus и его правкой - интерфейс
у админки disqus не слишком интуитивен. Но само перемещение комментариев
прошло просто.&lt;&#x2F;p&gt;
&lt;p&gt;Вроде, все более-менее работает, останавливаюсь пока на этом с журналом.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Поэкспериментировал с геометрией людей, но пристойного ничего пока не
вышло. Подумываю сделать их мультяшными. Все-таки игра пошаговая, с
клетками - в ней много условностей, а мультяшные персонажи с таким
гармоничней смотрятся, тоже ведь визуальные условности.&lt;&#x2F;p&gt;
&lt;p&gt;Думал, что ноги надо укоротить и туловище сделать длинным, что бы
напоминало человечков с бумажных рисунков. Но в 3D выглядит стремно и
совершенно непонятно, как таких уродцев сажать в технику. Похоже,
останусь с более-менее обычной человеческой геометрией)&lt;&#x2F;p&gt;
&lt;p&gt;Листаю всякие &lt;a href=&quot;http:&#x2F;&#x2F;wiki.polycount.com&#x2F;wiki&#x2F;Limb_Topology&quot;&gt;http:&#x2F;&#x2F;wiki.polycount.com&#x2F;wiki&#x2F;Limb_Topology&lt;&#x2F;a&gt; . Ох, все
это немного слишком сложно для меня) Да и не то что бы очень надо пока
что, все-таки у меня тут пока что довольно набросочные модельки, я даже
не пытаюсь какие-то детали изобразить.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-31--devlog&#x2F;proportions.jpg&quot; alt=&quot;схема пропорций&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Одновременно с прикидыванием геометрии людей медитирую над
сравнительными размерами техники (человеки же в нее влезать как-то
должны). Отталкиваться все-таки буду от техники второй мировой и около
того, не смотря на то, что хочу в итоге дизельпанк&#x2F;постап. Да и такая
основа даже более-менее укладывается в
&lt;a href=&quot;https:&#x2F;&#x2F;ru.wikipedia.org&#x2F;wiki&#x2F;%D0%94%D0%B8%D0%B7%D0%B5%D0%BB%D1%8C%D0%BF%D0%B0%D0%BD%D0%BA#.D0.A0.D0.B0.D0.B7.D0.B2.D0.B8.D1.82.D0.B8.D0.B5_.D0.B6.D0.B0.D0.BD.D1.80.D0.B0&quot;&gt;Поздний Дизельпанк&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Прикольно, кстати, я думал что бронемашины серии БА больше, как и танки
Т-70. Хотя и то, и другое - не так уж далеко от грузовиков-автомобилей
ушло (в Т-70 две силовых установки от грузовиков обычных, если не
ошибаюсь), так что не удивительно.&lt;&#x2F;p&gt;
&lt;p&gt;Все со схемы выше должно влезать в слот клетки, даже пятибашенный т35 и
маус должны более-менее запихиваться.&lt;&#x2F;p&gt;
&lt;p&gt;Вот тут, с блицкриговскими модельками, даже нагляднее размеры
чувствуются (хотя не факт, что они тут такие же точные, все-таки
Блицкриг не симулятор):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-31--devlog&#x2F;blitzjrieg.png&quot; alt=&quot;картинка из блицкрига с кучей техники&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;StopGame выложили &lt;a href=&quot;http:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=EqwhkOXtrEA&quot;&gt;вторую часть Истории
Fallout&lt;&#x2F;a&gt; - очень даже
приятный обзор первой части. Приятно было за ужином посмотреть, прям
ностальгичненько так) Каких-то вещей даже не знал, все-таки я больше во
вторую играл в школе.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Сходил на Омерзительную Восьмерку. Как по мне, отличное кино, старый
добрый Тарантина вернулся - Бешеные Псы в антураже старой америки. Но
подозреваю, что копать на тему исторической достоверности бессмысленно,
гм).&lt;&#x2F;p&gt;
&lt;p&gt;Фильм, в общем, отличный, а вот зрителей хотелось поубивать. Что бы так
же, с литрами кровищи и кишками на креслах. Давненько в кино уже не
были, пол года, наверное. Отвык уже :(&lt;&#x2F;p&gt;
&lt;p&gt;Слева уселись две ТП, которые вообще непонятно зачем пошли и весь фильм
или откровенно скучали, уткнувшись в телефоны, или болтали о папиках,
или взвизгивали &amp;quot;ой боженьки, он что в лицо ее ударил?! женщинуу?!&amp;quot;,
&amp;quot;ой, этой у нее мозги на волосах что-ли? фуу, вот больные!&amp;quot;, &amp;quot;ой, негра
кровью стошнило что ли?&amp;quot; и т.п. А на титрах громко иронично
зааплодировали -&amp;quot;ураа, наконец-то, лучший момент в фильме, зачем только
пошли?&amp;quot;. Я вот тоже не знаю зачем они пошли.&lt;&#x2F;p&gt;
&lt;p&gt;Спереди сидели какие-то мелкие дурочки, которые громко ржали при каждом
&amp;quot;нигер&amp;quot; или еще чем подобным, что по моим представлениям должно вызвать
максимум ухмылку. И сидели вконтактике с огромного лопатофона с такой
яркостью, что меня аж слепило иногда.&lt;&#x2F;p&gt;
&lt;p&gt;Справа сидели два милых гопаря, один из которых все время терял нить
&amp;quot;тягомотины&amp;quot; и хотел свалить с сеанса, а другой уговаривал своего дружка
остаться и громко, даже не претендуя на шепот, пересказывал сценарий и
выдавал свои наивные прогнозы по поводу развития сюжета.&lt;&#x2F;p&gt;
&lt;p&gt;В общем, временами было сложно абстрагироваться, такое сильно мешает
смотреть атмосферный фильм. Вот бы в кинотеатрах были охранники, которые
за превышение громкости выводят из зала, эх.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Обсуждение &lt;a href=&quot;https:&#x2F;&#x2F;disqus.com&#x2F;home&#x2F;discussion&#x2F;ozkriffgithubio&#x2F;93dfd5b00d8749faad18de13504e6bbc&quot;&gt;на Disqus&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Несколько моделек и вечная смерть</title>
                <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-01-29--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-01-29--devlog/</guid>
                <description>&lt;p&gt;Defuz предложил, пока я веду журнал в гисте, пинговать о записях в
&lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;ozkriff&#x2F;zoc&quot;&gt;https:&#x2F;&#x2F;gitter.im&#x2F;ozkriff&#x2F;zoc&lt;&#x2F;a&gt;, что был способ оставлять коменты и
узнавать об обновлениях.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Немного поправил геометрию
&lt;a href=&quot;https:&#x2F;&#x2F;www.google.ru&#x2F;search?q=mammoth+tank&amp;amp;tbm=isch&quot;&gt;мамонт танка&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-29--devlog&#x2F;draft-mammoth-tank.png&quot; alt=&quot;Набросок мамонт-танка&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Но сильно возиться с ним не хочется - мне просто нужен какой-то огромный
юнит на всю клетку, чтобы не забыть про них совсем)&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;С вертолетом тоже пока заканчиваю вот на такой стадии:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-29--devlog&#x2F;draft-helicopter.png&quot; alt=&quot;Болванка вертолета&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Кстати, на заднем плане, за вертолетом, обрезанные здания виднеются.
Примерно так, если что, подумываю рисовать здания в которых кто-то есть.&lt;&#x2F;p&gt;
&lt;p&gt;В режиме рендера каркас не рисуется, вообще палки сверху еще должны
быть:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-29--devlog&#x2F;draft-building.png&quot; alt=&quot;Каркасные здания&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;(на вписаную и описаную окружности внимание обращать не надо,
это просто вспомогательные конструкции для размещения зданий в макете :) )&lt;&#x2F;p&gt;
&lt;p&gt;Может еще контуры окон-дверей потом добавлю.&lt;&#x2F;p&gt;
&lt;p&gt;В Battle Academy здания с людьми внутри рисуются полупрозрачными, но на
деле (для меня, конечно) это очень криво выглядит и ничего не понятно
=\ :&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-29--devlog&#x2F;ba2-buildings.png&quot; alt=&quot;Здания в BA2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;О, внезапное (эти тоже все обещают &amp;quot;начать вести бложик более
постоянно&amp;quot;, хех) обновление в тихом и уютном бложике разработчиков моей
любимой Unity of Command:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;unityofcommand.net&#x2F;blog&#x2F;2016&#x2F;01&#x2F;28&#x2F;dev-diary-3-are-you-experienced&quot;&gt;http:&#x2F;&#x2F;unityofcommand.net&#x2F;blog&#x2F;2016&#x2F;01&#x2F;28&#x2F;dev-diary-3-are-you-experienced&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Тут говорится о том, что во второй части игры войска надо будет беречь,
потому что они будут переходить из сценария в сценарий. Ну и о тонкостях
накопления ими опыта рассказывается.&lt;&#x2F;p&gt;
&lt;p&gt;Вот, вроде, это клево и логично, что тебя принуждают не разбрасываться
армией просто так. Но что-то в первой части UoC было приятно
освобождающее в том, что ты мог пожертвовать чем угодно, лишь бы
выполнить боевые задачи в срок. Да и в относительно недавно пройденной
мной Battle Academy 2 так же. Эх, теперь, наверное, надо будет над
каждым отрядом трястись =\ .&lt;&#x2F;p&gt;
&lt;p&gt;В более масштабном Кодексе Войны или даже Битве за Веснот меня
необходимость побеждать без потерь сильно раздражала. Тоже интересно,
конечно, но там надо было выигрывать почти всегда без потери единого
отряда, разве что совсем уж мелочью дешевой жертвовать.&lt;&#x2F;p&gt;
&lt;p&gt;С одной стороны, это как-то не слишком реалистично, как по мне, в жизни
так не бывает).&lt;&#x2F;p&gt;
&lt;p&gt;С другой, это создает прямую связь между сценариями: хорошо играешь
-потом побеждать тоже проще, плохо играешь - дальше только сложнее
будет. Это занятная метаигра, но не без неприятных нюансов: ты заранее
не знаешь, какой процент потерь допустим, так что если есть возможность
переиграть сценарий, то лично я обычно переигрываю до тех пор, пока не
пройду практически без потерь, а то мало ли что в следующих сценариях
меня ждет? Это несколько вытягивает удовольствие из игры. Даже виноватым
себя чувствовал, если начинал новый сценарий без идеального прохождения
прошлого.&lt;&#x2F;p&gt;
&lt;p&gt;Лично моим любимым решением этой сложности является перманентная смерть
(когда сохранение только одно и только автоматическое), как в новом
X-COM, например. У тебя просто нет возможности переигрывать сценарии,
так что из-за этого совесть не мучает и просто стараешься аккуратно
играть, лишний раз не подставляя ценных ветеранов под риск.&lt;&#x2F;p&gt;
&lt;p&gt;Ладно, посмотрим как тут сделают, может пермадез будет, может условия
выигрыша в сцерании будут оговаривать какой-то допустимый процент
потерь, или в каждом новом сценарии будут выдавать большое количество
&amp;quot;казеных&amp;quot; отрядов, или еще что такое :) .&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Обсуждение &lt;a href=&quot;https:&#x2F;&#x2F;disqus.com&#x2F;home&#x2F;discussion&#x2F;ozkriffgithubio&#x2F;0a30d487068244d88426fd724b62fca1&quot;&gt;на Disqus&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Очередной перезапуск</title>
                <pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-01-28--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-01-28--devlog/</guid>
                <description>&lt;p&gt;Моя последняя попытка вести нормальный журнал
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;ozkriff.github.io-src&#x2F;blob&#x2F;master&#x2F;content&#x2F;2015-11-30--devlog-live-again.rst&quot;&gt;провалилась&lt;&#x2F;a&gt;
:) .&lt;&#x2F;p&gt;
&lt;p&gt;Времени жрет дикое количество. Не умею я, как некоторые люди могут, за
пол часа накатать красивую страницу текста :( . После того поста вел
каждодневные записи в файлике, что я по проекту делаю, что бы потом из
них пост слепить. Через месяц, под новый год таки попробовал - просидел
три вечера за этим занятием, задолбался и решил что обойдусь без блога)&lt;&#x2F;p&gt;
&lt;p&gt;Так что попробую теперь вести хоть какой-то журнал, в виде маленьких
слабо-организованных записей. Как я себе в файлик писал, вот так же -
каждый день, если хоть чего-то делал про Зоку, писать что делал, как
прошло и какие у меня мысли вообще возникают. Авось кому-нибудь да и
будет интересно полистать. Ну и мне потом, наверное, забавно перечитать
когда-нибудь будет и вспомнить, какой я был дурной)&lt;&#x2F;p&gt;
&lt;p&gt;Собственно, это первая запись :) . Хотя думаю, добавлю пару записей
задним числом из недавних разговоров - про тот же план работ.&lt;&#x2F;p&gt;
&lt;p&gt;Для начала пускай это дело просто в gist&#x27;е живет - каждый день новый
файлик. Лениво с полноценным блогом для такого заморачиваться.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Заготовка вертолета, гм:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-28--devlog&#x2F;draft_helicoper.png&quot; alt=&quot;Заготовка вертолета&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;В фоне потихоньку вожусь с удалением констант с индексами из кода сцены
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;issues&#x2F;154&quot;&gt;#154&lt;&#x2F;a&gt;). Сами константы
удалил, теперь все получается динамически, но при движении отрядов или
переходе хода оно падает. Надо искать, что я там напутал)&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Мастерплан и мотивация</title>
                <pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-01-27--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-01-27--devlog/</guid>
                <description>&lt;p&gt;Знакомый скинул ссылку на вполне себе интересную
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;gamedev&#x2F;comments&#x2F;426148&quot;&gt;серию статей в реддите&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Хм, ну базовый цикл у меня близок к цивилизации - &amp;quot;Select unit, move
unit, combat&#x2F;gather, repeat.&amp;quot; у меня тоже ты &amp;quot;выбираешь отряд,
двигаешь&#x2F;атакуешь&#x2F;используешь навык, заново&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;прототип - я большую часть механики беру из игры Battle Academy, так что
она уже служит начальным прототипом) Плюс, я вот сейчас &amp;quot;отыгрываю&amp;quot; игру
в блендере на макете игры. Туман войны так не симулируешь, а вот базовую
логику сражений - вполне. Так-то у меня само приложение сейчас и в
ближайшее время, как по нему и видно, на стадии прототипа -практически
никакого интерфейса, эффектов, анимацией и т.п только игровая логика,
всплывающие текстовые надписи и бааазовая визуализация.&lt;&#x2F;p&gt;
&lt;p&gt;как оно сейчас есть оно мне нравилось более-менее, но при попытке
сделать карту побольше я понял, что города выглядят страшно криво и
бесят меня вот и задумался над переделкой механики - в итоге увеличил
клетки&lt;&#x2F;p&gt;
&lt;p&gt;Те же технические моменты, типа перехода на glium, я на потом
откладываю. Собственно, главное что бы оно на андроиде работало и я мог
проверять игру на планшете - в первую очередь для тыкалок же делается.&lt;&#x2F;p&gt;
&lt;p&gt;И да, все это - тактический режим, поверх которого должен быть еще
стратегический с глобальной картой. Но с стратегическим я пока решил не
запариваться сильно, потому что тактический должен быть цельной игрой
сам по себе.&lt;&#x2F;p&gt;
&lt;p&gt;Стратегический в итоге должен как-то так выглядеть:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-27--devlog&#x2F;wargame-strategic-mode-example.jpg&quot; alt=&quot;Образец для стратегического режима&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;и определять контекст для тактических сражений.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;перехожу ко второй статье)&lt;&#x2F;p&gt;
&lt;p&gt;вчера утром знакомому уже писал свой план на ближайший месяц-два&lt;&#x2F;p&gt;
&lt;p&gt;сделать в блендере модельки-прототипы базовых видов солдат-техники,
затем изменить код игры, что бы оно поддерживало три слота, вклячить в
игру здания и дороги, затем вклячить новые виды юнитов с базовой
математикой боя для них и добавить условия победы в режиме хотсит. Что
бы в итоге в это можно было играть полноценно.&lt;&#x2F;p&gt;
&lt;p&gt;Предполагается, что это все где-то на месяц. Хочу сосредоточиться на
получении чего-то играбельного, пускай и технически убогого и вообще
схематического.&lt;&#x2F;p&gt;
&lt;p&gt;Когда это сделаю, тогда в планах сначала переход на glium, затем сетевая
игра.&lt;&#x2F;p&gt;
&lt;p&gt;А дальше план уже более размытый: добавить редактор карт,
загрузки-сохранения, кое-какие спецэффекты довести тактический режим до
вида &amp;quot;не очень стыдно показать обычному знакомому, который играет в
игры, но в их производстве вообще ничего не понимает&amp;quot; и потом начать
работать над стратегическим режимом.&lt;&#x2F;p&gt;
&lt;p&gt;Точное время на задачи я даже не буду пытаться прикинуть, все равно
долго выйдет. Думаю категориями &amp;quot;вот до такой стадии было бы неплохо
добраться через два месяца, это еще через месяц-другой&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Are you disciplined enough to stay 100% productive over that amount of
time?&amp;quot; -гм, 100% буду время от времени забрасывать к чертям проект на
неделю-другую как на новый год) а то так с ума сойдешь) но даже в такие
перерывы я где-то в фоне все равно продолжаю думать на зоком, так что
уверен, что сам проект не брошу.&lt;&#x2F;p&gt;
&lt;p&gt;Да, наверное стоит создать суперзадачу на гитхабе &amp;quot;Закончить прототип
тактического режима&amp;quot; с более-менее детальным списком дел в масштабе
день-неделя. Постепенное проставление галочек и правда должно
мотивировать, я люблю такие штуки))&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Перехожу к третьей части, про мотивацию - важная штука)&lt;&#x2F;p&gt;
&lt;p&gt;у меня один из способов мотивировать себя - написание всего этого дела
на ржавчине) все-таки интересный язык сам по себе. клево с ним
разбираться, но и времени на это уходит сильно больше, чем если бы я
просто на плюсах написал то же самое, даже свой простенький графический
движок. Но мне так не хочется еще и в свободное время пачкать руки в
плюсах))&lt;&#x2F;p&gt;
&lt;p&gt;Хм, у меня, наверное, два больших источника вдохновения - это
стратегические игры, типа Unity of Command, Battle of the Bulge, В Тылу
Врага, Close Combat, Uniwar и т.п. Когда дело ну вообще никак не идет,
то я хотя бы на вечер забиваю на zoc совсем и сажусь как следует в
чего-нибудь стратегическое поиграть. В процессе почти всегда появляются
мысли вроде &amp;quot;черт, сюда бы такую-то возможность добавить, вот было бы
круто&amp;quot;)&lt;&#x2F;p&gt;
&lt;p&gt;И еще схемки - или нарисованные на бумаге&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-27--devlog&#x2F;2d-zoc-abstract-cities.jpg&quot; alt=&quot;Набросок 2д варианта с абстрактными городами&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-27--devlog&#x2F;2d-zoc-draft-one-tile-buildings.png&quot; alt=&quot;Набросок 2д варианта с конкретными одноклеточными зданиями&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;в таком духе, я их мноооого рисую когда думаю)&lt;&#x2F;p&gt;
&lt;p&gt;или макеты в блендере, как вот который сейчас делаю потихоньку&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2016-01-27--devlog&#x2F;blender_mockup.png&quot; alt=&quot;Блендерный макет&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Смотришь на это дело и сразу представляешь, как было бы клево, если бы
оно могло &amp;quot;ожить&amp;quot;. Что бы вон та артиллерия могла дать залп дымовыми
перед вражеским городом, эта пехота забраться в броневики и ломануться
навстречу, а вон те танки в это время при поддержке вертолетов зашли в
бок и подавили бы с расстояния часть сил врага и блаблабла))&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Форы</title>
                <pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-01-26--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-01-26--devlog/</guid>
                <description>&lt;p&gt;Недавно тут наткнулся на
&lt;a href=&quot;http:&#x2F;&#x2F;www.progamer.ru&#x2F;dev&#x2F;handicaps.htm&quot;&gt;статью про гандикапы&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Может для сетевого режима ЗК замена обычных рейтингов на уменьшающиеся
при победах гандикапы (форы) и не такая глупая идея. Все-таки вполне
себе способ повысить интерес при игре с сильно отличающимся по уровню
игры противником.&lt;&#x2F;p&gt;
&lt;p&gt;Например, банально давать меньше стартовых очков. Тогда и рейтинг можно
упразднить, вместо него использовать размер гандикапа). Типа, когда
начинаешь играть, твой рейтинггандикап - 200%. Т.е. у тебя, допустим,
200% стартовых очков, а у топовых игроков будет рейтинггандикап в 60%
или типа того. Правда тупо менять количество стартовых очков - слишком
дуболомное решение, надо чего-то более хитрое придумать.&lt;&#x2F;p&gt;
&lt;p&gt;Для игры со знакомыми можно просто договориться и не тратить все очки
или еще какое условие поставить, но это как-то &amp;quot;не круто&amp;quot;. Пробовал
много раз так делать со знакомыми, но, обычно, весело не было.
Появляется какое-то чувство кустарности, которое меня порядочно
нервирует. Еще вручную за договоренностями бывает сложно следить. Точно
помню пару раз, как я &amp;quot;ой, так у меня же полторы тыщи очков, чего я
туплю? Вооот, тут покупаю крейсер и он всех выносит, бббабах! ..ой,
черт&amp;quot;. Ну и интересный домашний гандикап еще надо придумать, что бы игра
не поломалась как система.&lt;&#x2F;p&gt;
&lt;p&gt;Надо посмотреть, как это дело в более традиционном спорте используется.
В Go вон вообще всякой хитроты
&lt;a href=&quot;https:&#x2F;&#x2F;ru.wikipedia.org&#x2F;wiki&#x2F;%D0%A4%D0%BE%D1%80%D0%B0#.D0.A4.D0.BE.D1.80.D0.B0_.D0.B2_.D0.B3.D0.BE&quot;&gt;понапридумывали&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Подумал-подумал и пока решил, что если и планировать такое, то только в
виде параллельного обычному рейтинговому топа, в порядке эксперимента, а
то слишком уж тут много тонкостей у этого подхода.&lt;&#x2F;p&gt;
&lt;p&gt;Но это так, мысли про далекое будущее все :) .&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Сложности с crates.io и конфиги из открытого космоса</title>
                <pubDate>Mon, 25 Jan 2016 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2016-01-25--devlog/</link>
                <guid>https%3A//ozkriff.github.io/2016-01-25--devlog/</guid>
                <description>&lt;p&gt;Сунулся наконец-то выложить zoc на crates.io.
А, оказывается, даже если пакеты лежат в одном репозитории, их надо выкладывать на
crates.io отдельно.&lt;&#x2F;p&gt;
&lt;p&gt;Посмотрел gfx - они тоже каждый пакет, оказывается, отдельно выкладывают :( .
Эх, совсем не хочется загаживать crates.io своими бессмысленными
пакетами, они явно никому не пригодятся.&lt;&#x2F;p&gt;
&lt;p&gt;Можно бы на модули разбить, а не пакеты, но так инкрементальная сборка
будет опять занимать минуту и сложности с привязками к OpenGL возникают.&lt;&#x2F;p&gt;
&lt;p&gt;Нафиг тогда выкладывание на crates.io, пока на glium не перейду. Мне не
так сильно этот crates.io и нужен, просто немного неприятно, что про
твой код забывают при проверке всяких поломок при обновлениях библиотек.
Ну да ничего, пару месяцев уж потерплю.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Возился в связи с этим с Cargo.toml и Cargo.lock.
Хоспади, ну все-таки как мне не нравится этот TOML. =(&lt;&#x2F;p&gt;
&lt;p&gt;Он в некоторых случаях и правда неплохо справляется, но при работе с ним
все время чувство костылей есть. Как-то у него фокус на частности, а не
на нормальное обобщенное решение. В целом ничего формат, особенно для
простых конфигов, но вот синтаксис таблиц меня ужасает.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Перезапуск журнала</title>
                <pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2015-11-30--devlog-live-again/</link>
                <guid>https%3A//ozkriff.github.io/2015-11-30--devlog-live-again/</guid>
                <description>&lt;p&gt;Насмотрелся я тут на журналы &lt;a href=&quot;http:&#x2F;&#x2F;reangdblog.blogspot.com&quot;&gt;reangd&lt;&#x2F;a&gt;,
&lt;a href=&quot;http:&#x2F;&#x2F;www.gridsagegames.com&#x2F;blog&quot;&gt;cogmind&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;eao197.blogspot.ru&quot;&gt;eao197&lt;&#x2F;a&gt; и всякие другие, решил что тоже
чего-нибудь хочу писать. С последней моей попытки прошло около полутора
лет)&lt;&#x2F;p&gt;
&lt;p&gt;Итак, на момент написания прошлой заметки я работал над Миром Кораблей в
&lt;a href=&quot;https:&#x2F;&#x2F;wargaming.com&#x2F;ru&#x2F;about&#x2F;our-locations&#x2F;saint-petersburg&quot;&gt;питерском
wargaming.net&lt;&#x2F;a&gt;.
Собственно, я успел уйти оттуда, поработать над казуалками в &lt;a href=&quot;http:&#x2F;&#x2F;zillionwhales.ru&quot;&gt;Zillion
Whales&lt;&#x2F;a&gt;, оттуда тоже уйти и осесть в
&lt;a href=&quot;http:&#x2F;&#x2F;protei.ru&quot;&gt;Протее&lt;&#x2F;a&gt;. Так что сейчас я ковыряю ip-телефонию и все игры
теперь только в свободное время, зато не надо каждый день &amp;quot;любоваться&amp;quot;
на ужасы фритуплея)&lt;&#x2F;p&gt;
&lt;p&gt;Я больше не студент, совсем - наконец-то закончил заочку в политехе,
ура-ура! :-D Темой диплома как раз и был этот проект, даже
&lt;a href=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2015-11-30--devlog-live-again&#x2F;lesnikov_a_a_slides_2015.pdf&quot;&gt;презентация&lt;&#x2F;a&gt; вот завалялась. Хотя
ничего особо крутого, как мне изначально хотелось, на деле не вышло.
Ключевым моментом диплома являлся ИИ. Я там подробно расписал какие они
бывают и какие виды подходят для каких игр. А вот реализовать
полноценный не успел - сдавался вариант, который только формально можно
было назвать &amp;quot;практичным ИИ&amp;quot; (извиняюсь, но лучшего перевода для
&amp;quot;utility-based AI&amp;quot; не нашел. &amp;quot;ИИ, основанный на теории полезности&amp;quot;
как-то длинновато). Он примерял к текущему состоянию игры захардкоженные
шаблоны на основе позиций и типов отрядов, оценивал коэффециент их
полезности, и втупую применял их. На специально подготовленных ситуациях
выглядело не так и плохо, но это отмазочный вариант, конечно. И с очень
стремным кодом, так что в git&#x27;е сейчас так и лежит базовый &amp;quot;ИИ&amp;quot; -
подъехать в на расстояние выстрела и стрелять :-| . Но общий обыт был
интересным)&lt;&#x2F;p&gt;
&lt;p&gt;Сама ржавчина, конечно, за это время сильно выросла, с 0.10 аж до 1.4.
Вместо извращений по установке зависимостей или возни с git submodules,
появился cargo. По достижении 1.0 появилась обратная совместимость. Хотя
конкретно от этого я и не в полном восторге, руки у авторов языка теперь
&amp;quot;полусвязаны&amp;quot;, но переписываний и правда стало меньше, только когда
библиотеки чего-то ломают. Да и с этим Cargo.lock очень помогает. Хотя,
я уже месяца полтора его не обновлял - ух и сложный же следующий
&lt;code&gt;cargo update&lt;&#x2F;code&gt; у меня будет.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;За полтора года я успел переиграть много во что повлияевшего на мое
видение пошаговых стратегий, например:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;малоизвестная &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;306640&quot;&gt;Battle Academy
2&lt;&#x2F;a&gt; из которой я решил
фактически передрать ядро механики для тактического режима :) -
взаимодействие видов войск, быстрое&#x2F;осторожное передвижение, хитрая
видимость, реакционный огонь, боевой дух&#x2F;подавление и т.п.;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;чуть более известная &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;218090&quot;&gt;Unity of
Command&lt;&#x2F;a&gt; повлияла на мое
видение стратегического режима - хитрая система линий снабжения,
механика окружений и т.п.;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;мобильная
&lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=android.uniwar&quot;&gt;Uniwar&lt;&#x2F;a&gt; -
классная система параллельных сетевых игр, а сама по себе игровая
механика напоминает, что шестигранникам минимализм никогда не
помешает;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;серия Wargame, а именно
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;222750&quot;&gt;W:AB&lt;&#x2F;a&gt; и
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;251060&quot;&gt;W:RD&lt;&#x2F;a&gt; - одна из немногих
стратегий в реальном времени, в которую я с удовольствием поиграл за
долгое время. Интересна своим балансом между реализмом&#x2F;&amp;quot;веселостью&amp;quot;
и взаимодействием между разными видами войск.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Много думал про пошаговые игры без клеток, все-таки у клеток много
недостатков&#x2F;особенностей. Даже немного экспериментировал - сделал
простенькое путенахождение по вручную размеченной навигационной сетке:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2015-11-30--devlog-live-again&#x2F;2015-07-30--manual-navmesh-simple-pathfinding.png&quot; alt=&quot;Пример простого путенахождения на вручную размеченной сетке&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Путь проложен по центрам треугольников, для оптимизации потом хотел
прикрутить &lt;a href=&quot;http:&#x2F;&#x2F;digestingduck.blogspot.ru&#x2F;2010&#x2F;03&#x2F;simple-stupid-funnel-algorithm.html&quot;&gt;funnel
algorithm&lt;&#x2F;a&gt;,
но до этого этапа не дошло. Если что, шестигранники тут уже ничего не
значат, просто на основе работающего прилжожения экспериментировал.
Затем, написал простенький &amp;quot;наращиватель&amp;quot; препятствий, который в
зависимости от величины угла добавлял разное количество вспомогательных
отрезков:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2015-11-30--devlog-live-again&#x2F;2015-08-02--obstacle-grow.png&quot; alt=&quot;Пример нарощенного препятствия&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Предполагалось, что все юниты будут поделены на несколько групп по
размерам и для каждой группы будет поддерживаться своя сетка.
Непосредственно преобразованием массива таких &amp;quot;жирных&amp;quot; препятствий в
сетку должен был заниматься триангулятор. Мне большего всего приглянулся
плюсовый &lt;a href=&quot;https:&#x2F;&#x2F;code.google.com&#x2F;p&#x2F;poly2tri&quot;&gt;poly2tri&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2015-11-30--devlog-live-again&#x2F;2015-08-11--triangulation-cpp-demo.png&quot; alt=&quot;Всякие стандартные примеры из poly2tri&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Даже пытался портировать его на ржавчину, но там очень стремная работа с
памятью, очень хреново укладывается в модель ржавчины. Пробовал
переделать плюсовую версию на работу с массивами и индексами, но потом
решил что очень уж много на эксперимент уходит времени, энтузиазм про
бесклеточные игры прошел, так что я совсем забросил попытку.&lt;&#x2F;p&gt;
&lt;p&gt;Ну да ладно, темы вдохновляющих игр, разных видов клеток и непрерывного
пространства достойны отдельных заметок, а эта запись и так большой
получается.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Теперь, наконец-то, что касается самого проекта.&lt;&#x2F;p&gt;
&lt;p&gt;Прежде всего, он переименован из Марoдера в Зону Контроля (Zone of
Control). Сокращенно - ЗК&#x2F;ZoC. Гитхабовское хранилище переехало в
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Внешний вид с момента сдачи диплома изменился слабо и выглядит все это
безобразие сейчас как-то так:&lt;&#x2F;p&gt;
&lt;div class=&quot;youtube&quot;&gt;&lt;iframe
    frameborder=&quot;0&quot;
    allowfullscreen
    src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;srJAfngSwxk?color=white&amp;rel=0&amp;showinfo=0&quot;
&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Собственно, да, я портировал это на android, хотя под линуксом и виндой
тоже должно работать. Спасибо Skligus&#x27;y за его
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;skligys&#x2F;rusty-cardboard&quot;&gt;rusty-cardboard&lt;&#x2F;a&gt;, очень
помогло поначалу, и Tomaka за его
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt; и
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;android-rs-glue&quot;&gt;android-rs-glue&lt;&#x2F;a&gt;. К
сожалению, для сборки под андроид требуется ночная сборка rustc, потому
что в android-rs-glue используются какие-то нестабильные штуки. Хотя
надо перепроверить, может уже и стабильного компилятора хватит -
ржавчина так быстро развивается :).&lt;&#x2F;p&gt;
&lt;p&gt;Кстати, да, переписал с glfw-rs на
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt; - чем больше кода на
ржавчине, тем прощe, особенно при сборке на разных платформах. Еще хотел
со своих &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zoc&#x2F;tree&#x2F;47e8f0&#x2F;src&#x2F;zgl&#x2F;src&quot;&gt;костылей вокруг
OpenGL&lt;&#x2F;a&gt; перейти
на &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomaka&#x2F;glium&quot;&gt;glium&lt;&#x2F;a&gt;, но пока не осилил.&lt;&#x2F;p&gt;
&lt;p&gt;Переделал с выделения через цветовой буфер на чистую математику -
пересечение луча из курсора с плоскостью карты, бла бла блап. Уж очень
много от времени отрисоки кадра оно сжирало, да и с шейдерами так меньше
хлопот.&lt;&#x2F;p&gt;
&lt;p&gt;Но это все про техническую часть. Что касается самой игры, то:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;два захардкоженых режима на одной карте с одним набором войск - против
тупого ИИ или хотсит на двух игроков;&lt;&#x2F;li&gt;
&lt;li&gt;от одного до пяти членов отряда в клетке -отказался от идеи иметь
несколько отрядов в слотах одной клетки, потому что так и не
придумал, как это все нормально отображать и как этим управлять.
Хотя, при введении зданий и летающих отрядов, наверное, придется тут
усложнить ситуацию;&lt;&#x2F;li&gt;
&lt;li&gt;до двух активных очков атаки для стрельбы по прямому приказу игрока;&lt;&#x2F;li&gt;
&lt;li&gt;одно пассивное очко атаки для реакционного огня в чужой ход (как в
x-com) + неиспользованные в свой ход активные очки атаки становятся
пассивными;&lt;&#x2F;li&gt;
&lt;li&gt;вероятность поражения с (пока что) захардкожеными вероятностями
попадания в зависимости от типа атакующего, защищающегося и
местности;&lt;&#x2F;li&gt;
&lt;li&gt;кривоватый туман войны, который впоследствии, видимо, будут
переведен на менее дискретный алгоритм;&lt;&#x2F;li&gt;
&lt;li&gt;заготовка системы боевого духа и подавления - каждый ход
восстанавливается 10 очков морали, за каждую атаку снимается по 10,
если мораль падает ниже половины - отряд не может стрелять;&lt;&#x2F;li&gt;
&lt;li&gt;разная стоимость движения по местности для разных отрядов;&lt;&#x2F;li&gt;
&lt;li&gt;два режима передвижения - быстрый и осторожный, который стоит в два
раза дороже, зато не накладывает штрафы на точность при стрельбе и
при попадании под огонь отряд не лишается оставшихся очков движения;&lt;&#x2F;li&gt;
&lt;li&gt;тестовый грузовик для транспортировки пехоты;&lt;&#x2F;li&gt;
&lt;li&gt;механика видимости из BA2 с двумя радиусами - &amp;quot;нормальная&amp;quot; и
&amp;quot;отличная&amp;quot; видимость. Последняя позволяет увидеть скрытые юниты
(например, пехоту в лесу);&lt;&#x2F;li&gt;
&lt;li&gt;атаки из засад, если атакующий изначально невидим, с бонусом к атаке
и шансом не раскрыть свою позицию;&lt;&#x2F;li&gt;
&lt;li&gt;приказ &amp;quot;не стрелять&amp;quot; для отключения реакционного огня при
организации хитрых засад или для разведчиков;&lt;&#x2F;li&gt;
&lt;li&gt;пока что только четыре вида отрядов:
&lt;ul&gt;
&lt;li&gt;пехота - четыре человека, одна клетка отличной видимости, умеют
тихориться в лесу;&lt;&#x2F;li&gt;
&lt;li&gt;разведчики - как пехота, только всего 2 человека, зато видят и
бегают немного быстрее;&lt;&#x2F;li&gt;
&lt;li&gt;танк - громко стреляет и толсто бронирован, зато у него вообще
нет отличной видимости (попробуй что через щели в броне
рассмотреть) - без пехотного прикрытия рядом с лесом ему
ездить не стоит;&lt;&#x2F;li&gt;
&lt;li&gt;грузовик - не умеет стрелять, очень хрупкий и подслеповатый,
зато быстрее всех остальных отрядов и может перевозить пехоту;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Ну, вот как-то так. Разработка, как видно, сильно
&lt;a href=&quot;http:&#x2F;&#x2F;mysweetwhomp.fr&#x2F;private&#x2F;119228173847&#x2F;tumblr_noimn4cVks1u4yjir&quot;&gt;затянулась&lt;&#x2F;a&gt; -
- я-то хотел такое уже через пару месяцев иметь, ха! То ли мне просто
лень, то ли времени и правда мало получается выделять, черт его знает.
Уже мнооого раз полностью терял весь энтузиазм и забрасывал игру на пару
месяев, даже пытался чего-то другое делать. Но потом возвращался, что бы
все-таки надо довести до ума эту чертову ЗК :) . Да и вышеупомянутые
игры сильно помогали с вдохновением)&lt;&#x2F;p&gt;
&lt;p&gt;Вот, собственно, вся первая запись. Вряд ли я буду теперь пытаться
делать недельные отчеты, скорее буду писать более мелкие заметки по
настроению - регулярность вытягивает из любого дела весь интерес. Ну и
писать тут буду, наверное, не только по делу - смотрите теги :) .&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.05.18</title>
                <pubDate>Sun, 18 May 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-05-18--devlog-marauder-012/</link>
                <guid>https%3A//ozkriff.github.io/2014-05-18--devlog-marauder-012/</guid>
                <description>&lt;p&gt;Почти дорисовал базового человечка, так лениво :) .&lt;&#x2F;p&gt;
&lt;p&gt;Разработчики Ржавчины мутят чего-то страшное. Хотят убрать &lt;code&gt;mut&lt;&#x2F;code&gt;,
иммутабельность. Бррр!&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.05.11</title>
                <pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-05-12--devlog-marauder-011/</link>
                <guid>https%3A//ozkriff.github.io/2014-05-12--devlog-marauder-011/</guid>
                <description>&lt;p&gt;Тревис все так и сломан.&lt;&#x2F;p&gt;
&lt;p&gt;Потратил кучу времени, пока искал &lt;code&gt;![macro_export]&lt;&#x2F;code&gt; и тупил вокруг))&lt;&#x2F;p&gt;
&lt;p&gt;Запил &lt;code&gt;MeshId&lt;&#x2F;code&gt; структурку, наконец-то.&lt;&#x2F;p&gt;
&lt;p&gt;С горем пополам допилил error_context, выложил как отдельную библиотеку
на гитхабе и использовал в мародере. И после отзывов переписал ее к
чертям))&lt;&#x2F;p&gt;
&lt;p&gt;Сделал кое-какие кнопки. Криво, но работает. Тестовая кнопка - &amp;quot;конец
хода&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Перевел свои библиотечки и библиотеки bjz на rustc от rust-lang.org&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.05.04</title>
                <pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-05-05--devlog-marauder-010/</link>
                <guid>https%3A//ozkriff.github.io/2014-05-05--devlog-marauder-010/</guid>
                <description>&lt;p&gt;Трэвис сломался и все никак не чинится. Все протухло :( .&lt;&#x2F;p&gt;
&lt;p&gt;Почти добил &lt;code&gt;ErrorContext&lt;&#x2F;code&gt;. Перенес на &lt;code&gt;local_data&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Заменил все &lt;code&gt;type = ...&lt;&#x2F;code&gt;, которые можно, на структуры.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.04.27</title>
                <pubDate>Mon, 28 Apr 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-04-28--devlog-marauder-009/</link>
                <guid>https%3A//ozkriff.github.io/2014-04-28--devlog-marauder-009/</guid>
                <description>&lt;p&gt;Меня поплющило пару дней на тему перехода с 3д моделей на 2д маркеры.&lt;&#x2F;p&gt;
&lt;p&gt;Заменил везде &lt;code&gt;&amp;amp;str&lt;&#x2F;code&gt; на &lt;code&gt;Path&lt;&#x2F;code&gt;, так правильней (ссылка на битсквидблог).&lt;&#x2F;p&gt;
&lt;p&gt;Заменил структурки &lt;code&gt;struct(MInt)&lt;&#x2F;code&gt; на &lt;code&gt;struct(id: MInt}&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Шейдеры с 1.5 на 1.2, что бы можно было запускаться на OpenGL 2.1 без
проблем.&lt;&#x2F;p&gt;
&lt;p&gt;Перенес исходники в &lt;code&gt;src&lt;&#x2F;code&gt; директорию, а всякое для работы в &lt;code&gt;bin&lt;&#x2F;code&gt;
директорию. Добавил в Makefile команду &lt;code&gt;run&lt;&#x2F;code&gt;, которая переходит в &lt;code&gt;bin&lt;&#x2F;code&gt;
и запускает игру.&lt;&#x2F;p&gt;
&lt;p&gt;Поправил систему слотов.&lt;&#x2F;p&gt;
&lt;p&gt;Убрал &lt;code&gt;MBool&lt;&#x2F;code&gt; в пользу обычного &lt;code&gt;bool&lt;&#x2F;code&gt;. В этом был смысл для Си, но
тут-то уже все есть.&lt;&#x2F;p&gt;
&lt;p&gt;Почти доделал &lt;code&gt;ErrorContext&lt;&#x2F;code&gt;, скоро попробую его внедрить.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.04.20</title>
                <pubDate>Mon, 21 Apr 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-04-21--devlog-marauder-008/</link>
                <guid>https%3A//ozkriff.github.io/2014-04-21--devlog-marauder-008/</guid>
                <description>&lt;p&gt;Отпуск кончился. Хочется умереть :) .&lt;&#x2F;p&gt;
&lt;p&gt;Забыл написать. На прошлой неделе появился первый отчет об ошибке, ура
ура! Правда я хз что с ним делать :( .&lt;&#x2F;p&gt;
&lt;p&gt;Наткнулся на серию классных постов об обработке ошибок в блоге
битсквида.&lt;&#x2F;p&gt;
&lt;p&gt;Сделал кое какое отображение 2д и 3д текста.&lt;&#x2F;p&gt;
&lt;p&gt;Решил возвращать текст в экранных координатах, а для отображения в 3д
сцене его плющить матрицами как надо.&lt;&#x2F;p&gt;
&lt;p&gt;Для поиска всех gl вызовов и вывода только их названий:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;grep -oh &amp;#39;gl::\w*(&amp;#39; visualizer&#x2F;* | sort | uniq
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Добавил макрос (фу) &lt;code&gt;verify!&lt;&#x2F;code&gt;, позаимствованный из kiss3d, для проверки
&lt;code&gt;gl::GetError&lt;&#x2F;code&gt; после каждого OpenGL вызова. Нашлась парочка ошибок.
Надеюсь, это поможет запустить мародера на os x, а то неудобно. что
отчет об ошибке столько времени уже висит.&lt;&#x2F;p&gt;
&lt;p&gt;Сделал отображаемый пробел и поддержку нескольких строчек в текстовом
кэше для font_stash.&lt;&#x2F;p&gt;
&lt;p&gt;Камера в начале боя теперь не где-то с краю, а в центре карты.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.04.13</title>
                <pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-04-14--devlog-marauder-007/</link>
                <guid>https%3A//ozkriff.github.io/2014-04-14--devlog-marauder-007/</guid>
                <description>&lt;p&gt;На этой неделе у меня был отпуск, о даа.&lt;&#x2F;p&gt;
&lt;p&gt;Наконец-то немного разобрался с pelican и начал приводить в порядок и
выкладывать эти недельные отчеты на ozkriff.github.io, а то до этого они
у меня только в gist&#96;е лежали.&lt;&#x2F;p&gt;
&lt;p&gt;По самому мародеру почти ничего не сделал, только выложил на гитхаб
очень-очень базовую версию stb-tt-rs и кое-какой код интеграции в
мародер. Но по факту текста в игре пока так и нет.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.04.07</title>
                <pubDate>Tue, 08 Apr 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-04-08--devlog-marauder-006/</link>
                <guid>https%3A//ozkriff.github.io/2014-04-08--devlog-marauder-006/</guid>
                <description>&lt;p&gt;Аналогично с прошлой - ничего, только смотрю, что б Мародер собирался.&lt;&#x2F;p&gt;
&lt;p&gt;Ну и вышел Rust 0.10, ура-ура! Хотя для меня это мало что меняет, все
равно использую ночные сборки :) .&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.03.30</title>
                <pubDate>Mon, 31 Mar 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-03-31--devlog-marauder-005/</link>
                <guid>https%3A//ozkriff.github.io/2014-03-31--devlog-marauder-005/</guid>
                <description>&lt;p&gt;За эту неделю ничего не сделал, только слежу, что бы мародер собирался
ночными сборками компилятора Ржавчины.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.03.23</title>
                <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-03-24--devlog-marauder-004/</link>
                <guid>https%3A//ozkriff.github.io/2014-03-24--devlog-marauder-004/</guid>
                <description>&lt;p&gt;Сходил на Manowar, о да, нужно больше пафоса. Только теперь вообще
ничего не слышу :) .&lt;&#x2F;p&gt;
&lt;p&gt;Мучал glfw-rs, cgmath-rs и самого мародера, что бы они собирались с
последней версией компилятора. Сложно было :)&lt;&#x2F;p&gt;
&lt;p&gt;Брендан хочет, что бы cgmath-rs был исправлен не таким грубым хаком. Там
могут быть косяки с NaN и +&#x2F;-Inf. Но я туплю как сделать правильно. :(&lt;&#x2F;p&gt;
&lt;p&gt;Мой грандиозный страйк помер :(, черт:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-24--devlog-marauder-004&#x2F;2014-03-20--github-streak-fail.png&quot; alt=&quot;github-streak-fail&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Капельку поковырял текст. Решил, что не буду использовать cmr&#x2F;hgl-rs,
страшно мне. Лучше все-таки чего-то свое сделаю.&lt;&#x2F;p&gt;
&lt;p&gt;Шрифты, шрифты:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-24--devlog-marauder-004&#x2F;2014-03-20--font-cli.png&quot; alt=&quot;font-cli&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Сделал выделение отдельных отрядов в клетке:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-24--devlog-marauder-004&#x2F;2014-03-20--color-picking-1.gif&quot; alt=&quot;color-picking-01&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-24--devlog-marauder-004&#x2F;2014-03-20--color-picking-2.png&quot; alt=&quot;color-picking-02&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-24--devlog-marauder-004&#x2F;2014-03-20--color-picking-3.gif&quot; alt=&quot;color-picking-03&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.03.16</title>
                <pubDate>Mon, 17 Mar 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-03-17--devlog-marauder-003/</link>
                <guid>https%3A//ozkriff.github.io/2014-03-17--devlog-marauder-003/</guid>
                <description>&lt;p&gt;Ну что ж. За эту неделю я почти ничего не сделал, времени на Мародера
было не так уж много.&lt;&#x2F;p&gt;
&lt;p&gt;Зато сходил на концерт Апокалиптики :) .&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-17--devlog-marauder-003&#x2F;2015-11-23--apocalyptica.jpg&quot; alt=&quot;apocalyptica-pic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Сделал простенькое и кривенькое перетаскивание карты средней кнопкой
мыши. Надо будет еще допиливать.&lt;&#x2F;p&gt;
&lt;p&gt;Вернулся к ковырянию шрифтов из kiss3d. Решил переписать font-stash на
Rust. Пока сделал только базовые привязки к stb_truetype.&lt;&#x2F;p&gt;
&lt;p&gt;Все свободное время в субботу-воскресение протупил с попытками обновить
cgmath-rs под ночную сборку Ржавчины: изменения с &lt;code&gt;min\max&lt;&#x2F;code&gt; для чисел с
плавающей точкой.&lt;&#x2F;p&gt;
&lt;p&gt;Пробовал городить страшные вещи с макросами, но пока так и не
разобрался.&lt;&#x2F;p&gt;
&lt;p&gt;Еще потыкал qapitrace и узнал, что &lt;code&gt;gl::GetError&lt;&#x2F;code&gt; надо вызывать после
каждого gl-вызова.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-17--devlog-marauder-003&#x2F;2015-11-23--qapitrace.jpg&quot; alt=&quot;qapitrace-pic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.03.10</title>
                <pubDate>Tue, 11 Mar 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-03-11--devlog-marauder-002/</link>
                <guid>https%3A//ozkriff.github.io/2014-03-11--devlog-marauder-002/</guid>
                <description>&lt;p&gt;Ну, этот понедельник я считаю последним днем недели. Не может у меня
неделя с выходного начинаться, это неправильно как-то.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Теперь передаю информацию о изменениях размера окна в камеру, теперь
изображение не сжимается по высоте или ширине при изменении размеров
окна.&lt;&#x2F;li&gt;
&lt;li&gt;С горем пополам доделал и закомитил базовую версию поддержки
нескольких отрядов в одной клетке. Правда, пока что выделить или
атаковать можно только первого из них (того, что с индексом 0) и
выделение вынесено на кнопку &lt;code&gt;S&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Задумался о системе слотов в клетке визуализатора.&lt;&#x2F;li&gt;
&lt;li&gt;Еще наткнулся на блог разработки Cogmind -
&lt;a href=&quot;http:&#x2F;&#x2F;www.gridsagegames.com&#x2F;blog&quot;&gt;http:&#x2F;&#x2F;www.gridsagegames.com&#x2F;blog&lt;&#x2F;a&gt;. Выглядит офигенно, но ссылки на
альфа версию или чего-то подобное я нигде не нашел, жалко.&lt;&#x2F;li&gt;
&lt;li&gt;Реализовал простенькую обертку над конфигурационными файлами.&lt;&#x2F;li&gt;
&lt;li&gt;Изменилась система сборки glfw-rs - вбил костыли в make_deps.sh.&lt;&#x2F;li&gt;
&lt;li&gt;Cmr сказал, что &lt;code&gt;c_str&lt;&#x2F;code&gt; - плохая штука. Заменил на
&lt;code&gt;with_c_str(||{...})&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;анимации движения теперь не зависят от времени отрисовки кадра.&lt;&#x2F;li&gt;
&lt;li&gt;И добавил поворот отряда в сторону движения.&lt;&#x2F;li&gt;
&lt;li&gt;Исправил поворот камеры - теперь скорость вращения камеры не
зависиот от размера экрана: что бы повернуть камеру на 360 градусов
по горизонтали нужно двигать мышкой от левой границы окна до правой,
не завсимо от размера окна.&lt;&#x2F;li&gt;
&lt;li&gt;Добавил класс MoveHelper, отвечающий за передвижение от точки до
точки со скоростью, не зависящей от количества кадров в секунду, и
использовал его во всех визуализаторах событий.&lt;&#x2F;li&gt;
&lt;li&gt;Удалил из визуализаторов событий методы &lt;code&gt;start&lt;&#x2F;code&gt; - пускай все в new
делается.&lt;&#x2F;li&gt;
&lt;li&gt;Добавил к анимации события атаки летящий снаряд. Ну как снаряд,
хрень какую-то :)&lt;&#x2F;li&gt;
&lt;li&gt;Теперь отряды принадлежат к какому-то из игроков, над отрядами
теперь висят страшненькие флажки.&lt;&#x2F;li&gt;
&lt;li&gt;На последок запек ambient occlusion вместо, кхм, &amp;quot;текстуры&amp;quot; &amp;quot;танка&amp;quot;.
Теперь намного лучше, как по мне.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;byzanz&quot;&gt;Byzanz&lt;&#x2F;h1&gt;
&lt;p&gt;Гуглил про выкладывание видео в бложик, наткнулся на упоминания byzanz.
Офигенно, теперь загажу все посты анимированными гифками! :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GNOME&#x2F;byzanz&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;GNOME&#x2F;byzanz&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;github-streak&quot;&gt;Github streak&lt;&#x2F;h1&gt;
&lt;p&gt;И да, github streak в 61 день, еее!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-11--devlog-marauder-002&#x2F;2014-03-09--github-streak.png&quot; alt=&quot;github-streak-pic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;80-simvolov-khvatit-kazhdomu&quot;&gt;80 символов хватит каждому!&lt;&#x2F;h1&gt;
&lt;p&gt;Узнал про &lt;code&gt;wc -L \*.rs&lt;&#x2F;code&gt; для поиска самой длинной строчки в куче файлов,
прикольно.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;$ find src&#x2F;core -name &amp;quot;*.rs&amp;quot; | xargs wc -L | sort -h
59 src&#x2F;core&#x2F;src&#x2F;game_state.rs
59 src&#x2F;core&#x2F;src&#x2F;player.rs
59 src&#x2F;core&#x2F;src&#x2F;unit.rs
65 src&#x2F;core&#x2F;src&#x2F;geom.rs
71 src&#x2F;core&#x2F;src&#x2F;map.rs
72 src&#x2F;core&#x2F;src&#x2F;partial_state.rs
76 src&#x2F;core&#x2F;src&#x2F;pathfinder.rs
78 src&#x2F;core&#x2F;src&#x2F;ai.rs
80 src&#x2F;core&#x2F;src&#x2F;db.rs
80 src&#x2F;core&#x2F;src&#x2F;fov.rs
83 src&#x2F;core&#x2F;src&#x2F;dir.rs
84 src&#x2F;core&#x2F;src&#x2F;fow.rs
91 src&#x2F;core&#x2F;src&#x2F;internal_state.rs
93 src&#x2F;core&#x2F;src&#x2F;filter.rs
121 src&#x2F;core&#x2F;src&#x2F;lib.rs
121 итого
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.03.02</title>
                <pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-03-03--devlog-marauder-001/</link>
                <guid>https%3A//ozkriff.github.io/2014-03-03--devlog-marauder-001/</guid>
                <description>&lt;p&gt;Так, что я сделал за эту неделю? Вообще, намного меньше, чем собирался
:( .&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ну, во первых, решил делать вот эти самые еженедельные записи.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Портировал из старых прототипов базовое путенахождение, причем оно
происходит не на сервере, а на клиенте, основываясь на знаниях
клиента о мире. Т.е., если на пол пути окажется скрытый юнит, то
путь через его клетку все равно будет проложен, а уже при симуляции
команды на сервере случится сюрприз в виде засады.&lt;&#x2F;p&gt;
&lt;p&gt;Раньше:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-03--devlog-marauder-001&#x2F;2014-03-10--no-pathfinding.gif&quot; alt=&quot;pathfinding-pic-1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Теперь:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-03-03--devlog-marauder-001&#x2F;2014-03-10--basic-pathfinding.gif&quot; alt=&quot;pathfinding-pic-2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Да, пока отряд никак не поворачивается при движении :( .&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Немного привел в порядок &lt;code&gt;gl_helpers&lt;&#x2F;code&gt;, вынес из него типы &lt;code&gt;Texture&lt;&#x2F;code&gt;,
&lt;code&gt;Vao&lt;&#x2F;code&gt;, &lt;code&gt;Vbo&lt;&#x2F;code&gt; и &lt;code&gt;Shader&lt;&#x2F;code&gt;. Ну и спрятал вызовы привязок gl внутри этих
классов.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Разделил все исходники на директории &lt;code&gt;core&lt;&#x2F;code&gt; и &lt;code&gt;visualizer&lt;&#x2F;code&gt;. Позже,
наверное, сделаю их отдельными единицами компиляции. К первому
отходит весь код, который не требует визуализации, т.е. сама суть
игры, а визуализатор занимается полученеи ввода от пользователя и
показом картинки.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Постарался сделать так, что бы после вызова конструктора объекта он
уже сразу был готов к использованию, а не ждал вызова
&lt;code&gt;init&lt;&#x2F;code&gt;-подобного метода в неопределенном состоянии.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Добавил в интерфейс визуализаторов событий метод &lt;code&gt;start&lt;&#x2F;code&gt; для,
очевидно, начала визуализации события.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</description>
            </item>
        
            <item>
                <title>Разработка Мародера - 2014.02.23</title>
                <pubDate>Fri, 28 Feb 2014 00:00:00 +0000</pubDate>
                <link>https%3A//ozkriff.github.io/2014-02-28--devlog-marauder-000/</link>
                <guid>https%3A//ozkriff.github.io/2014-02-28--devlog-marauder-000/</guid>
                <description>&lt;p&gt;Тому, что есть на данный момент до игры еще очень далеко. Пока что, по
шкале от &amp;quot;демо OpenGL приложение с вращающимся полигоном&amp;quot; до &amp;quot;X-COM,
HoMM, Кодекс Войны и др. большие пошаговые игры, которые пришли сходу
мне в голову&amp;quot; Мародер находится на минимальном отдалении от левого края.&lt;&#x2F;p&gt;
&lt;p&gt;На проект я потратил полтора месяца по часу-другому в день. Большую
часть времени я изучал и игрался с Ржавчиной (которая язык
программирования) и изучивал-вспоминал основы OpenGL.&lt;&#x2F;p&gt;
&lt;p&gt;Есть стремная тестовая модель (вроде как танка), слепленная в блендере
за пару минут и покрашенная там же, что бы проверить, как натягиваются
текстуры:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;ozkriff.github.io&#x2F;2014-02-28--devlog-marauder-000&#x2F;2014-02-23--ugly-tank.png&quot; alt=&quot;ugly-tank-pic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Других видов отрядов нет.&lt;&#x2F;p&gt;
&lt;p&gt;Текстурки - png. Модельки - .obj (самый простой формат, что я знаю).&lt;&#x2F;p&gt;
&lt;p&gt;Есть карта из одинаковых шестиугольников серого цвета. В каждой клетке
может находиться один отряд.&lt;&#x2F;p&gt;
&lt;p&gt;Работает простенькое выделение мышкой (color picking).&lt;&#x2F;p&gt;
&lt;p&gt;По кнопке &lt;code&gt;U&lt;&#x2F;code&gt; (_u_nit) в клетке, на которую указывает мышка,
появляется новый отряд. Появляется при помощи простенькой анимации -
поднимается из-под земли. Такие вот зомби-танки.&lt;&#x2F;p&gt;
&lt;p&gt;Отряды можно выделять кликом по клетке, но визуально это никак не
отображается.&lt;&#x2F;p&gt;
&lt;p&gt;Выделенному отряду можно отдать приказ двигаться, кликнув по пустой
клетке, но путенахождение не реализовано, так что он просто полетит по
прямой к нужной клетке.&lt;&#x2F;p&gt;
&lt;p&gt;Выделенному отряду можно дать команду атаковать, наведя мышку на другой
отряд и нажав клавишу &lt;code&gt;A&lt;&#x2F;code&gt; (_a_ttack). Очков здоровия, брони, точности
и т.д. нет, атакованный отряд просто сразу умирает. Анимация смерти
является противоположностью анимации появления - отряд уходит под землю.
Очков действий у отрядов нет, атаковать они могут любое количество раз.&lt;&#x2F;p&gt;
&lt;p&gt;По нажатию кнопки &lt;code&gt;T&lt;&#x2F;code&gt; (end _t_urn) ход переходит к следующему игроку
(хот сит) и ему показываются результаты действий противников. Отряды не
принадлежат к какому-либо игроку и каждый игрок может отдавать приказы
любому отряду.&lt;&#x2F;p&gt;
&lt;p&gt;Строчек кода на все ушло ~3800.&lt;&#x2F;p&gt;
&lt;p&gt;Собирается под линуксом на ночной сборке компилятора Ржавчины. Настроена
автосборка на travis-ci.org и я стараюсь не давать коду отстать от
ночной сборки компилятора больше, чем на день.&lt;&#x2F;p&gt;
&lt;p&gt;Исходники хранятся на гитхабе &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;marauder&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;marauder&lt;&#x2F;a&gt;, для
текстур и моделей отдельный репозиторий -
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;marauder-data&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;marauder-data&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Вооооот, так что делать мне еще очень и очень и очень много. :)&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
